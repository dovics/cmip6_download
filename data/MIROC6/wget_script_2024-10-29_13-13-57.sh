#!/bin/bash
##############################################################################
# ESG Federation download script
#
# Template version: 1.2
# Generated by localhost - 2024/10/28 22:13:58
# Search URL: http://localhost:8080/esg-search/wget?dataset_id=CMIP6.ScenarioMIP.MIROC.MIROC6.ssp126.r1i1p1f1.day.pr.gn.v20191016|esgf-data1.llnl.gov,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp126.r3i1p1f1.day.rsds.gn.v20191016|esgf-data1.llnl.gov,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp126.r1i1p1f1.day.tas.gn.v20191016|esgf-data1.llnl.gov,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp126.r2i1p1f1.day.tasmax.gn.v20191016|esgf-data1.llnl.gov,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp126.r2i1p1f1.day.tasmin.gn.v20191016|esgf-data1.llnl.gov,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp126.r3i1p1f1.day.hur.gn.v20191016|esgf-data1.llnl.gov,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp126.r40i1p1f1.day.sfcWind.gn.v20200817|esgf-data1.llnl.gov
#
###############################################################################
# first be sure it's bash... anything out of bash or sh will break
# and the test will assure we are not using sh instead of bash
if [ $BASH ] && [ `basename $BASH` != bash ]; then
    echo "######## This is a bash script! ##############" 
    echo "Change the execution bit 'chmod u+x $0' or start with 'bash $0' instead of sh."
    echo "Trying to recover automatically..."
    sleep 1
    /bin/bash $0 $@
    exit $?
fi

version=1.3.2
CACHE_FILE=.$(basename $0).status
openId=
search_url='http://localhost:8080/esg-search/wget?dataset_id=CMIP6.ScenarioMIP.MIROC.MIROC6.ssp126.r1i1p1f1.day.pr.gn.v20191016|esgf-data1.llnl.gov,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp126.r3i1p1f1.day.rsds.gn.v20191016|esgf-data1.llnl.gov,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp126.r1i1p1f1.day.tas.gn.v20191016|esgf-data1.llnl.gov,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp126.r2i1p1f1.day.tasmax.gn.v20191016|esgf-data1.llnl.gov,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp126.r2i1p1f1.day.tasmin.gn.v20191016|esgf-data1.llnl.gov,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp126.r3i1p1f1.day.hur.gn.v20191016|esgf-data1.llnl.gov,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp126.r40i1p1f1.day.sfcWind.gn.v20200817|esgf-data1.llnl.gov'

#These are the embedded files to be downloaded
download_files="$(cat <<EOF--dataset.file.url.chksum_type.chksum
'pr_day_MIROC6_ssp126_r1i1p1f1_gn_20150101-20241231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/pr/gn/v20191016/pr_day_MIROC6_ssp126_r1i1p1f1_gn_20150101-20241231.nc' 'SHA256' '79e365eeb0f7c5fbf8b720b0ede8973028d792844f9f5e65b806e8fa1f815080'
'pr_day_MIROC6_ssp126_r1i1p1f1_gn_20250101-20341231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/pr/gn/v20191016/pr_day_MIROC6_ssp126_r1i1p1f1_gn_20250101-20341231.nc' 'SHA256' '9c11f7115e30698e876462ed23f178c1498b0bba5b7a3489650a858eeac78ec2'
'pr_day_MIROC6_ssp126_r1i1p1f1_gn_20350101-20441231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/pr/gn/v20191016/pr_day_MIROC6_ssp126_r1i1p1f1_gn_20350101-20441231.nc' 'SHA256' '682585fcff282a91319e19ea910c41535bdf2b020b8246c1905964a743e461a3'
'pr_day_MIROC6_ssp126_r1i1p1f1_gn_20450101-20541231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/pr/gn/v20191016/pr_day_MIROC6_ssp126_r1i1p1f1_gn_20450101-20541231.nc' 'SHA256' 'a52ac21de772f7f00cad8298b450b84f138d3d0ea48464fa736996d2f101630d'
'pr_day_MIROC6_ssp126_r1i1p1f1_gn_20550101-20641231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/pr/gn/v20191016/pr_day_MIROC6_ssp126_r1i1p1f1_gn_20550101-20641231.nc' 'SHA256' '3d89269e5e42cff755dc86f859c36773fe64875820ed29ba0aa3c7e8c17a8616'
'pr_day_MIROC6_ssp126_r1i1p1f1_gn_20650101-20741231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/pr/gn/v20191016/pr_day_MIROC6_ssp126_r1i1p1f1_gn_20650101-20741231.nc' 'SHA256' '121288004faa242bbc31c1de43030cd29c8dc30cb57e8a02aeb24d3d831d812c'
'pr_day_MIROC6_ssp126_r1i1p1f1_gn_20750101-20841231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/pr/gn/v20191016/pr_day_MIROC6_ssp126_r1i1p1f1_gn_20750101-20841231.nc' 'SHA256' '796b01302ed0c3d1d47258fdc1aeef89ddeb469f6b26c9c7c0ec692b5268acd6'
'pr_day_MIROC6_ssp126_r1i1p1f1_gn_20850101-20941231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/pr/gn/v20191016/pr_day_MIROC6_ssp126_r1i1p1f1_gn_20850101-20941231.nc' 'SHA256' '23e4e3488354e27c6bb0d2069dbef2d581db639e1057f70f629f66b923fd0a68'
'pr_day_MIROC6_ssp126_r1i1p1f1_gn_20950101-21001231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/pr/gn/v20191016/pr_day_MIROC6_ssp126_r1i1p1f1_gn_20950101-21001231.nc' 'SHA256' 'ad7bc44a96bb2431f3cb4d0b1c993f72701a5c04f6ae4e0752d9566e92d9f662'
'tas_day_MIROC6_ssp126_r1i1p1f1_gn_20150101-20241231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/tas/gn/v20191016/tas_day_MIROC6_ssp126_r1i1p1f1_gn_20150101-20241231.nc' 'SHA256' '0fa8b3ea7e1e032400cc469d6d0ceac0f28bb24cacd10f60b6cb8683565763a0'
'tas_day_MIROC6_ssp126_r1i1p1f1_gn_20250101-20341231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/tas/gn/v20191016/tas_day_MIROC6_ssp126_r1i1p1f1_gn_20250101-20341231.nc' 'SHA256' '482fd1ec6b6ccb4636a5b97baee0cc28dc285e7d5007fc091539246b62e96be6'
'tas_day_MIROC6_ssp126_r1i1p1f1_gn_20350101-20441231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/tas/gn/v20191016/tas_day_MIROC6_ssp126_r1i1p1f1_gn_20350101-20441231.nc' 'SHA256' '64e9c2968a46a38aa7b70af373980cb08a2176f4e59a77dbcffc31744ca0ee80'
'tas_day_MIROC6_ssp126_r1i1p1f1_gn_20450101-20541231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/tas/gn/v20191016/tas_day_MIROC6_ssp126_r1i1p1f1_gn_20450101-20541231.nc' 'SHA256' 'aae390d12c6e035126a595ee7185e48570687bb19c6babfbb46bb182329e71a1'
'tas_day_MIROC6_ssp126_r1i1p1f1_gn_20550101-20641231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/tas/gn/v20191016/tas_day_MIROC6_ssp126_r1i1p1f1_gn_20550101-20641231.nc' 'SHA256' '8ec5354f7c67695a63d092e04f6b0d97b88c0de2f1269714f8136b951351555d'
'tas_day_MIROC6_ssp126_r1i1p1f1_gn_20650101-20741231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/tas/gn/v20191016/tas_day_MIROC6_ssp126_r1i1p1f1_gn_20650101-20741231.nc' 'SHA256' '2d14904b04d074c46f7cf4fcc990c55dfba82e19dccbf7c46310486151349c9f'
'tas_day_MIROC6_ssp126_r1i1p1f1_gn_20750101-20841231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/tas/gn/v20191016/tas_day_MIROC6_ssp126_r1i1p1f1_gn_20750101-20841231.nc' 'SHA256' 'c598a5013a9fa405db53ba35747cb8925665083d57d4345e781d3ec078f5442d'
'tas_day_MIROC6_ssp126_r1i1p1f1_gn_20850101-20941231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/tas/gn/v20191016/tas_day_MIROC6_ssp126_r1i1p1f1_gn_20850101-20941231.nc' 'SHA256' '1e9eb550d1a49dbf326df18521e358b44a084a5f52393e90b3683a071d8bf40c'
'tas_day_MIROC6_ssp126_r1i1p1f1_gn_20950101-21001231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/tas/gn/v20191016/tas_day_MIROC6_ssp126_r1i1p1f1_gn_20950101-21001231.nc' 'SHA256' '8c67972087fadc10ce3d7dba07752061b132f31cda45e41a94e2cd749ba80de2'
'tasmax_day_MIROC6_ssp126_r2i1p1f1_gn_20150101-20241231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r2i1p1f1/day/tasmax/gn/v20191016/tasmax_day_MIROC6_ssp126_r2i1p1f1_gn_20150101-20241231.nc' 'SHA256' 'b12c132ccd304d6700156742fd2f62be723c131220d75654df10edaa745fe882'
'tasmax_day_MIROC6_ssp126_r2i1p1f1_gn_20250101-20341231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r2i1p1f1/day/tasmax/gn/v20191016/tasmax_day_MIROC6_ssp126_r2i1p1f1_gn_20250101-20341231.nc' 'SHA256' '5ae7870b5517594f5abd66ace4b59333b11d0f803f5528b9ee60cdd9703b738e'
'tasmax_day_MIROC6_ssp126_r2i1p1f1_gn_20350101-20441231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r2i1p1f1/day/tasmax/gn/v20191016/tasmax_day_MIROC6_ssp126_r2i1p1f1_gn_20350101-20441231.nc' 'SHA256' '1dffee6e0644cda212d473e2c8413656142951b896097111696b3d522702959f'
'tasmax_day_MIROC6_ssp126_r2i1p1f1_gn_20450101-20541231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r2i1p1f1/day/tasmax/gn/v20191016/tasmax_day_MIROC6_ssp126_r2i1p1f1_gn_20450101-20541231.nc' 'SHA256' '8632d3681c183857a17b2ff2f15a38e252fd4d2b115de1a9e479e194f87c24a0'
'tasmax_day_MIROC6_ssp126_r2i1p1f1_gn_20550101-20641231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r2i1p1f1/day/tasmax/gn/v20191016/tasmax_day_MIROC6_ssp126_r2i1p1f1_gn_20550101-20641231.nc' 'SHA256' 'fc5cea2311d1eaf9371a20881ebe63c10ea98308b00e61790eab924a79d23b3e'
'tasmax_day_MIROC6_ssp126_r2i1p1f1_gn_20650101-20741231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r2i1p1f1/day/tasmax/gn/v20191016/tasmax_day_MIROC6_ssp126_r2i1p1f1_gn_20650101-20741231.nc' 'SHA256' 'bbec1e99aab7c8d569a50ee6ec83c375e8fcb6f6a0d3f5eafb7020c4685612d6'
'tasmax_day_MIROC6_ssp126_r2i1p1f1_gn_20750101-20841231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r2i1p1f1/day/tasmax/gn/v20191016/tasmax_day_MIROC6_ssp126_r2i1p1f1_gn_20750101-20841231.nc' 'SHA256' '15d88d5faf6acd3b0270390a25740bed3d03b9fa78408886953d02f983abd7bc'
'tasmax_day_MIROC6_ssp126_r2i1p1f1_gn_20850101-20941231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r2i1p1f1/day/tasmax/gn/v20191016/tasmax_day_MIROC6_ssp126_r2i1p1f1_gn_20850101-20941231.nc' 'SHA256' 'eb86728e16cb89eb283cda54c47171ee0922f63c6497470c1d4dbdabe62a4eca'
'tasmax_day_MIROC6_ssp126_r2i1p1f1_gn_20950101-21001231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r2i1p1f1/day/tasmax/gn/v20191016/tasmax_day_MIROC6_ssp126_r2i1p1f1_gn_20950101-21001231.nc' 'SHA256' '4b6345d88befd695b9c5ae9149be0666b1e3c257c813a851a5899eb14a23c05f'
'tasmin_day_MIROC6_ssp126_r2i1p1f1_gn_20150101-20241231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r2i1p1f1/day/tasmin/gn/v20191016/tasmin_day_MIROC6_ssp126_r2i1p1f1_gn_20150101-20241231.nc' 'SHA256' '8450668be6ec5c581e8fa9d56dd7c1ec56a92d07343452bf59b3371d7aaff98a'
'tasmin_day_MIROC6_ssp126_r2i1p1f1_gn_20250101-20341231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r2i1p1f1/day/tasmin/gn/v20191016/tasmin_day_MIROC6_ssp126_r2i1p1f1_gn_20250101-20341231.nc' 'SHA256' '71ac7d282090fe8d87db3362d4b81d021c05626e3ef34851ffbcff9cf17ea6e2'
'tasmin_day_MIROC6_ssp126_r2i1p1f1_gn_20350101-20441231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r2i1p1f1/day/tasmin/gn/v20191016/tasmin_day_MIROC6_ssp126_r2i1p1f1_gn_20350101-20441231.nc' 'SHA256' '71fed80efb8c7fc670cfbe9d5207f4a9aeceae4606ed8a624224764b74c812f6'
'tasmin_day_MIROC6_ssp126_r2i1p1f1_gn_20450101-20541231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r2i1p1f1/day/tasmin/gn/v20191016/tasmin_day_MIROC6_ssp126_r2i1p1f1_gn_20450101-20541231.nc' 'SHA256' '7a3d6b5ce61832a5b4ab9a21c13cd6b70b43c928158e4eef4f392cc905dc38f2'
'tasmin_day_MIROC6_ssp126_r2i1p1f1_gn_20550101-20641231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r2i1p1f1/day/tasmin/gn/v20191016/tasmin_day_MIROC6_ssp126_r2i1p1f1_gn_20550101-20641231.nc' 'SHA256' '776b0b985a86d43cf69c98cf8acbfc2a40a097cce4a00d3affe394d9c70e1c1b'
'tasmin_day_MIROC6_ssp126_r2i1p1f1_gn_20650101-20741231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r2i1p1f1/day/tasmin/gn/v20191016/tasmin_day_MIROC6_ssp126_r2i1p1f1_gn_20650101-20741231.nc' 'SHA256' '4074e98e70e3e1d1f78af1a3ff29626e9ae133021e68a1c543650826db175a75'
'tasmin_day_MIROC6_ssp126_r2i1p1f1_gn_20750101-20841231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r2i1p1f1/day/tasmin/gn/v20191016/tasmin_day_MIROC6_ssp126_r2i1p1f1_gn_20750101-20841231.nc' 'SHA256' '36cb65f64ebef89e4c67a66379edc24bad80a5fbb2e5ade9e8e00793d8befe5c'
'tasmin_day_MIROC6_ssp126_r2i1p1f1_gn_20850101-20941231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r2i1p1f1/day/tasmin/gn/v20191016/tasmin_day_MIROC6_ssp126_r2i1p1f1_gn_20850101-20941231.nc' 'SHA256' '21c1b2c0c19398de846e61e654508d47cec45210da0f9399735de08e818bcb39'
'tasmin_day_MIROC6_ssp126_r2i1p1f1_gn_20950101-21001231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r2i1p1f1/day/tasmin/gn/v20191016/tasmin_day_MIROC6_ssp126_r2i1p1f1_gn_20950101-21001231.nc' 'SHA256' 'fdaf8538b83c60f1d24753dbe12e178dfb58aedb8ee7c2b4a72ea76bdecde5eb'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20150101-20151231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20150101-20151231.nc' 'SHA256' 'd8b3448997f993bdf8aa308cef220a7069ef6e63099d189830c3f9ba36b150d4'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20160101-20161231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20160101-20161231.nc' 'SHA256' '342f6119ef52adfb9021243ffd0953240e292904218e0d28ec01cf8f3129c45c'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20170101-20171231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20170101-20171231.nc' 'SHA256' '20d551203119b4e38d6923fddcad98b3e3bd5d99d2021f967d90e2b14947022c'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20180101-20181231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20180101-20181231.nc' 'SHA256' '7ec87f1efd8d10f3f0683d5b40218bf1a55004e87c8b2a5b447fbcc045fc8172'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20190101-20191231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20190101-20191231.nc' 'SHA256' '0ea55a06e2aa5deab9990faf30a5e6fb29ce782d8ac01e13e82d7e37c994c935'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20200101-20201231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20200101-20201231.nc' 'SHA256' '1212133dc226085ee6b4c474d5f93d986de514546607b1f4d7c6ecc36d4975b3'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20210101-20211231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20210101-20211231.nc' 'SHA256' '7b6e1593c37af7e624e336b7677372b61844eea526dc10583e752043ec9abb73'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20220101-20221231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20220101-20221231.nc' 'SHA256' '322d390c683134d9f672301ce2636462ba0a188ad6295b876f344fab6d4ee34a'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20230101-20231231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20230101-20231231.nc' 'SHA256' 'd69efff8737bca245ab2cdc18f0912fb94c4a2984baa6944ded402de4a87ce07'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20240101-20241231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20240101-20241231.nc' 'SHA256' '661ae4621fc5b47081bddd6698b3b4e8b11ed77beae6bf5d3704e260640ecba5'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20250101-20251231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20250101-20251231.nc' 'SHA256' '202202c03b1703ebf72964be8962e870aee1de718c2859efcee21e315899a037'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20260101-20261231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20260101-20261231.nc' 'SHA256' '6d7dd0c47496019a4a4eb78a1f50f00c1bc05af736bbe1c96f3afdf5c0df05d0'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20270101-20271231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20270101-20271231.nc' 'SHA256' 'de8c3c9d7b53e8501bf8b6d59dd182208d2209eb02f8c6d307568fe05c7c0e58'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20280101-20281231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20280101-20281231.nc' 'SHA256' 'db08ecb8dd7c9c5826c0e00a363f68ec5edac2fd0e1aa229a37da6f0f0c63f06'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20290101-20291231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20290101-20291231.nc' 'SHA256' 'e433596de31ebb77192029c64e85b8d304084d15cc540a8106bcd4da04bccc86'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20300101-20301231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20300101-20301231.nc' 'SHA256' 'f61bb10def1671af065a3d8eff48718cdcb36eb88bc3105d63c99c145f4a21fa'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20310101-20311231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20310101-20311231.nc' 'SHA256' '4d31a266b3ab17019c8154643ac887f26fed0cb3ab69a07f5dac141d8d85c8b8'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20320101-20321231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20320101-20321231.nc' 'SHA256' '2ff171b01593657c701c423be0cf5df71f5c3e705ddee33c19be21c23ed35f5c'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20330101-20331231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20330101-20331231.nc' 'SHA256' '7a7f6e42cc794bf273b334c1ca6e051a9dba9867fa2e1683dcf356e16429a2f9'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20340101-20341231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20340101-20341231.nc' 'SHA256' '6171e46e981dee1d8c40fe147a2a10da5e97ea8bdbd28bb79b20cfaaa9f605a7'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20350101-20351231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20350101-20351231.nc' 'SHA256' '8e1805f6fa48b7f19904f7e2395649a1d297fe4d1276d74d04d04e856c57b828'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20360101-20361231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20360101-20361231.nc' 'SHA256' 'f1b8c81ace6c6ce65af3f55af816b4ab3f26de59245e6fd9534c7141aa17f773'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20370101-20371231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20370101-20371231.nc' 'SHA256' 'b281c3ec61baccf0ac0d49ec31676a4ef2321920116e990e51bb7e10ab2dcb65'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20380101-20381231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20380101-20381231.nc' 'SHA256' '1ba26656b3bb6fb048c7988e67b33e95640137de27927019fd70d237e18073db'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20390101-20391231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20390101-20391231.nc' 'SHA256' 'ff98dcddcb306ea0b5df9b9801f80dea361076a11fe2545dc9164f1d982e68fc'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20400101-20401231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20400101-20401231.nc' 'SHA256' 'a677a238c8f008b1f6a8b3b7e8ff53e4ca481ea9631c880528e62f7632f342d5'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20410101-20411231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20410101-20411231.nc' 'SHA256' '0da0702101f7077348583670fe403cd9c8e260c7e6ba513c656925665f6bc61e'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20420101-20421231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20420101-20421231.nc' 'SHA256' '3bafcf3445f07c036f0841fadcf3ee7a6e213b4a44923b53e062e789c61f3d57'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20430101-20431231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20430101-20431231.nc' 'SHA256' '68cfd518cb7b405706edf7bebeaa7bbb19e09b40455cdb2e1c9f3e0d11781be8'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20440101-20441231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20440101-20441231.nc' 'SHA256' 'a75705b743b3fa86c1e51cac7bcc97c97e3f6b60914ed518b253334d886450ca'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20450101-20451231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20450101-20451231.nc' 'SHA256' 'c068e7cc23ac66d869d6bb285e4b85833108bec53d3b06ab27d58aad86ab44f5'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20460101-20461231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20460101-20461231.nc' 'SHA256' '628365a1b799121107b1c333a1d1c6be9a90b1fcfb03bfdaf8f8c42bfc04a845'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20470101-20471231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20470101-20471231.nc' 'SHA256' 'd7cad34bc04c603a338e266e80d34fe3646de0164eab1f01cd453b5c8b48f6f5'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20480101-20481231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20480101-20481231.nc' 'SHA256' 'd8a8e8b40997cf07e0c536fa5f40055b0569fc31f466c125fe085b15a6d526e2'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20490101-20491231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20490101-20491231.nc' 'SHA256' '67da4418ee50279778adbe518209fadb83380f2506ee8523c8e397fba1fb1e47'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20500101-20501231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20500101-20501231.nc' 'SHA256' '2f8093e1eba9ca11e76f24739df746ad6b395bd1caa76325ed6c9282b527d5aa'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20510101-20511231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20510101-20511231.nc' 'SHA256' 'e80acac55f5c70f7fe604a9768b36521c6cc813aabc6551095795ec716b5f734'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20520101-20521231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20520101-20521231.nc' 'SHA256' 'ffd50d630b5e4c9fe45370246f9f0987883fac7896dc0158f57dec395d349f0b'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20530101-20531231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20530101-20531231.nc' 'SHA256' '3ad652cea276923dd072461d99649f2c3b12e34b47cf67ed445c0f8c92d8df4b'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20540101-20541231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20540101-20541231.nc' 'SHA256' 'f0759f002c30fe0146cec97ee03b8c61e9dea9adb4a0a713b018b3163466f43a'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20550101-20551231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20550101-20551231.nc' 'SHA256' '691982c439d3f6eb45c2e685520279d5496255ddad90d7c85cd5b61d15c8dc38'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20560101-20561231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20560101-20561231.nc' 'SHA256' '22915e194550fba933f07e08985313510c3a73b49f84e9e4f42b2dcb59b29e6a'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20570101-20571231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20570101-20571231.nc' 'SHA256' '717b500a96d470ab2fe052e50021a780ef7016f4fc0a33165adb3683689afbe6'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20580101-20581231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20580101-20581231.nc' 'SHA256' 'edad2dcc24cbda44c7fb83a70b2a93684f4fd31c78e6ea7efc8cedfa64d5f8d8'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20590101-20591231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20590101-20591231.nc' 'SHA256' '58af545b88456c75cfaa0058b83f4151b826a5454600d9a669837158da00c7fd'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20600101-20601231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20600101-20601231.nc' 'SHA256' 'a49f7e0b3cf5418a734b2c59bdcbe72001f2ec9609e90880fbd26baf233c7106'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20610101-20611231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20610101-20611231.nc' 'SHA256' 'b4ec029563cc4ebeabe2837a639344164c25404cf626b5ef627fa17fe8610780'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20620101-20621231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20620101-20621231.nc' 'SHA256' '642f0cef9be38bb8089f088d1c2ec194109acf1918ea4c4d7aba1e3a1daf8a3c'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20630101-20631231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20630101-20631231.nc' 'SHA256' '75a1ed492e3827fcc59a12f5468bae20da71853ce8594f03e41d8700a2cb7649'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20640101-20641231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20640101-20641231.nc' 'SHA256' '4dfbd19f4df31f3e4f6df0a4e8f5213d4f45b940ed269f201581da81c85ca77b'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20650101-20651231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20650101-20651231.nc' 'SHA256' '185af179e28ba4f6bc23da53e9de510e0a0642fd4343af3e28fca311ddb12a8e'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20660101-20661231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20660101-20661231.nc' 'SHA256' 'c65fc3fe42ff63f9898d8fef5a8443550a48c11bcc60ae137df5881b9f1517cf'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20670101-20671231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20670101-20671231.nc' 'SHA256' '8d57e6812719fda66480a202425ef75a2d268280c83d38b7441575a874e556c4'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20680101-20681231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20680101-20681231.nc' 'SHA256' 'd4680a76ee4efa3378723b575b6593aa6e7ceda66c4437b6b41d293a02a1bf96'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20690101-20691231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20690101-20691231.nc' 'SHA256' 'ba7659beec43151d100079fad70555f1e2f437ad366372f22564d63318532c8f'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20700101-20701231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20700101-20701231.nc' 'SHA256' '0cb87a20518d1098957e3bad27238bfb215a5d3f5772b4d3ba92b5b248000ad8'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20710101-20711231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20710101-20711231.nc' 'SHA256' 'b931b4dba7c5a96829aae5993bee1aa1d4de43395a6e149b56e44a965c2ad01b'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20720101-20721231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20720101-20721231.nc' 'SHA256' '584d8f66c90c22fb0f45f9eeda1ee51e4858addc6d77bb5052cc5d76d73693b4'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20730101-20731231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20730101-20731231.nc' 'SHA256' '2b99ffe90226b982e2a29e3f629a6c32e453b876e8b9a346f93d26fba11343c5'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20740101-20741231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20740101-20741231.nc' 'SHA256' '1e8f2b00efc631f815919d78b99102b0f679d7192877f23a274f27e7a235574d'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20750101-20751231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20750101-20751231.nc' 'SHA256' 'd3ae227a2c9ebee0ec2d46cbac5cb35cd09cabba614b56193a44c832a44a228c'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20760101-20761231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20760101-20761231.nc' 'SHA256' 'a737934fa9b2ee46cf29b43a4338002bf5f976f603cad288bc3c947fee8bbdaa'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20770101-20771231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20770101-20771231.nc' 'SHA256' '4e15eb818da3990edfd39165a6d97c662c0a05bc791c64f10d95165203a0206d'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20780101-20781231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20780101-20781231.nc' 'SHA256' 'eeee4d14a645eb7903e55fd2a1a7874b0207b458359b761fec002802e758ae7e'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20790101-20791231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20790101-20791231.nc' 'SHA256' 'd0c397e2b345590e6d4010979a694b9ad1a1f4b40f514ff354763501dba47984'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20800101-20801231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20800101-20801231.nc' 'SHA256' '1e9b858e6019e3fb108bc1394547a131df056e68c876d9e4aaf45b54616e5d1f'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20810101-20811231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20810101-20811231.nc' 'SHA256' 'bf04b6a2cbdeee98e57d1debdc6357cdd0c3496e99fab473cb561ddd2d74f9ba'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20820101-20821231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20820101-20821231.nc' 'SHA256' 'bdee7a089127a9d2f1fdb1c16951c2ff9ffb5cbdcefab7bf36680090599765b3'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20830101-20831231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20830101-20831231.nc' 'SHA256' '1d40ccf73ff2bdc81c824a1259478f8e53279f75520a9cf5a2331ae0af963f0b'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20840101-20841231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20840101-20841231.nc' 'SHA256' '52374a3f07a606e30a73d4616a1823e9370d8c16ad24bed00025cfe000cb5014'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20850101-20851231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20850101-20851231.nc' 'SHA256' 'a6881099fd1fbdea2e0c521c3bafe2fe7030c77d84e9f2fe04034497c4ab1cff'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20860101-20861231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20860101-20861231.nc' 'SHA256' '97204ef1aa70ba82d0af04fef51ba722a23e4e6dc1e3e254f07d647f8f5fce63'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20870101-20871231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20870101-20871231.nc' 'SHA256' '0c1dcc2f9c641bcd918b44c424b4413131ea63f2a827d24ca42ad15b17ee78d5'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20880101-20881231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20880101-20881231.nc' 'SHA256' 'b33aa73b7b4074d503a92c520048e5b82c41658002a21f217064d77152a01986'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20890101-20891231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20890101-20891231.nc' 'SHA256' '16ac7d92b719876935b73d8ef8375448c131355e767ece865f930e5e5ee61661'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20900101-20901231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20900101-20901231.nc' 'SHA256' 'd8784edf6c2963182d74464d7e3099282533c6f1ecf71def8a1fdb79673acac4'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20910101-20911231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20910101-20911231.nc' 'SHA256' '58bbc4b97abf6d2fe3b6aa95398607c046aea82364a831485fd6b8bdf88e7fa9'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20920101-20921231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20920101-20921231.nc' 'SHA256' '120166490755f66b7b538c0bedc48338d6172464f66d104113ed922578dfd7e0'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20930101-20931231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20930101-20931231.nc' 'SHA256' '6782c79d6d855be294066978546bdc2af4a4d7965106e15bc1b1f9ddb6501f41'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20940101-20941231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20940101-20941231.nc' 'SHA256' 'fcd74455a25df3f42633ebba81ff62cce988637e478ccf587fd2ba93c3fdc332'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20950101-20951231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20950101-20951231.nc' 'SHA256' '1e32d329f600555879a73843c90013d5fb1002a22680cfb7c8a9ae2a7972dfe0'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20960101-20961231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20960101-20961231.nc' 'SHA256' 'dbd2396a0f214ef0723f4bc3a3f89b44700e356e24f6b008695f1bbfca405e24'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20970101-20971231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20970101-20971231.nc' 'SHA256' 'd32f824ae8c7bea10c1e79f9df34b472497260bfac45252eda35faad21c44f6d'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20980101-20981231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20980101-20981231.nc' 'SHA256' '7191f5bf5b1981f7e4400a887b6fae4fa5ac01b7d9fc1e125446f5622aad7889'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_20990101-20991231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_20990101-20991231.nc' 'SHA256' '5af897aba628a2feab4cf7e927b883c0c4c29a025774df892aba715736c469a0'
'hur_day_MIROC6_ssp126_r3i1p1f1_gn_21000101-21001231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r3i1p1f1_gn_21000101-21001231.nc' 'SHA256' '994c4ab9b886bd61984b2c1f7b9e4757acd4278c1b0d7f4fcf70d3c0eee074e8'
'rsds_day_MIROC6_ssp126_r3i1p1f1_gn_20150101-20241231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/rsds/gn/v20191016/rsds_day_MIROC6_ssp126_r3i1p1f1_gn_20150101-20241231.nc' 'SHA256' '73869265d62c8d6d9797191858f14bebf6a676586e332bdd53cd647f4679b273'
'rsds_day_MIROC6_ssp126_r3i1p1f1_gn_20250101-20341231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/rsds/gn/v20191016/rsds_day_MIROC6_ssp126_r3i1p1f1_gn_20250101-20341231.nc' 'SHA256' '5e1c13d9530e273f4e012886da69c3044e6998a358b0db3f80febaec70d63445'
'rsds_day_MIROC6_ssp126_r3i1p1f1_gn_20350101-20441231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/rsds/gn/v20191016/rsds_day_MIROC6_ssp126_r3i1p1f1_gn_20350101-20441231.nc' 'SHA256' '8719b6da45220ee43bda0918231f6ad0838a705a32cb2277c99f99c3e7677b88'
'rsds_day_MIROC6_ssp126_r3i1p1f1_gn_20450101-20541231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/rsds/gn/v20191016/rsds_day_MIROC6_ssp126_r3i1p1f1_gn_20450101-20541231.nc' 'SHA256' 'b02671cd3b74c00314cb7e23da386aeb552c43a3a3fa451f0ea7e44461a5bff2'
'rsds_day_MIROC6_ssp126_r3i1p1f1_gn_20550101-20641231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/rsds/gn/v20191016/rsds_day_MIROC6_ssp126_r3i1p1f1_gn_20550101-20641231.nc' 'SHA256' 'c51df50a5540144a9d1bd88640ec81e411a000b144722b1ef47fd4e7e94eec39'
'rsds_day_MIROC6_ssp126_r3i1p1f1_gn_20650101-20741231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/rsds/gn/v20191016/rsds_day_MIROC6_ssp126_r3i1p1f1_gn_20650101-20741231.nc' 'SHA256' '61e41a9c15d1eb5d45785dc4cd1d51f53a3554567ba69facd6faeffc45a8f6b7'
'rsds_day_MIROC6_ssp126_r3i1p1f1_gn_20750101-20841231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/rsds/gn/v20191016/rsds_day_MIROC6_ssp126_r3i1p1f1_gn_20750101-20841231.nc' 'SHA256' '2a6a28751218f2fb00a4bbca4efab43752e9a55b8a17df7156b068c65616e581'
'rsds_day_MIROC6_ssp126_r3i1p1f1_gn_20850101-20941231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/rsds/gn/v20191016/rsds_day_MIROC6_ssp126_r3i1p1f1_gn_20850101-20941231.nc' 'SHA256' 'b58131936639eb93eacefb5949cff925312c5156fe2c343178fb4bae2cd4896c'
'rsds_day_MIROC6_ssp126_r3i1p1f1_gn_20950101-21001231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r3i1p1f1/day/rsds/gn/v20191016/rsds_day_MIROC6_ssp126_r3i1p1f1_gn_20950101-21001231.nc' 'SHA256' '905f815d65d47ed5af00498a26b21ccd697c549fbecea04be711760f699d5d0f'
'sfcWind_day_MIROC6_ssp126_r40i1p1f1_gn_20150101-20241231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r40i1p1f1/day/sfcWind/gn/v20200817/sfcWind_day_MIROC6_ssp126_r40i1p1f1_gn_20150101-20241231.nc' 'SHA256' '9c37eec1ccce87efcfc9a3d31f103c420fe6483398bec26dd68b07643be04fc4'
'sfcWind_day_MIROC6_ssp126_r40i1p1f1_gn_20250101-20341231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r40i1p1f1/day/sfcWind/gn/v20200817/sfcWind_day_MIROC6_ssp126_r40i1p1f1_gn_20250101-20341231.nc' 'SHA256' '896b7a608c4707755f82365d195d448ada0b17afc4969665882279844b28b57f'
'sfcWind_day_MIROC6_ssp126_r40i1p1f1_gn_20350101-20441231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r40i1p1f1/day/sfcWind/gn/v20200817/sfcWind_day_MIROC6_ssp126_r40i1p1f1_gn_20350101-20441231.nc' 'SHA256' 'abd1a6985a946eec06c555a82109627819b60cf6f7d15e1e6a6647f6059707b7'
'sfcWind_day_MIROC6_ssp126_r40i1p1f1_gn_20450101-20541231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r40i1p1f1/day/sfcWind/gn/v20200817/sfcWind_day_MIROC6_ssp126_r40i1p1f1_gn_20450101-20541231.nc' 'SHA256' '05028622af04c3f655a477aaf6e25715116fd6b27da008a43bcf1eec6e64bef0'
'sfcWind_day_MIROC6_ssp126_r40i1p1f1_gn_20550101-20641231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r40i1p1f1/day/sfcWind/gn/v20200817/sfcWind_day_MIROC6_ssp126_r40i1p1f1_gn_20550101-20641231.nc' 'SHA256' '298e16543796fae288c7ffe9fac43b4e4e354e1fdf7ba181bd9d60ab9f0dcb95'
'sfcWind_day_MIROC6_ssp126_r40i1p1f1_gn_20650101-20741231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r40i1p1f1/day/sfcWind/gn/v20200817/sfcWind_day_MIROC6_ssp126_r40i1p1f1_gn_20650101-20741231.nc' 'SHA256' '0008ca2004d356934f78df4765de7aeda4ec06bf43fde2366f16382dfaa3f3ba'
'sfcWind_day_MIROC6_ssp126_r40i1p1f1_gn_20750101-20841231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r40i1p1f1/day/sfcWind/gn/v20200817/sfcWind_day_MIROC6_ssp126_r40i1p1f1_gn_20750101-20841231.nc' 'SHA256' 'e64b2d9f33db1bf4fbc4b326734bd3a058e8e7196ced63e27affb64798b51a90'
'sfcWind_day_MIROC6_ssp126_r40i1p1f1_gn_20850101-20941231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r40i1p1f1/day/sfcWind/gn/v20200817/sfcWind_day_MIROC6_ssp126_r40i1p1f1_gn_20850101-20941231.nc' 'SHA256' 'd71ead51331303142afaa6efe9f4fa4a62b7f207b162c308978f44995d42e792'
'sfcWind_day_MIROC6_ssp126_r40i1p1f1_gn_20950101-21001231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r40i1p1f1/day/sfcWind/gn/v20200817/sfcWind_day_MIROC6_ssp126_r40i1p1f1_gn_20950101-21001231.nc' 'SHA256' '59081ebe544e52c88d36d9d6e151b6f5ef58278c9383cf4ad3fd03f9ada9a065'
EOF--dataset.file.url.chksum_type.chksum
)"

# ESG_HOME should point to the directory containing ESG credentials.
#   Default is $HOME/.esg
ESG_HOME=${ESG_HOME:-$HOME/.esg}
[[ -d $ESG_HOME ]] || mkdir -p $ESG_HOME

ESG_CREDENTIALS=${X509_USER_PROXY:-$ESG_HOME/credentials.pem}
ESG_CERT_DIR=${X509_CERT_DIR:-$ESG_HOME/certificates}
MYPROXY_STATUS=$HOME/.MyProxyLogon
COOKIE_JAR=$ESG_HOME/cookies
MYPROXY_GETCERT=$ESG_HOME/getcert.jar
CERT_EXPIRATION_WARNING=$((60 * 60 * 8))   #Eight hour (in seconds)

WGET_TRUSTED_CERTIFICATES=$ESG_HOME/certificates


# Configure checking of server SSL certificates.
#   Disabling server certificate checking can resolve problems with myproxy
#   servers being out of sync with datanodes.
CHECK_SERVER_CERT=${CHECK_SERVER_CERT:-Yes}

check_os() {
    local os_name=$(uname | awk '{print $1}')
    case ${os_name} in
        Linux)
            ((debug)) && echo "Linux operating system detected"
            LINUX=1
            MACOSX=0
            ;;
        Darwin)
            ((debug)) && echo "Mac OS X operating system detected"
            LINUX=0
            MACOSX=1
            ;;
        *)
            echo "Unrecognized OS [${os_name}]"
            return 1
            ;;
    esac
    return 0
}

#taken from http://stackoverflow.com/a/4025065/1182464
vercomp () {
    if [[ $1 == $2 ]]
    then
        return 0
    fi
    local IFS=.
    local i ver1=($1) ver2=($2)
    # fill empty fields in ver1 with zeros
    for ((i=${#ver1[@]}; i<${#ver2[@]}; i++))
    do
        ver1[i]=0
    done
    for ((i=0; i<${#ver1[@]}; i++))
    do
        if [[ -z ${ver2[i]} ]]
        then
            # fill empty fields in ver2 with zeros
            ver2[i]=0
        fi
        if ((10#${ver1[i]} > 10#${ver2[i]}))
        then
            return 1
        fi
        if ((10#${ver1[i]} < 10#${ver2[i]}))
        then
            return 2
        fi
    done
    return 0
}

check_commands() {
    #check wget
    local MIN_WGET_VERSION=1.10
    vercomp $(wget -V | sed -n 's/^.* \([1-9]\.[0-9.]*\) .*$/\1/p') $MIN_WGET_VERSION
    case $? in
        2) #lower
            wget -V
            echo
            echo "** ERROR: wget version is too old. Use version $MIN_WGET_VERSION or greater. **" >&2
            exit 1
    esac
}

usage() {
    echo "Usage: $(basename $0) [flags] [openid] [username]"
    echo "Flags is one of:"
    sed -n '/^while getopts/,/^done/  s/^\([^)]*\)[^#]*#\(.*$\)/\1 \2/p' $0
    echo
    echo "This command stores the states of the downloads in .$0.status"
    echo "For more information check the website: http://esgf.org/wiki/ESGF_wget"
}

#defaults
debug=0
clean_work=1

#parse flags
while getopts ':c:pfF:o:w:isuUndvqhHI:T' OPT; do
    case $OPT in
        H) skip_security=1 && use_http_sec=1;; #       : Authenticate with OpenID (username,) and password, without the need for a certificate.
        T) force_TLSv1=1;;              #       : Forces wget to use TLSv1. 
        c) ESG_CREDENTIALS="$OPTARG";;  #<cert> : use this certificate for authentication.
        f) force=1;;                    #       : force certificate retrieval (defaults to only once per day); for certificate-less authentication (see -H option), this flag will force login and refresh cookies.
        F) input_file="$OPTARG";;       #<file> : read input from file instead of the embedded one (use - to read from stdin)
        o) openId="$OPTARG";;           #<openid>: Provide OpenID instead of interactively asking for it.
        I) username_supplied="$OPTARG";;    #<user_id> : Explicitly set user ID.  By default, the user ID is extracted from the last component of the OpenID URL.  Use this flag to override this behaviour.                   
        w) output="$OPTARG";;           #<file> : Write embedded files into a file and exit
        i) insecure=1;;                 #       : set insecure mode, i.e. don't check server certificate
        s) skip_security=1 && use_cookies_for_http_basic_auth_start=1;;            #       : completely skip security. It will only work if the accessed data is not secured at all. -- works only if the accessed data is unsecured or a certificate exists or cookies are saved (latter applies to -H option only).
        u) update=1;;                   #       : Issue the search again and see if something has changed.
        U) update_files=1;;             #       : Update files from server overwriting local ones (detect with -u)
        n) dry_run=1;;                  #       : Don't download any files, just report.
        p) clean_work=0;;               #       : preserve data that failed checksum
        d) verbose=1;debug=1;;          #       : display debug information
        v) verbose=1;;                  #       : be more verbose
        q) quiet=1;;                    #       : be less verbose
        h) usage && exit 0;;            #       : displays this help
        \?) echo "Unknown option '$OPTARG'" >&2 && usage && exit 1;;
        \:) echo "Missing parameter for flag '$OPTARG'" >&2 && usage && exit 1;;
    esac
done
shift $(($OPTIND - 1))

#setup input as desired by the user
if [[ "$input_file" ]]; then
    if [[ "$input_file" == '-' ]]; then
        download_files="$(cat)" #read from STDIN
        exec 0</dev/tty #reopen STDIN as cat closed it
    else
        download_files="$(cat $input_file)" #read from file
    fi
fi

#if -w (output) was selected write file and finish:
if [[ "$output" ]]; then
    #check the file
    if [[ -f "$output" ]]; then
        read -p "Overwrite existing file $output? (y/N) " answ
        case $answ in y|Y|yes|Yes);; *) echo "Aborting then..."; exit 0;; esac
    fi
    echo "$download_files">$output
    exit
fi


#assure we have everything we need
check_commands

if ((update)); then
    echo "Checking the server for changes..."
    new_wget="$(wget "$search_url" -qO -)"
    compare_cmd="grep -vE '^(# Generated by|# Search URL|search_url=)'"
    if diff -q <(eval $compare_cmd<<<"$new_wget") <(eval $compare_cmd $0) >/dev/null; then
        echo "No changes detected."
    else
        echo "Wget was changed. Dowloading. (old renamed to $0.old.#N)"
        counter=0
        while [[ -f $0.old.$counter ]]; do ((counter++)); done
        mv $0 $0.old.$counter
        echo "$new_wget" > $0
    fi
    exit 0      
fi


##############################################################################
check_java() {
    if ! type java >& /dev/null; then
        echo "Java could not be found." >&2
        return 1
    fi
    if java -version 2>&1|grep openjdk >/dev/null; then
        openjdk=1;
    else
        openjdk=0;
    fi
    jversion=($(jversion=$(java -version 2>&1 | awk '/version/ {gsub("\"","");print $3}'); echo ${jversion//./ }))
    mVer=${jversion[1]}
    if [ $openjdk -eq 1 ]; then
        mVer=${jversion[0]}
        if ((mVer<5)); then
            echo "Openjdk detected. Version 9+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    else
    
        if ((mVer<5)); then
            echo "Java version 1.5+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    fi
}

check_myproxy_logon() {
    if ! type myproxy-logon >& /dev/null; then
	echo "myproxy-logon could not be found." >&2
	return 1
    fi
    echo "myproxy-logon found" >&2
}

proxy_to_java() {
    local proxy_user proxy_pass proxy_server proxy_port
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$http_proxy)
    local JAVA_PROXY=
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyPort=$proxy_port"
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$https_proxy)
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyPort=$proxy_port"
    
    echo "$JAVA_PROXY"
}

# get certificates from github
get_certificates() {
    # don't if this was already done today
    [[ -z $force && "$(find $ESG_CERT_DIR -type d -mtime -1 2>/dev/null)" ]] && return 0
    echo -n "Retrieving Federation Certificates..." >&2

    if ! wget -O $ESG_HOME/esg-truststore.ts --no-check-certificate https://github.com/ESGF/esgf-dist/raw/master/installer/certs/esg-truststore.ts; then
        echo "Could not fetch esg-truststore";
        return 1
    fi
    
    if ! wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar -O - -q | tar x -C $ESG_HOME; then
        #certificates tarred into esg_trusted_certificates. (if it breaks, let the user know why
        wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar
        echo "Could't update certs!" >&2
        return 1
    else
        #if here everythng went fine. Replace old cert with this ones    
        [[ -d $ESG_CERT_DIR ]] && rm -r $ESG_CERT_DIR || mkdir -p $(dirname $ESG_CERT_DIR)
        mv $ESG_HOME/esg_trusted_certificates $ESG_CERT_DIR
        touch $ESG_CERT_DIR
        echo "done!" >&2
    fi

}

# Retrieve ESG credentials
unset pass
get_credentials() {
    if check_java
    then
	use_java=1
    else	
	use_java=0
	echo "No suitable java for obtaining certificate - checking for myproxy-logon instead" >&2
	check_myproxy_logon || exit 1
    fi
    #get all certificates
    get_certificates

    if [[ -z "$(find $MYPROXY_GETCERT -type f -mtime -1 2>/dev/null)" ]]; then
        echo -n "(Downloading $MYPROXY_GETCERT... "
        mkdir -p $(dirname $MYPROXY_GETCERT)
        if wget -q --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/getcert.jar -O $MYPROXY_GETCERT;then
            echo 'done)'
            touch $MYPROXY_GETCERT
        else
            echo 'failed)'
        fi
    fi

    #if the user already defined one, use it
    if [[ -z $openId ]]; then
        #try to parse the last valid value if any
        [[ -f "$MYPROXY_STATUS" ]] && openId=$(awk -F= '/^OpenID/ {gsub("\\\\", ""); print $2}' $MYPROXY_STATUS)
        if [[ -z $openId ]]; then
            #no OpenID, we need to ask the user
            echo -n "Please give your OpenID (Example: https://myserver/example/username) ? "
        else
            #Allow the user to change it if desired
            echo -n "Please give your OpenID (hit ENTER to accept default: $openId)? "
        fi
        read -e
        [[ "$REPLY" ]] && openId="$REPLY"
    else
        ((verbose)) && echo "Using user defined OpenID $openId (to change use -o <open_id>)"
    fi

    if grep -q ceda.ac.uk <<<$openId; then
        username=${openId##*/}
        echo -n "Please give your username if different [$username]: "
        read -e
        [[ "$REPLY" ]] && username="$REPLY"
    fi
    


    if [ $use_java -eq 1 ]
    then
        local args=
        #get password
	[[ ! "$pass" ]] && read -sp "MyProxy Password? " pass
        [[ "$openId" ]] && args=$args" --oid $openId"
        [[ "$pass" ]] && args=$args" -P $pass"
        [[ "$username" ]] && args=$args" -l $username"
        
        echo -n $'\nRetrieving Credentials...' >&2
        if ! java $(proxy_to_java) -jar $MYPROXY_GETCERT $args --ca-directory $ESG_CERT_DIR --output $ESG_CREDENTIALS ; then        
            echo "Certificate could not be retrieved"
            exit 1
        fi
        echo "done!" >&2
    else
        args=`openid_to_myproxy_args $openId $username` || exit 1
        if ! myproxy-logon $args -b -o $ESG_CREDENTIALS
	then
            echo "Certificate could not be retrieved"
	    exit 1
        fi
	cp $HOME/.globus/certificates/* $ESG_CERT_DIR/	
    fi
}

openid_to_myproxy_args() {
  python - <<EOF || exit 1
import sys
import re
import xml.etree.ElementTree as ET
import urllib2
openid = "$1"
username = "$2" or re.sub(".*/", "", openid)
e = ET.parse(urllib2.urlopen(openid))
servs = [el for el in e.getiterator() if el.tag.endswith("Service")]
for serv in servs:
    servinfo = dict([(re.sub(".*}", "", c.tag), c.text)
                     for c in serv.getchildren()])
    try:
        if servinfo["Type"].endswith("myproxy-service"):
            m = re.match("socket://(.*):(.*)", servinfo["URI"])
            if m:
                host = m.group(1)
                port = m.group(2)
                print "-s %s -p %s -l %s" % (host, port, username)
                break
    except KeyError:
        continue
else:
    sys.stderr.write("myproxy service could not be found\n")
    sys.exit(1)
EOF
}

# check the certificate validity
check_cert() {
    if [[ ! -f "$ESG_CERT" || $force ]]; then
        #not there, just get it
        get_credentials
    elif which openssl &>/dev/null; then
        #check openssl and certificate
        if ! openssl x509 -checkend $CERT_EXPIRATION_WARNING -noout -in $ESG_CERT 2>/dev/null; then
            echo "The certificate expires in less than $((CERT_EXPIRATION_WARNING / 60 / 60)) hour(s). Renewing..."
            get_credentials
        else
            #ok, certificate is fine
            return 0
        fi
    fi
}

#
# Detect ESG credentials
#
find_credentials() {

    #is X509_USER_PROXY or $HOME/.esg/credential.pem
    if [[ -f "$ESG_CREDENTIALS" ]]; then
        # file found, proceed.
        ESG_CERT="$ESG_CREDENTIALS"
        ESG_KEY="$ESG_CREDENTIALS"
    elif [[ -f "$X509_USER_CERT" && -f "$X509_USER_KEY" ]]; then
        # second try, use these certificates.
        ESG_CERT="$X509_USER_CERT"
        ESG_KEY="$X509_USER_KEY"
    else
        # If credentials are not present, just point to where they should go 
        echo "No ESG Credentials found in $ESG_CREDENTIALS" >&2
            ESG_CERT="$ESG_CREDENTIALS"
            ESG_KEY="$ESG_CREDENTIALS"
            #they will be retrieved later one
    fi


    #chek openssl and certificate
    if (which openssl &>/dev/null); then
        if ( openssl version | grep 'OpenSSL 1\.0' ); then
            echo '** WARNING: ESGF Host certificate checking might not be compatible with OpenSSL 1.0+'
        fi
        check_cert || { (($?==1)); exit 1; }
    fi
    
    if [[ $CHECK_SERVER_CERT == "Yes" ]]; then
        [[ -d "$ESG_CERT_DIR" ]] || { echo "CA certs not found. Aborting."; exit 1; }
        PKI_WGET_OPTS="--ca-directory=$ESG_CERT_DIR"
    fi

    #some wget version complain if there's no file present
    [[ -f $COOKIE_JAR ]] || touch $COOKIE_JAR

    PKI_WGET_OPTS="$PKI_WGET_OPTS --certificate=$ESG_CERT --private-key=$ESG_KEY --save-cookies=$COOKIE_JAR --load-cookies=$COOKIE_JAR --ca-certificate=$ESG_CERT"

}

check_chksum() {
    local file="$1"
    local chk_type=$2
    local chk_value=$3
    local local_chksum=Unknown

    case $chk_type in
        md5) local_chksum=$(md5sum_ $file | cut -f1 -d" ");;
        sha256) local_chksum=$(sha256sum_ $file|awk '{print $1}'|cut -d ' ' -f1);;
        *) echo "Can't verify checksum." && return 0;;
    esac

    #verify
    ((debug)) && echo "local:$local_chksum vs remote:$chk_value" >&2
    echo $local_chksum
}

#Our own md5sum function call that takes into account machines that don't have md5sum but do have md5 (i.e. mac os x)
md5sum_() {
    hash -r
    if type md5sum >& /dev/null; then
        echo $(md5sum $@)
    else
        echo $(md5 $@ | sed -n 's/MD5[ ]*\(.*\)[^=]*=[ ]*\(.*$\)/\2 \1/p')
    fi
}

#Our own sha256sum function call that takes into account machines that don't have sha256sum but do have sha2 (i.e. mac os x)
sha256sum_() {
    hash -r
    if type sha256sum >& /dev/null; then
        echo $(sha256sum $@)
    elif type shasum >& /dev/null; then
        echo $(shasum -a 256 $@)
    else
        echo $(sha2 -q -256 $@)
    fi
}

get_mod_time_() {
    if ((MACOSX)); then
        #on a mac modtime is stat -f %m <file>
        echo "$(stat -f %m $@)"
    else
        #on linux (cygwin) modtime is stat -c %Y <file>
        echo "$(stat -c %Y $@)"
    fi
    return 0;
}

remove_from_cache() {
    local entry="$1"
    local tmp_file="$(grep -ve "^$entry" "$CACHE_FILE")"
    echo "$tmp_file" > "$CACHE_FILE"
    unset cached
}

#Download data from node using cookies and not certificates.
download_http_sec()
{
  #The data to be downloaded.
  data=" $url"
  filename="$file"  

  #Wget args.
  if ((insecure)) 
  then
   wget_args=" --no-check-certificate --cookies=on  --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt " 
  else
   wget_args=" --ca-directory=$WGET_TRUSTED_CERTIFICATES --cookies=on --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt "  
  fi 

  if ((use_cookies_for_http_basic_auth_start)) || ((use_cookies_for_http_basic_auth)) 
  then
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
  fi
  
  if((force_TLSv1))
  then
   wget_args=" $wget_args"" --secure-protocol=TLSv1 "
  fi
  
  
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
    wget_args="$wget_args $ESGF_WGET_OPTS"
  fi  
  

  #use cookies for the next downloads
  use_cookies_for_http_basic_auth=1;
   
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "wget $wget_args $data\n"
  fi


  #Try to download the data. 
  command="wget $wget_args -O $filename $data"
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
      
  #Extract orp service from url ?
  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" == 1 )) && 
  if  echo "$http_resp" | grep -q "/esg-orp/"      
  then
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   orp_service=$(echo "$urls" | tr '\n' ' ' | cut -d' ' -f 2)


   #Use cookies for transaction with orp.
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
   
   #Download data using either http basic auth or http login form.
   if [[ "$openid_c" == */openid/  || "$openid_c" == */openid ]]
   then
    download_http_sec_open_id
   else
    download_http_sec_decide_service
   fi
  else  
   if    echo "$http_resp" | grep -q "401 Unauthorized"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || echo "$http_resp" | grep -q "Connection timed out."  \
      || echo "$http_resp" | grep -q "no-check-certificate"  \
      || (( $cmd_exit_status != 0 ))      
   then 
    echo "ERROR : http request to OpenID Relying Party service failed."
    failed=1
   fi
  fi
}


#Function that decides which implementaion of idp to use.
download_http_sec_decide_service()
{
  #find claimed id

  pos=$(echo "$openid_c" | egrep -o '/' | wc -l)
  username_c=$(echo "$openid_c"  | cut -d'/' -f "$(($pos + 1))")
  esgf_uri=$(echo "$openid_c" | egrep -o '/esgf-idp/openid/')

  host=$(echo "$openid_c"  | cut -d'/' -f 3)
  #test ceda first.

  if [[ -z "$esgf_uri" ]]
  then
   openid_c_tmp="https://""$host""/openid/"
  else
   openid_c_tmp="https://""$host""/esgf-idp/openid/" 
  fi

  command="wget "$openid_c_tmp" --no-check-certificate ${force_TLSv1:+--secure-protocol=TLSv1} -O-"
        
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
   command="$command $ESGF_WGET_OPTS"
  fi  
          
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "$command\n"
  fi
            

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
  

  if    echo "$http_resp" | grep -q "[application/xrds+xml]"  \
     && echo "$http_resp" | grep -q "200 OK"  \
     && (( cmd_exit_status == 0 ))       
  then
   openid_c=$openid_c_tmp
   download_http_sec_open_id
  else
   if [[ -z "$esgf_uri" ]]
   then
    echo "ERROR : HTTP request to OpenID Relying Party service failed."
    failed=1
   else
   download_http_sec_cl_id
   fi
  fi
}


download_http_sec_retry()
{
  echo -e "\nRetrying....\n"
  #Retry in case that last redirect did not work, this happens with older version of wget.
  command="wget $wget_args $data"
      
  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi   
   
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"

  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
   
  if    echo "$http_resp" | grep -q "401 Unauthorized"  \
     || echo "$http_resp" | grep -q "403: Forbidden"  \
     || echo "$http_resp" | grep -q "Connection timed out."  \
     || echo "$http_resp" | grep -q "no-check-certificate"  \
     || (( $cmd_exit_status != 0 ))      
  then 
   echo -e "\nERROR : Retry failed.\n"
   #rm "$filename"
   failed=1
  fi #if retry failed.
}

#Function for downloading data using the claimed id.
download_http_sec_cl_id()
{
  #Http request for sending openid to the orp service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\"  $wget_args -O- https://$orp_service/esg-orp/j_spring_openid_security_check.htm "

  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "wget $command\n"
  fi 
  
  
  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"

  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
    
  
  #Extract orp service from openid ?
  #Evaluate response.If redirected to idp service send the credentials.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( redirects == 2  )) && 
  if  echo "$http_resp" | grep -q "login.htm"  && (( cmd_exit_status == 0 ))   
  then 
  
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   idp_service=$(echo "$urls"  | tr '\n' ' ' | cut -d' ' -f 2) 
      
   command="wget --post-data  password=\"$password_c\" $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$idp_service/esgf-idp/idp/login.htm"
   

   #Debug message.
   if  ((debug))
   then
    echo -e "Executing:\n"
    echo -e "wget $command\n"
   fi 

   #Execution of command.
   http_resp=$(eval $command  2>&1)
   cmd_exit_status="$?"
      
   if ((debug))
   then
    echo -e "\nHTTP response:\n $http_resp\n"
   fi 
        
   #Evaluate response. 
   #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
   #(( "$redirects" != 5 )) \ 
   if    echo "$http_resp" | grep -q "text/html"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || (( cmd_exit_status != 0 ))        
   then 
    rm "$filename"
    download_http_sec_retry
   fi
 
  else
   echo "ERROR : HTTP request to OpenID Provider service failed."
   failed=1
  fi #if redirected to idp.  
}



download_http_sec_open_id()
{
  #Http request for sending openid to the orp web service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\" --header=\"esgf-idea-agent-type:basic_auth\" --http-user=\"$username_c\" --http-password=\"$password_c\"  $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$orp_service/esg-orp/j_spring_openid_security_check.htm "


  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi 

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 

  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" != 7 )) ||
  if   echo "$http_resp" | grep -q "text/html"  ||  (( $cmd_exit_status != 0 ))   
  then
   rm "$filename"
   download_http_sec_retry     
  fi #if error during http basic authentication. 
  
}


download() {
    wget="wget ${insecure:+--no-check-certificate} ${quiet:+-q} ${quiet:--v} -c ${force_TLSv1:+--secure-protocol=TLSv1} $PKI_WGET_OPTS"
    
    while read line
    do
        # read csv here document into proper variables
        eval $(awk -F "' '" '{$0=substr($0,2,length($0)-2); $3=tolower($3); print "file=\""$1"\";url=\""$2"\";chksum_type=\""$3"\";chksum=\""$4"\""}' <(echo $line) )

        #Process the file
        echo -n "$file ..."

        #get the cached entry if any.
        cached="$(grep -e "^$file" "$CACHE_FILE")"
        
        #if we have the cache entry but no file, clean it.
        if [[ ! -f $file && "$cached" ]]; then
            #the file was removed, clean the cache
            remove_from_cache "$file"
            unset cached
        fi
        
        #check it wasn't modified
        if [[ -n "$cached" && "$(get_mod_time_ $file)" == $(echo "$cached" | cut -d ' ' -f2) ]]; then
                    if [[ "$chksum" == "$(echo "$cached" | cut -d ' ' -f3)" ]]; then
                echo "Already downloaded and verified"
                continue
            elif ((update_files)); then
                #user want's to overwrite newer files
                rm $file
                remove_from_cache "$file"
                unset cached
            else
                #file on server is different from what we have. 
                echo "WARNING: The remote file was changed (probably a new version is available). Use -U to Update/overwrite"
                continue
            fi
        fi
        unset chksum_err_value chksum_err_count
        
        while : ; do
            # (if we had the file size, we could check before trying to complete)
            echo "Downloading"
            [[ ! -d "$(dirname "$file")" ]] && mkdir -p "$(dirname "$file")"
            if ((dry_run)); then
                #all important info was already displayed, if in dry_run mode just abort
                #No status will be stored
                break
            else
                if ((use_http_sec))
                then
                 download_http_sec
                 if ((failed))
                 then
                  break
                 fi
                else
                 $wget -O "$file" $url || { failed=1; break; }  
                fi                
            fi

            #check if file is there
            if [[ -f $file ]]; then
                ((debug)) && echo file found
                if [[ ! "$chksum" ]]; then
                    echo "Checksum not provided, can't verify file integrity"
                    break
                fi
                result_chksum=$(check_chksum "$file" $chksum_type $chksum)
                if [[ "$result_chksum" != "$chksum" ]]; then
                    echo "  $chksum_type failed!"
                    if ((clean_work)); then
                        if !((chksum_err_count)); then
                                chksum_err_value=$result_chksum
                                chksum_err_count=2
                            elif ((checksum_err_count--)); then
                                if [[ "$result_chksum" != "$chksum_err_value" ]]; then
                                    #this is a real transmission problem
                                    chksum_err_value=$result_chksum
                                    chksum_err_count=2
                                fi
                            else
                                #ok if here we keep getting the same "different" checksum
                                echo "The file returns always a different checksum!"
                                echo "Contact the data owner to verify what is happening."
                                echo
                                sleep 1
                                break
                            fi
                        
                            rm $file
                            #try again
                            echo -n "  re-trying..."
                            continue
                    else
                            echo "  don't use -p or remove manually."
                    fi
                else
                    echo "  $chksum_type ok. done!"
                    echo "$file" $(get_mod_time_ "$file") $chksum >> $CACHE_FILE
                fi
            fi
            #done!
            break
        done
        
        if ((failed)); then
            echo "download failed"
            # most common failure is certificate expiration, so check this
            #if we have the pasword we can retrigger download
            ((!skip_security)) && [[ "$pass" ]] && check_cert
            unset failed
        fi
        
done <<<"$download_files"

}

dedup_cache_() {
    local file=${1:-${CACHE_FILE}}
    ((debug)) && echo "dedup'ing cache ${file} ..."
    local tmp=$(LC_ALL='C' sort  -r -k1,2 $file | awk '!($1 in a) {a[$1];print $0}' | sort -k2,2)
    ((DEBUG)) && echo "$tmp"
    echo "$tmp" > $file
    ((debug)) && echo "(cache dedup'ed)"
}

http_basic_auth_func_info_message()
{
  echo  "********************************************************************************"
  echo  "*                                                                              *"
  echo  "* Note that new functionality to allow authentication without the need for     *"
  echo  "* certificates is available with this version of the wget script.  To enable,  *"
  echo  "* use the \"-H\" option and enter your OpenID and password when prompted:        *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -H [options...]                                     *"
  echo  "*                                                                              *"
  echo  "* For a full description of the available options use the help option:         *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -h                                                  *"
  echo  "*                                                                              *"
  echo  "********************************************************************************"
}

#
# MAIN
#

if ((!use_http_sec))
then 
 http_basic_auth_func_info_message
fi

echo "Running $(basename $0) version: $version"
((verbose)) && echo "we use other tools in here, don't try to user their proposed 'options' directly"
echo "Use $(basename $0) -h for help."$'\n'

((debug)) && cat<<EOF
** Debug info **
ESG_HOME=$ESG_HOME
ESG_CREDENTIALS=$ESG_CREDENTIALS
ESG_CERT_DIR=$ESG_CERT_DIR
** -- ** -- ** -- ** --

EOF


cat <<'EOF-MESSAGE'
Script created for 140 file(s)
(The count won't match if you manually edit this file!)



EOF-MESSAGE
sleep 1

check_os
((!skip_security)) && find_credentials

if ((use_http_sec))
then 
     
 if (( ! insecure))
 then 
  get_certificates
 fi

 #Cookies folder.
 COOKIES_FOLDER="$ESG_HOME/wget_cookies"
 
 if (( force ))
 then
  if [ -d $COOKIES_FOLDER ] 
  then
   rm -rf $COOKIES_FOLDER
  fi
 fi

 #Create cookies folder. 
 if [[ ! -d $COOKIES_FOLDER ]] 
 then
  mkdir $COOKIES_FOLDER
 fi
 
 if((! use_cookies_for_http_basic_auth_start))
 then

  #Read openid.
  if [[ ! -z "$openId" ]]
  then
   openid_c="$openId"
  elif ( (("$#" > 1)) || (("$#" == 1)) ) 
  then
   openid_c=$1
  else
   read -p    "Enter your openid : " openid_c
  fi
  
  
  #Read username.
  if [[ ! -z "$username_supplied" ]]
  then
   username_c="$username_supplied"
  elif (("$#" == 2))
  then
   username_c=$2
  elif [[ "$openid_c" == */openid/ || "$openid_c" == */openid ]]
  then
   read -p    "Enter username : " username_c
  fi
  
  #Read password.
  read -s -p "Enter password : " password_c
  echo -e "\n"

 fi #use cookies

fi #use_http_sec 


#do we have old results? Create the file if not
[ ! -f $CACHE_FILE ] && echo "#filename mtime checksum" > $CACHE_FILE && chmod 666 $CACHE_FILE

#clean the force parameter if here (at htis point we already have the certificate)
unset force

download

dedup_cache_


echo "done"
