#!/bin/bash
##############################################################################
# ESG Federation download script
#
# Template version: 1.2
# Generated by localhost - 2025/01/03 05:53:37
# Search URL: http://localhost:8080/esg-search/wget?dataset_id=CMIP6.ScenarioMIP.MIROC.MIROC6.ssp585.r15i1p1f1.day.tasmax.gn.v20200623|esgf-data02.diasjp.net,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp585.r15i1p1f1.day.tas.gn.v20200623|esgf-data02.diasjp.net,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp585.r15i1p1f1.day.sfcWind.gn.v20200623|esgf-data02.diasjp.net,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp585.r15i1p1f1.day.tasmin.gn.v20200623|esgf-data02.diasjp.net,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp585.r1i1p1f1.day.rsds.gn.v20191016|esgf-data02.diasjp.net,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp585.r2i1p1f1.day.hur.gn.v20191016|esgf-data02.diasjp.net,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp585.r12i1p1f1.day.pr.gn.v20200623|esgf-data02.diasjp.net
#
###############################################################################
# first be sure it's bash... anything out of bash or sh will break
# and the test will assure we are not using sh instead of bash
if [ $BASH ] && [ `basename $BASH` != bash ]; then
    echo "######## This is a bash script! ##############" 
    echo "Change the execution bit 'chmod u+x $0' or start with 'bash $0' instead of sh."
    echo "Trying to recover automatically..."
    sleep 1
    /bin/bash $0 $@
    exit $?
fi

version=1.3.2
CACHE_FILE=.$(basename $0).status
openId=
search_url='http://localhost:8080/esg-search/wget?dataset_id=CMIP6.ScenarioMIP.MIROC.MIROC6.ssp585.r15i1p1f1.day.tasmax.gn.v20200623|esgf-data02.diasjp.net,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp585.r15i1p1f1.day.tas.gn.v20200623|esgf-data02.diasjp.net,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp585.r15i1p1f1.day.sfcWind.gn.v20200623|esgf-data02.diasjp.net,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp585.r15i1p1f1.day.tasmin.gn.v20200623|esgf-data02.diasjp.net,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp585.r1i1p1f1.day.rsds.gn.v20191016|esgf-data02.diasjp.net,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp585.r2i1p1f1.day.hur.gn.v20191016|esgf-data02.diasjp.net,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp585.r12i1p1f1.day.pr.gn.v20200623|esgf-data02.diasjp.net'

#These are the embedded files to be downloaded
download_files="$(cat <<EOF--dataset.file.url.chksum_type.chksum
'pr_day_MIROC6_ssp585_r12i1p1f1_gn_20150101-20241231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r12i1p1f1/day/pr/gn/v20200623/pr_day_MIROC6_ssp585_r12i1p1f1_gn_20150101-20241231.nc' 'SHA256' '856e0f57b5afd583af1c248bd3c1480e54349444e6917afeb023957ba9ac14da'
'pr_day_MIROC6_ssp585_r12i1p1f1_gn_20250101-20341231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r12i1p1f1/day/pr/gn/v20200623/pr_day_MIROC6_ssp585_r12i1p1f1_gn_20250101-20341231.nc' 'SHA256' 'faf12911a83cfcbb18a26720a67b8c811fd272c7244c2927f37b9a5434058279'
'pr_day_MIROC6_ssp585_r12i1p1f1_gn_20350101-20441231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r12i1p1f1/day/pr/gn/v20200623/pr_day_MIROC6_ssp585_r12i1p1f1_gn_20350101-20441231.nc' 'SHA256' 'fa38d2acdda551f076f02083867407348f696e6cffde7b8f1224ac934d957b5f'
'pr_day_MIROC6_ssp585_r12i1p1f1_gn_20450101-20541231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r12i1p1f1/day/pr/gn/v20200623/pr_day_MIROC6_ssp585_r12i1p1f1_gn_20450101-20541231.nc' 'SHA256' '3fa06e66d892bc616765aea552e657c715b34209643d4ea5c014ea7f64950759'
'pr_day_MIROC6_ssp585_r12i1p1f1_gn_20550101-20641231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r12i1p1f1/day/pr/gn/v20200623/pr_day_MIROC6_ssp585_r12i1p1f1_gn_20550101-20641231.nc' 'SHA256' 'c26f1fddb1ae5c303fd45147bbd7f21d4a1e5e0b931672881e37e93ce307534a'
'pr_day_MIROC6_ssp585_r12i1p1f1_gn_20650101-20741231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r12i1p1f1/day/pr/gn/v20200623/pr_day_MIROC6_ssp585_r12i1p1f1_gn_20650101-20741231.nc' 'SHA256' '43a59d2a9642c5b8f5fcaebf958998b5f2d6173ed0f4742e4987988ab82c3f39'
'pr_day_MIROC6_ssp585_r12i1p1f1_gn_20750101-20841231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r12i1p1f1/day/pr/gn/v20200623/pr_day_MIROC6_ssp585_r12i1p1f1_gn_20750101-20841231.nc' 'SHA256' 'e8384fab4614fe2e9a380140ef397dc2461a3d12877e185c23232b1f1606f93e'
'pr_day_MIROC6_ssp585_r12i1p1f1_gn_20850101-20941231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r12i1p1f1/day/pr/gn/v20200623/pr_day_MIROC6_ssp585_r12i1p1f1_gn_20850101-20941231.nc' 'SHA256' '04c6ccf399ad1d963775ba06c3653375f8a5dd4cab2a94110c6d452e7d1b9a15'
'pr_day_MIROC6_ssp585_r12i1p1f1_gn_20950101-21001231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r12i1p1f1/day/pr/gn/v20200623/pr_day_MIROC6_ssp585_r12i1p1f1_gn_20950101-21001231.nc' 'SHA256' '34c32ea237d2b751f4c6bfe9e739053087d36bdd2069fd9d698182c3be4b305b'
'sfcWind_day_MIROC6_ssp585_r15i1p1f1_gn_20150101-20241231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r15i1p1f1/day/sfcWind/gn/v20200623/sfcWind_day_MIROC6_ssp585_r15i1p1f1_gn_20150101-20241231.nc' 'SHA256' '1cb00aa175abe5aceb858eb2f1a81721ff2049d66c4722f85148baf50e5b641f'
'sfcWind_day_MIROC6_ssp585_r15i1p1f1_gn_20250101-20341231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r15i1p1f1/day/sfcWind/gn/v20200623/sfcWind_day_MIROC6_ssp585_r15i1p1f1_gn_20250101-20341231.nc' 'SHA256' 'cb9f98579fe8b859452f3bb5a37270228907a950ac0de74a745ce040c8318775'
'sfcWind_day_MIROC6_ssp585_r15i1p1f1_gn_20350101-20441231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r15i1p1f1/day/sfcWind/gn/v20200623/sfcWind_day_MIROC6_ssp585_r15i1p1f1_gn_20350101-20441231.nc' 'SHA256' '6b50ccf23ba19c5338c756a77f1a45256859f73c9cb52cd9a096b97b11f540d3'
'sfcWind_day_MIROC6_ssp585_r15i1p1f1_gn_20450101-20541231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r15i1p1f1/day/sfcWind/gn/v20200623/sfcWind_day_MIROC6_ssp585_r15i1p1f1_gn_20450101-20541231.nc' 'SHA256' '0e64c8a478d3229f9d738e0538647cbed90e6c512fb0e4443b4795ea751e47de'
'sfcWind_day_MIROC6_ssp585_r15i1p1f1_gn_20550101-20641231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r15i1p1f1/day/sfcWind/gn/v20200623/sfcWind_day_MIROC6_ssp585_r15i1p1f1_gn_20550101-20641231.nc' 'SHA256' '14b088c0de658f3134b8cfa9d405b6571a982c99a26efb832336055d5f5d3c11'
'sfcWind_day_MIROC6_ssp585_r15i1p1f1_gn_20650101-20741231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r15i1p1f1/day/sfcWind/gn/v20200623/sfcWind_day_MIROC6_ssp585_r15i1p1f1_gn_20650101-20741231.nc' 'SHA256' 'b96c268ab1d86deca5121ad9c1cbc98eb1defb06e48133e7892f8385efd7c63b'
'sfcWind_day_MIROC6_ssp585_r15i1p1f1_gn_20750101-20841231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r15i1p1f1/day/sfcWind/gn/v20200623/sfcWind_day_MIROC6_ssp585_r15i1p1f1_gn_20750101-20841231.nc' 'SHA256' 'f139dadfa5c2de98330778ee30598e186f20ff13f8a1279422c7012c87369f30'
'sfcWind_day_MIROC6_ssp585_r15i1p1f1_gn_20850101-20941231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r15i1p1f1/day/sfcWind/gn/v20200623/sfcWind_day_MIROC6_ssp585_r15i1p1f1_gn_20850101-20941231.nc' 'SHA256' '268c7641a45470fe1ea81741e50c150f775279e5c230e395a5fd9dcd6b559623'
'sfcWind_day_MIROC6_ssp585_r15i1p1f1_gn_20950101-21001231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r15i1p1f1/day/sfcWind/gn/v20200623/sfcWind_day_MIROC6_ssp585_r15i1p1f1_gn_20950101-21001231.nc' 'SHA256' 'e9737ed23cf0ba94471e541a46240f7f83ce3471cb7647f669b62c37eb6f8313'
'tas_day_MIROC6_ssp585_r15i1p1f1_gn_20150101-20241231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r15i1p1f1/day/tas/gn/v20200623/tas_day_MIROC6_ssp585_r15i1p1f1_gn_20150101-20241231.nc' 'SHA256' '0c47fdca4e61d2b3533e66152c53c50274b9efe7a75606f59afc65e0fef31dda'
'tas_day_MIROC6_ssp585_r15i1p1f1_gn_20250101-20341231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r15i1p1f1/day/tas/gn/v20200623/tas_day_MIROC6_ssp585_r15i1p1f1_gn_20250101-20341231.nc' 'SHA256' 'f3d6bcda0a97f7bc36928ef9f9f2b67bc2a61b08c1388fea208b6f42ed5a48f1'
'tas_day_MIROC6_ssp585_r15i1p1f1_gn_20350101-20441231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r15i1p1f1/day/tas/gn/v20200623/tas_day_MIROC6_ssp585_r15i1p1f1_gn_20350101-20441231.nc' 'SHA256' '7872c1cf4de2eee46fd93cd504e456a1ccd78e47620e1b660aaff3adc7a867ef'
'tas_day_MIROC6_ssp585_r15i1p1f1_gn_20450101-20541231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r15i1p1f1/day/tas/gn/v20200623/tas_day_MIROC6_ssp585_r15i1p1f1_gn_20450101-20541231.nc' 'SHA256' '70bf8e3501590a8c6df93d06798694291e7e570044296f8604062d0d4c482954'
'tas_day_MIROC6_ssp585_r15i1p1f1_gn_20550101-20641231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r15i1p1f1/day/tas/gn/v20200623/tas_day_MIROC6_ssp585_r15i1p1f1_gn_20550101-20641231.nc' 'SHA256' '483078f915b97d5aca3410a0c096313c1e8e941fd3de2b7e169d946c443210e1'
'tas_day_MIROC6_ssp585_r15i1p1f1_gn_20650101-20741231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r15i1p1f1/day/tas/gn/v20200623/tas_day_MIROC6_ssp585_r15i1p1f1_gn_20650101-20741231.nc' 'SHA256' '24dde4cbecf401e27bb1a14b4e3c68cbb202c6984e4929e3078092b0972804c2'
'tas_day_MIROC6_ssp585_r15i1p1f1_gn_20750101-20841231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r15i1p1f1/day/tas/gn/v20200623/tas_day_MIROC6_ssp585_r15i1p1f1_gn_20750101-20841231.nc' 'SHA256' 'edd8c4cbc9d0ac839e117f88c448a60e2a1951f90cb21af1b8fca7ff6f49a347'
'tas_day_MIROC6_ssp585_r15i1p1f1_gn_20850101-20941231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r15i1p1f1/day/tas/gn/v20200623/tas_day_MIROC6_ssp585_r15i1p1f1_gn_20850101-20941231.nc' 'SHA256' '44b4f2ee2a38291e6814b261053ad6fd2b2e717e67a26ebe51bf2023b727229d'
'tas_day_MIROC6_ssp585_r15i1p1f1_gn_20950101-21001231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r15i1p1f1/day/tas/gn/v20200623/tas_day_MIROC6_ssp585_r15i1p1f1_gn_20950101-21001231.nc' 'SHA256' '025f0feb35448fff8a31992c82cdcc3156ab5888f5d822302acf1b0089b4efac'
'tasmax_day_MIROC6_ssp585_r15i1p1f1_gn_20150101-20241231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r15i1p1f1/day/tasmax/gn/v20200623/tasmax_day_MIROC6_ssp585_r15i1p1f1_gn_20150101-20241231.nc' 'SHA256' '749144b636d31f1b063798c6a0e619225069e721bacd4d5b5b42d5e036d51bde'
'tasmax_day_MIROC6_ssp585_r15i1p1f1_gn_20250101-20341231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r15i1p1f1/day/tasmax/gn/v20200623/tasmax_day_MIROC6_ssp585_r15i1p1f1_gn_20250101-20341231.nc' 'SHA256' '3e94dd33036e297c777113818e0fd4e06a918ce08429e1af57adcbd2ef3ac705'
'tasmax_day_MIROC6_ssp585_r15i1p1f1_gn_20350101-20441231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r15i1p1f1/day/tasmax/gn/v20200623/tasmax_day_MIROC6_ssp585_r15i1p1f1_gn_20350101-20441231.nc' 'SHA256' '4e71081838ae79cf012fe9a4160e3ad1698d1726327d2ebd7ab1dee3e7ce47ea'
'tasmax_day_MIROC6_ssp585_r15i1p1f1_gn_20450101-20541231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r15i1p1f1/day/tasmax/gn/v20200623/tasmax_day_MIROC6_ssp585_r15i1p1f1_gn_20450101-20541231.nc' 'SHA256' 'ef22e8634c3e449c793b99b7f36c3b62c08af06313adff70df9d21e2810b10ec'
'tasmax_day_MIROC6_ssp585_r15i1p1f1_gn_20550101-20641231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r15i1p1f1/day/tasmax/gn/v20200623/tasmax_day_MIROC6_ssp585_r15i1p1f1_gn_20550101-20641231.nc' 'SHA256' '2652ea8c85532d63c1058f42c8fbb8e627653f4681e2682b98937bcbe240d3c1'
'tasmax_day_MIROC6_ssp585_r15i1p1f1_gn_20650101-20741231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r15i1p1f1/day/tasmax/gn/v20200623/tasmax_day_MIROC6_ssp585_r15i1p1f1_gn_20650101-20741231.nc' 'SHA256' 'ad6372b300e3c4c27988c14832efcb662053f4b13a094707450d6e0bdc9f87ca'
'tasmax_day_MIROC6_ssp585_r15i1p1f1_gn_20750101-20841231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r15i1p1f1/day/tasmax/gn/v20200623/tasmax_day_MIROC6_ssp585_r15i1p1f1_gn_20750101-20841231.nc' 'SHA256' 'c0016c659c0faaed531985cb9c6bb9cf011141ad8c4826bab98c4bc1581a1f5f'
'tasmax_day_MIROC6_ssp585_r15i1p1f1_gn_20850101-20941231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r15i1p1f1/day/tasmax/gn/v20200623/tasmax_day_MIROC6_ssp585_r15i1p1f1_gn_20850101-20941231.nc' 'SHA256' '0557630639fc172f16fb6304f7720cdf976d496bcbb6dd0f795c476355e30587'
'tasmax_day_MIROC6_ssp585_r15i1p1f1_gn_20950101-21001231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r15i1p1f1/day/tasmax/gn/v20200623/tasmax_day_MIROC6_ssp585_r15i1p1f1_gn_20950101-21001231.nc' 'SHA256' '06d4860dcd0d53c920f1a158b665b2c6ad1ca95fe899f6b7bd358cbabe5d6a8c'
'tasmin_day_MIROC6_ssp585_r15i1p1f1_gn_20150101-20241231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r15i1p1f1/day/tasmin/gn/v20200623/tasmin_day_MIROC6_ssp585_r15i1p1f1_gn_20150101-20241231.nc' 'SHA256' '48a4bd7b4b2e272b3ee58ce4ae0c353559d1b373c2e0fd2918db0d8be357defa'
'tasmin_day_MIROC6_ssp585_r15i1p1f1_gn_20250101-20341231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r15i1p1f1/day/tasmin/gn/v20200623/tasmin_day_MIROC6_ssp585_r15i1p1f1_gn_20250101-20341231.nc' 'SHA256' '002c781ea9c72e07a400b9ceed7c1114ee9324554184713de9ba666499b8955f'
'tasmin_day_MIROC6_ssp585_r15i1p1f1_gn_20350101-20441231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r15i1p1f1/day/tasmin/gn/v20200623/tasmin_day_MIROC6_ssp585_r15i1p1f1_gn_20350101-20441231.nc' 'SHA256' 'a48b63a370fcf28f46e0b1105bdd935250064da977d99d6ec12c95a7aa5b7416'
'tasmin_day_MIROC6_ssp585_r15i1p1f1_gn_20450101-20541231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r15i1p1f1/day/tasmin/gn/v20200623/tasmin_day_MIROC6_ssp585_r15i1p1f1_gn_20450101-20541231.nc' 'SHA256' '5f38191198d7e1b1962898ac7eaf3224414d170b039f4c43134a387eed0e4a18'
'tasmin_day_MIROC6_ssp585_r15i1p1f1_gn_20550101-20641231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r15i1p1f1/day/tasmin/gn/v20200623/tasmin_day_MIROC6_ssp585_r15i1p1f1_gn_20550101-20641231.nc' 'SHA256' '9a2a3c1d7b9e5eb5356cbb955a4e9dd060060c0d5d93fbe647ebc3ee6b46dab7'
'tasmin_day_MIROC6_ssp585_r15i1p1f1_gn_20650101-20741231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r15i1p1f1/day/tasmin/gn/v20200623/tasmin_day_MIROC6_ssp585_r15i1p1f1_gn_20650101-20741231.nc' 'SHA256' '783f5ccae026e4a96fb9a8e66642e5e291f5c2fcbee174cc8ac2732d1d7867aa'
'tasmin_day_MIROC6_ssp585_r15i1p1f1_gn_20750101-20841231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r15i1p1f1/day/tasmin/gn/v20200623/tasmin_day_MIROC6_ssp585_r15i1p1f1_gn_20750101-20841231.nc' 'SHA256' '539b211a60b67fe01e80674d9c02aa3bd0aa6bf67bb801127dac2dd0a1e33099'
'tasmin_day_MIROC6_ssp585_r15i1p1f1_gn_20850101-20941231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r15i1p1f1/day/tasmin/gn/v20200623/tasmin_day_MIROC6_ssp585_r15i1p1f1_gn_20850101-20941231.nc' 'SHA256' 'd7f6c6c71032b342ab0c84f39582430b6083fc24dd8c000fdbf751d7f5a55d0f'
'tasmin_day_MIROC6_ssp585_r15i1p1f1_gn_20950101-21001231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r15i1p1f1/day/tasmin/gn/v20200623/tasmin_day_MIROC6_ssp585_r15i1p1f1_gn_20950101-21001231.nc' 'SHA256' '6f67515a10c069e84c6198a209a10ce65385a891b41b623f057fc408d165135f'
'rsds_day_MIROC6_ssp585_r1i1p1f1_gn_20150101-20241231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r1i1p1f1/day/rsds/gn/v20191016/rsds_day_MIROC6_ssp585_r1i1p1f1_gn_20150101-20241231.nc' 'SHA256' '790ae5046f015362782f284850f2fe6b0b6bc294306b3c2d6c266b08b595a4dc'
'rsds_day_MIROC6_ssp585_r1i1p1f1_gn_20250101-20341231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r1i1p1f1/day/rsds/gn/v20191016/rsds_day_MIROC6_ssp585_r1i1p1f1_gn_20250101-20341231.nc' 'SHA256' '152ef0c0695da99fe606510956c0480638b0f7df8957cb9444601653bc45ba17'
'rsds_day_MIROC6_ssp585_r1i1p1f1_gn_20350101-20441231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r1i1p1f1/day/rsds/gn/v20191016/rsds_day_MIROC6_ssp585_r1i1p1f1_gn_20350101-20441231.nc' 'SHA256' 'edadfe4be24550fae4523975eaa41b653e7caf21138882b96f904f7922429fe8'
'rsds_day_MIROC6_ssp585_r1i1p1f1_gn_20450101-20541231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r1i1p1f1/day/rsds/gn/v20191016/rsds_day_MIROC6_ssp585_r1i1p1f1_gn_20450101-20541231.nc' 'SHA256' '90f3a6ac57038d109b68e1ba3c73cf46ca7d32f65b185c9d5ed90669c3990b2f'
'rsds_day_MIROC6_ssp585_r1i1p1f1_gn_20550101-20641231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r1i1p1f1/day/rsds/gn/v20191016/rsds_day_MIROC6_ssp585_r1i1p1f1_gn_20550101-20641231.nc' 'SHA256' '41b03ab259dea1e9f8ce04d8d968f963cd46cd0bd2f7654db868e577d30cf510'
'rsds_day_MIROC6_ssp585_r1i1p1f1_gn_20650101-20741231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r1i1p1f1/day/rsds/gn/v20191016/rsds_day_MIROC6_ssp585_r1i1p1f1_gn_20650101-20741231.nc' 'SHA256' 'ba38daea46d50f0f47007b1d2c2b984fc8ea8d215688c3ebd77d16b9e6b0f02a'
'rsds_day_MIROC6_ssp585_r1i1p1f1_gn_20750101-20841231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r1i1p1f1/day/rsds/gn/v20191016/rsds_day_MIROC6_ssp585_r1i1p1f1_gn_20750101-20841231.nc' 'SHA256' '2cfbc2b9bdb4b22acfa8ea8997b05f39b1fd67765c02c1ca179c7e4749a9828a'
'rsds_day_MIROC6_ssp585_r1i1p1f1_gn_20850101-20941231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r1i1p1f1/day/rsds/gn/v20191016/rsds_day_MIROC6_ssp585_r1i1p1f1_gn_20850101-20941231.nc' 'SHA256' '1e07e925000020721cb05647b00d54ca3da34fd270c347d99df89f13dd739381'
'rsds_day_MIROC6_ssp585_r1i1p1f1_gn_20950101-21001231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r1i1p1f1/day/rsds/gn/v20191016/rsds_day_MIROC6_ssp585_r1i1p1f1_gn_20950101-21001231.nc' 'SHA256' '23e20efeb0e474941153a8bfcf04002c2614a726998b0acc0555721029fde71c'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20150101-20151231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20150101-20151231.nc' 'SHA256' '2c5e940d125fab1ccb2ad6dfcb16cb07623b6467607025031938bffbfc6bc3e4'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20160101-20161231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20160101-20161231.nc' 'SHA256' '18c9ecb155a0cee61fc795ad86cb81e86bb4a202f1bcb26c537648dac395b05b'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20170101-20171231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20170101-20171231.nc' 'SHA256' 'd71f183d9bd91282418f243d25ddf3131a76044c07f4537bca87ae06ece8e6e7'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20180101-20181231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20180101-20181231.nc' 'SHA256' '2c1e893b0bd833f65ca361b0d74c8079293fbe0052d5cb1ab769de7318aca3ab'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20190101-20191231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20190101-20191231.nc' 'SHA256' '43f05d69913c6c78f922d2d1b860bd6861aea3be1fd793be4175c19866b3e1f0'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20200101-20201231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20200101-20201231.nc' 'SHA256' '3ce7a8fd1dd57319a85f27bc91092089c60a1d8df544849c0b2ecf048400293f'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20210101-20211231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20210101-20211231.nc' 'SHA256' 'cef58eb54670ae8864d2f821b479766963011cf38aeb9810b072834ea307d7af'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20220101-20221231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20220101-20221231.nc' 'SHA256' '8aa8a400b6f4dfee6b25dbc09d1e28844ac6a896108a0d7467b25802705ac5d9'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20230101-20231231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20230101-20231231.nc' 'SHA256' 'b92e8e99bad555a5a37b20d2dd9f52c6d72e9dcad8b3c8eb638a9fdbd6a4eb2e'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20240101-20241231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20240101-20241231.nc' 'SHA256' '573d85a485c0dc88421271173bf02fa0eca38504f13baed13fadd3c5194aaaa7'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20250101-20251231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20250101-20251231.nc' 'SHA256' '6421d45fe6d6fc62b53974c1f2dfef6747b6db78ca8b075f4c6a326f793aeda6'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20260101-20261231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20260101-20261231.nc' 'SHA256' '953a77fe5ab7361e4942048b93e1d859be3ac7e49f3b3a5aa14cc74860218252'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20270101-20271231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20270101-20271231.nc' 'SHA256' '1deca2b0bfb98264eb9f4a4ec8d49a109890280b510971fb062950b682b63965'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20280101-20281231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20280101-20281231.nc' 'SHA256' '73a7388a9b0c31fecdbb6dfa5e1f76239e6323e83f9adec847e21551ae19ddeb'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20290101-20291231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20290101-20291231.nc' 'SHA256' 'e3c959158290ab2c0c12c2d5bd7b5977db36891e634dfde6f220e70140a71c11'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20300101-20301231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20300101-20301231.nc' 'SHA256' '18f6019af7b095700f268a609046fefb6984b6476e5dbf083d9a572bb3730481'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20310101-20311231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20310101-20311231.nc' 'SHA256' '086d900b23c3ff408ab13990555729413c5218b8c5e6d9879536343c0f0900a0'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20320101-20321231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20320101-20321231.nc' 'SHA256' '873a2915787982af7b2e3745ac6d73610527bc8dd09ea3dd0221db84eb682097'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20330101-20331231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20330101-20331231.nc' 'SHA256' '8672cfbcd06998b6aa6d789b357434577c466902910564d32a01d465607f08cd'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20340101-20341231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20340101-20341231.nc' 'SHA256' 'b5e045ec14eea26e32db6ed9edb529160bab347f4549ab563cd7ef1cab839c23'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20350101-20351231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20350101-20351231.nc' 'SHA256' 'fe9d94493427dc0308d43554a89bda1aea6040e08e985439bdaa2f2df2486107'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20360101-20361231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20360101-20361231.nc' 'SHA256' '076bec67cd985198734ec4fb7eaa6b787e2422479317209d67e272ba40336980'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20370101-20371231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20370101-20371231.nc' 'SHA256' '76dd72e6fef1719842606b86069d8a289e8645c6a4ec8d1749508829905f23ff'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20380101-20381231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20380101-20381231.nc' 'SHA256' 'ad89991e7f34727417352a888aa8dd79f43a64276f7b3c35a31d6243b4119dee'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20390101-20391231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20390101-20391231.nc' 'SHA256' '853560243299879182003595f3d80729351889b1ec609031c302f0c2541009e7'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20400101-20401231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20400101-20401231.nc' 'SHA256' '8aa969dadc787c38d984a8ededf202a69df6d7c728cc0a4c21777ff78ccd2a81'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20410101-20411231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20410101-20411231.nc' 'SHA256' '7a0c4baed96701bda507eb23b76e86e22018457a90a4b131932c4ff4296ea5f5'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20420101-20421231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20420101-20421231.nc' 'SHA256' 'e939e7c254268b43baec2321bc713c745399199d1c424db17c76720582551e8a'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20430101-20431231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20430101-20431231.nc' 'SHA256' 'ec3dbc72d03f732fc6c3ca06d4c86938e7d49c7ca785922f921c2a7d86ca59ea'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20440101-20441231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20440101-20441231.nc' 'SHA256' 'f9b56922a9c434507d96fa71704a168168101aaed90b1123710f7ceed6624e37'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20450101-20451231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20450101-20451231.nc' 'SHA256' '3ee85f168ebd021ff5c61152216f23d0f8fc354d3cdbdae324f4a8d3e58dff37'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20460101-20461231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20460101-20461231.nc' 'SHA256' '10e4cfba98379c6f16a067b15502900c7241551ebb5857e00aa6eb85df3d6722'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20470101-20471231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20470101-20471231.nc' 'SHA256' '244d29837764998c7972993856b6ce485e673f1c5f7ccf46d07c4e981f443e63'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20480101-20481231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20480101-20481231.nc' 'SHA256' '15a7824c7ea75d3224af46f3506bad2a70233a341a95c62833bced776259c56a'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20490101-20491231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20490101-20491231.nc' 'SHA256' '18aa5b586069e6b50440ea5f9b43e7cb1542eb1e2193eebc32345d6991d8da4b'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20500101-20501231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20500101-20501231.nc' 'SHA256' 'd53136ed1b473eb0a7b8cb3a3c5e61b43e3e5f655578b7aa226a458e97430ffe'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20510101-20511231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20510101-20511231.nc' 'SHA256' '88038f16f4ddcb181a2cd19771a0ecee1dfa446e972a6f729079875cd76b7279'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20520101-20521231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20520101-20521231.nc' 'SHA256' '4f39f78aad5d6319040d6da5425095856757f6282cc5f5f8760191fced7f325c'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20530101-20531231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20530101-20531231.nc' 'SHA256' '510d521e4c345dbb983cb196d2bc147f8995111aa503463f4837407dde13d2dc'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20540101-20541231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20540101-20541231.nc' 'SHA256' '777db91ae12f0928daedb89abb812f84166571162c9d9ae078669311e4243007'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20550101-20551231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20550101-20551231.nc' 'SHA256' '676dadaab3602750504767314042b7f40766248fb1d422682224282bfe9c3ffa'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20560101-20561231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20560101-20561231.nc' 'SHA256' 'c7f1e592d59e43e0f191ec8043283a17a731c56836e95e3e42b41ffef6d1717a'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20570101-20571231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20570101-20571231.nc' 'SHA256' '3478deef82bd2152994785335fd26df32a58fe59a76d04eadb8ec47ae3370c54'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20580101-20581231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20580101-20581231.nc' 'SHA256' 'd1014cb0f278bd0e449ea78a52d035fca737c6b53018bfbe92ff1011025d1391'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20590101-20591231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20590101-20591231.nc' 'SHA256' 'd551ef2b6d53e752af81adf8441e8690450c277f658c016cf73cd6a6d70ffe29'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20600101-20601231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20600101-20601231.nc' 'SHA256' 'c18cde7f76756765147f9dea1d456ed4b24e7e63927a4d437737c21a10dc8c19'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20610101-20611231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20610101-20611231.nc' 'SHA256' '83464df1a1b6e9de2f4fb460a9e3dc02b7d10b745feecc430048da311ce3411e'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20620101-20621231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20620101-20621231.nc' 'SHA256' '94999ebdb32054907b7c46f8a8d41ce146ad55e4f86fbc6411b7058aaad93974'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20630101-20631231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20630101-20631231.nc' 'SHA256' '1777bf003343a492a3009a07de4a828d79a1b7ad6fa869a47f73458516519a1d'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20640101-20641231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20640101-20641231.nc' 'SHA256' 'cfe5c999c92edcca82833268e7f7124252c3423a2521bc188275be81aff2e929'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20650101-20651231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20650101-20651231.nc' 'SHA256' 'eb32a7678551a517d3f3feffaa36b5f206ea8dc8c2da2ab9c00a5866a2a76107'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20660101-20661231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20660101-20661231.nc' 'SHA256' 'f6bc78627ce45e82cb53fed7ebb44143b487d9d149727243562d0a47e5b89c03'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20670101-20671231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20670101-20671231.nc' 'SHA256' '94d567a6527ea76c5b0b9b2839f468c2c4865d2fc5bbb4268912db9ea0ac38da'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20680101-20681231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20680101-20681231.nc' 'SHA256' '3c1b79bea9611c7a60bbbf7be299e84a54e8b256408bee35a5ba8c7e88c7f8ae'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20690101-20691231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20690101-20691231.nc' 'SHA256' '72f3da1fa7f11810924512aecda9c2704b07b4b35c620f1ceb10f05f337b04d6'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20700101-20701231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20700101-20701231.nc' 'SHA256' 'b357b2084a553b03e6e49fc52e92141e5f8c1d2be994115fdc5fcbc93d45ad66'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20710101-20711231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20710101-20711231.nc' 'SHA256' 'ef061104318ea8fd04eb19f4e0e435f46a0a136d1e607ad7fc660fefb8f16445'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20720101-20721231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20720101-20721231.nc' 'SHA256' '9bda5b8475398f3fbe6da26065c8c016db7d5f03ce0af065c2c63fb17d2a5fdd'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20730101-20731231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20730101-20731231.nc' 'SHA256' 'fb340d9acb55b2ad5a5a8361f5b74bb3d79a4ca2afd4280a8d474acbcee348b9'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20740101-20741231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20740101-20741231.nc' 'SHA256' '6ccaba846f0d96325c02f3a92a243995f3057f4df9806d09eb45511bfbb7d676'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20750101-20751231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20750101-20751231.nc' 'SHA256' '544481502963982c22f2a9e381fc21ec160d800426b96bc5d16dd97c868a77ff'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20760101-20761231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20760101-20761231.nc' 'SHA256' '631dab740a317159408557c0871ddc5b40b27b41f67b995ca54db824bfcd8521'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20770101-20771231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20770101-20771231.nc' 'SHA256' '246e0d2b6057f738d35efa7cdb4f3b0b85b3b2931cc26a5ff79a445141e67b4b'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20780101-20781231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20780101-20781231.nc' 'SHA256' 'f95d79bcc5a4cd3afebdb1dd9a01bf78322e48d7b807fbfc682954fed688b06b'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20790101-20791231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20790101-20791231.nc' 'SHA256' '19b2d09073d8c35c4d6ad7fe5c1cee523abe60c1c1a1e7f82efd6e7e331e4305'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20800101-20801231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20800101-20801231.nc' 'SHA256' 'bc10c793bf69acb00128efc340ce65f094fcfcc30c3434c4db3c47b0b3ca7ffa'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20810101-20811231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20810101-20811231.nc' 'SHA256' '7eae51dfbbf1484659dc46fdea082c550ad94b350e125318f44b960545dc70ea'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20820101-20821231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20820101-20821231.nc' 'SHA256' '24631e9c93f1ede7902b13a01d1b0f103d756ccea28681517fbae0754249ca61'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20830101-20831231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20830101-20831231.nc' 'SHA256' 'cb5a5ab5f5bd1e55faf2882c55bacda0ccdf2f0d526b3d761c7f3c41b52b9353'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20840101-20841231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20840101-20841231.nc' 'SHA256' 'fd99d43b4b6c8ecb00c0ee3bc481992c94ee3b7b3534bb649d1bcfbf10dafc36'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20850101-20851231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20850101-20851231.nc' 'SHA256' '4b26d657d8f9ef594b89901dc78e1f8f552234db0c901a25031c1f9d678acbb6'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20860101-20861231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20860101-20861231.nc' 'SHA256' 'b87d8e50b4f2d97ac35b1ba9b0fc64451da28a8209c999bd12dae1bc302bc299'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20870101-20871231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20870101-20871231.nc' 'SHA256' '7cc03e016571408e0f6b9dab005a1833b62f348ff91ca63b0354b55c337387a7'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20880101-20881231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20880101-20881231.nc' 'SHA256' '81fbd17ed9309f29c0a53c14bbfa1053f8250a10b49aa0208e05d4cbb1df0294'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20890101-20891231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20890101-20891231.nc' 'SHA256' 'd257b162a699331dd24fdf364daebdb0d6b3eaa9184da7c3c15ce0be79d2d7dc'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20900101-20901231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20900101-20901231.nc' 'SHA256' '501fd3ab67747a205decd2ee3392fb861d330028a37b4f0a8470085e63f484da'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20910101-20911231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20910101-20911231.nc' 'SHA256' 'e113b4f49feb9a70d02941fd4aee6b88ba351d1a073a967622b5a3c64de67761'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20920101-20921231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20920101-20921231.nc' 'SHA256' '88382aff3b75e60ed23da09d5d4ae3bcc747a64a2b66aac5b7dae9cdfa5b698e'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20930101-20931231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20930101-20931231.nc' 'SHA256' '05f829a0d01c86c424593334b091c6c18e3d060f234a890e26e2f1f967798c3e'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20940101-20941231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20940101-20941231.nc' 'SHA256' 'bd2d3478e2bf27e82f5c5a04ef19a0da054d5350bc35ea7fce0e3131a58a4c6c'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20950101-20951231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20950101-20951231.nc' 'SHA256' '4981bb84209cf49aadf1c0a750619b3cd4a49e73dfa2495ef97cac2d11dd5c50'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20960101-20961231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20960101-20961231.nc' 'SHA256' '297b78b4c720f2a8d33f5eafeb010ae0a89321ce53c696cd749bef52a0255cec'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20970101-20971231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20970101-20971231.nc' 'SHA256' '5435494ee6392f3cdeb5eeb75ad8efc3d146320e110d8dcf52f234687440a5e3'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20980101-20981231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20980101-20981231.nc' 'SHA256' '28251fb0f38fdf0e9d5e652214665dc5ff0f017abce02f6f895669c96f873e3a'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_20990101-20991231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_20990101-20991231.nc' 'SHA256' '136663e3e022a61b496f49699ba25538954bbea52493d95589704957cac5378b'
'hur_day_MIROC6_ssp585_r2i1p1f1_gn_21000101-21001231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r2i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r2i1p1f1_gn_21000101-21001231.nc' 'SHA256' 'd2d6ae76d1ecde9b96726ae461008a34ad3ab913a712fb29fc518977529c7248'
EOF--dataset.file.url.chksum_type.chksum
)"

# ESG_HOME should point to the directory containing ESG credentials.
#   Default is $HOME/.esg
ESG_HOME=${ESG_HOME:-$HOME/.esg}
[[ -d $ESG_HOME ]] || mkdir -p $ESG_HOME

ESG_CREDENTIALS=${X509_USER_PROXY:-$ESG_HOME/credentials.pem}
ESG_CERT_DIR=${X509_CERT_DIR:-$ESG_HOME/certificates}
MYPROXY_STATUS=$HOME/.MyProxyLogon
COOKIE_JAR=$ESG_HOME/cookies
MYPROXY_GETCERT=$ESG_HOME/getcert.jar
CERT_EXPIRATION_WARNING=$((60 * 60 * 8))   #Eight hour (in seconds)

WGET_TRUSTED_CERTIFICATES=$ESG_HOME/certificates


# Configure checking of server SSL certificates.
#   Disabling server certificate checking can resolve problems with myproxy
#   servers being out of sync with datanodes.
CHECK_SERVER_CERT=${CHECK_SERVER_CERT:-Yes}

check_os() {
    local os_name=$(uname | awk '{print $1}')
    case ${os_name} in
        Linux)
            ((debug)) && echo "Linux operating system detected"
            LINUX=1
            MACOSX=0
            ;;
        Darwin)
            ((debug)) && echo "Mac OS X operating system detected"
            LINUX=0
            MACOSX=1
            ;;
        *)
            echo "Unrecognized OS [${os_name}]"
            return 1
            ;;
    esac
    return 0
}

#taken from http://stackoverflow.com/a/4025065/1182464
vercomp () {
    if [[ $1 == $2 ]]
    then
        return 0
    fi
    local IFS=.
    local i ver1=($1) ver2=($2)
    # fill empty fields in ver1 with zeros
    for ((i=${#ver1[@]}; i<${#ver2[@]}; i++))
    do
        ver1[i]=0
    done
    for ((i=0; i<${#ver1[@]}; i++))
    do
        if [[ -z ${ver2[i]} ]]
        then
            # fill empty fields in ver2 with zeros
            ver2[i]=0
        fi
        if ((10#${ver1[i]} > 10#${ver2[i]}))
        then
            return 1
        fi
        if ((10#${ver1[i]} < 10#${ver2[i]}))
        then
            return 2
        fi
    done
    return 0
}

check_commands() {
    #check wget
    local MIN_WGET_VERSION=1.10
    vercomp $(wget -V | sed -n 's/^.* \([1-9]\.[0-9.]*\) .*$/\1/p') $MIN_WGET_VERSION
    case $? in
        2) #lower
            wget -V
            echo
            echo "** ERROR: wget version is too old. Use version $MIN_WGET_VERSION or greater. **" >&2
            exit 1
    esac
}

usage() {
    echo "Usage: $(basename $0) [flags] [openid] [username]"
    echo "Flags is one of:"
    sed -n '/^while getopts/,/^done/  s/^\([^)]*\)[^#]*#\(.*$\)/\1 \2/p' $0
    echo
    echo "This command stores the states of the downloads in .$0.status"
    echo "For more information check the website: http://esgf.org/wiki/ESGF_wget"
}

#defaults
debug=0
clean_work=1

#parse flags
while getopts ':c:pfF:o:w:isuUndvqhHI:T' OPT; do
    case $OPT in
        H) skip_security=1 && use_http_sec=1;; #       : Authenticate with OpenID (username,) and password, without the need for a certificate.
        T) force_TLSv1=1;;              #       : Forces wget to use TLSv1. 
        c) ESG_CREDENTIALS="$OPTARG";;  #<cert> : use this certificate for authentication.
        f) force=1;;                    #       : force certificate retrieval (defaults to only once per day); for certificate-less authentication (see -H option), this flag will force login and refresh cookies.
        F) input_file="$OPTARG";;       #<file> : read input from file instead of the embedded one (use - to read from stdin)
        o) openId="$OPTARG";;           #<openid>: Provide OpenID instead of interactively asking for it.
        I) username_supplied="$OPTARG";;    #<user_id> : Explicitly set user ID.  By default, the user ID is extracted from the last component of the OpenID URL.  Use this flag to override this behaviour.                   
        w) output="$OPTARG";;           #<file> : Write embedded files into a file and exit
        i) insecure=1;;                 #       : set insecure mode, i.e. don't check server certificate
        s) skip_security=1 && use_cookies_for_http_basic_auth_start=1;;            #       : completely skip security. It will only work if the accessed data is not secured at all. -- works only if the accessed data is unsecured or a certificate exists or cookies are saved (latter applies to -H option only).
        u) update=1;;                   #       : Issue the search again and see if something has changed.
        U) update_files=1;;             #       : Update files from server overwriting local ones (detect with -u)
        n) dry_run=1;;                  #       : Don't download any files, just report.
        p) clean_work=0;;               #       : preserve data that failed checksum
        d) verbose=1;debug=1;;          #       : display debug information
        v) verbose=1;;                  #       : be more verbose
        q) quiet=1;;                    #       : be less verbose
        h) usage && exit 0;;            #       : displays this help
        \?) echo "Unknown option '$OPTARG'" >&2 && usage && exit 1;;
        \:) echo "Missing parameter for flag '$OPTARG'" >&2 && usage && exit 1;;
    esac
done
shift $(($OPTIND - 1))

#setup input as desired by the user
if [[ "$input_file" ]]; then
    if [[ "$input_file" == '-' ]]; then
        download_files="$(cat)" #read from STDIN
        exec 0</dev/tty #reopen STDIN as cat closed it
    else
        download_files="$(cat $input_file)" #read from file
    fi
fi

#if -w (output) was selected write file and finish:
if [[ "$output" ]]; then
    #check the file
    if [[ -f "$output" ]]; then
        read -p "Overwrite existing file $output? (y/N) " answ
        case $answ in y|Y|yes|Yes);; *) echo "Aborting then..."; exit 0;; esac
    fi
    echo "$download_files">$output
    exit
fi


#assure we have everything we need
check_commands

if ((update)); then
    echo "Checking the server for changes..."
    new_wget="$(wget "$search_url" -qO -)"
    compare_cmd="grep -vE '^(# Generated by|# Search URL|search_url=)'"
    if diff -q <(eval $compare_cmd<<<"$new_wget") <(eval $compare_cmd $0) >/dev/null; then
        echo "No changes detected."
    else
        echo "Wget was changed. Dowloading. (old renamed to $0.old.#N)"
        counter=0
        while [[ -f $0.old.$counter ]]; do ((counter++)); done
        mv $0 $0.old.$counter
        echo "$new_wget" > $0
    fi
    exit 0      
fi


##############################################################################
check_java() {
    if ! type java >& /dev/null; then
        echo "Java could not be found." >&2
        return 1
    fi
    if java -version 2>&1|grep openjdk >/dev/null; then
        openjdk=1;
    else
        openjdk=0;
    fi
    jversion=($(jversion=$(java -version 2>&1 | awk '/version/ {gsub("\"","");print $3}'); echo ${jversion//./ }))
    mVer=${jversion[1]}
    if [ $openjdk -eq 1 ]; then
        mVer=${jversion[0]}
        if ((mVer<5)); then
            echo "Openjdk detected. Version 9+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    else
    
        if ((mVer<5)); then
            echo "Java version 1.5+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    fi
}

check_myproxy_logon() {
    if ! type myproxy-logon >& /dev/null; then
	echo "myproxy-logon could not be found." >&2
	return 1
    fi
    echo "myproxy-logon found" >&2
}

proxy_to_java() {
    local proxy_user proxy_pass proxy_server proxy_port
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$http_proxy)
    local JAVA_PROXY=
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyPort=$proxy_port"
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$https_proxy)
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyPort=$proxy_port"
    
    echo "$JAVA_PROXY"
}

# get certificates from github
get_certificates() {
    # don't if this was already done today
    [[ -z $force && "$(find $ESG_CERT_DIR -type d -mtime -1 2>/dev/null)" ]] && return 0
    echo -n "Retrieving Federation Certificates..." >&2

    if ! wget -O $ESG_HOME/esg-truststore.ts --no-check-certificate https://github.com/ESGF/esgf-dist/raw/master/installer/certs/esg-truststore.ts; then
        echo "Could not fetch esg-truststore";
        return 1
    fi
    
    if ! wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar -O - -q | tar x -C $ESG_HOME; then
        #certificates tarred into esg_trusted_certificates. (if it breaks, let the user know why
        wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar
        echo "Could't update certs!" >&2
        return 1
    else
        #if here everythng went fine. Replace old cert with this ones    
        [[ -d $ESG_CERT_DIR ]] && rm -r $ESG_CERT_DIR || mkdir -p $(dirname $ESG_CERT_DIR)
        mv $ESG_HOME/esg_trusted_certificates $ESG_CERT_DIR
        touch $ESG_CERT_DIR
        echo "done!" >&2
    fi

}

# Retrieve ESG credentials
unset pass
get_credentials() {
    if check_java
    then
	use_java=1
    else	
	use_java=0
	echo "No suitable java for obtaining certificate - checking for myproxy-logon instead" >&2
	check_myproxy_logon || exit 1
    fi
    #get all certificates
    get_certificates

    if [[ -z "$(find $MYPROXY_GETCERT -type f -mtime -1 2>/dev/null)" ]]; then
        echo -n "(Downloading $MYPROXY_GETCERT... "
        mkdir -p $(dirname $MYPROXY_GETCERT)
        if wget -q --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/getcert.jar -O $MYPROXY_GETCERT;then
            echo 'done)'
            touch $MYPROXY_GETCERT
        else
            echo 'failed)'
        fi
    fi

    #if the user already defined one, use it
    if [[ -z $openId ]]; then
        #try to parse the last valid value if any
        [[ -f "$MYPROXY_STATUS" ]] && openId=$(awk -F= '/^OpenID/ {gsub("\\\\", ""); print $2}' $MYPROXY_STATUS)
        if [[ -z $openId ]]; then
            #no OpenID, we need to ask the user
            echo -n "Please give your OpenID (Example: https://myserver/example/username) ? "
        else
            #Allow the user to change it if desired
            echo -n "Please give your OpenID (hit ENTER to accept default: $openId)? "
        fi
        read -e
        [[ "$REPLY" ]] && openId="$REPLY"
    else
        ((verbose)) && echo "Using user defined OpenID $openId (to change use -o <open_id>)"
    fi

    if grep -q ceda.ac.uk <<<$openId; then
        username=${openId##*/}
        echo -n "Please give your username if different [$username]: "
        read -e
        [[ "$REPLY" ]] && username="$REPLY"
    fi
    


    if [ $use_java -eq 1 ]
    then
        local args=
        #get password
	[[ ! "$pass" ]] && read -sp "MyProxy Password? " pass
        [[ "$openId" ]] && args=$args" --oid $openId"
        [[ "$pass" ]] && args=$args" -P $pass"
        [[ "$username" ]] && args=$args" -l $username"
        
        echo -n $'\nRetrieving Credentials...' >&2
        if ! java $(proxy_to_java) -jar $MYPROXY_GETCERT $args --ca-directory $ESG_CERT_DIR --output $ESG_CREDENTIALS ; then        
            echo "Certificate could not be retrieved"
            exit 1
        fi
        echo "done!" >&2
    else
        args=`openid_to_myproxy_args $openId $username` || exit 1
        if ! myproxy-logon $args -b -o $ESG_CREDENTIALS
	then
            echo "Certificate could not be retrieved"
	    exit 1
        fi
	cp $HOME/.globus/certificates/* $ESG_CERT_DIR/	
    fi
}

openid_to_myproxy_args() {
  python - <<EOF || exit 1
import sys
import re
import xml.etree.ElementTree as ET
import urllib2
openid = "$1"
username = "$2" or re.sub(".*/", "", openid)
e = ET.parse(urllib2.urlopen(openid))
servs = [el for el in e.getiterator() if el.tag.endswith("Service")]
for serv in servs:
    servinfo = dict([(re.sub(".*}", "", c.tag), c.text)
                     for c in serv.getchildren()])
    try:
        if servinfo["Type"].endswith("myproxy-service"):
            m = re.match("socket://(.*):(.*)", servinfo["URI"])
            if m:
                host = m.group(1)
                port = m.group(2)
                print "-s %s -p %s -l %s" % (host, port, username)
                break
    except KeyError:
        continue
else:
    sys.stderr.write("myproxy service could not be found\n")
    sys.exit(1)
EOF
}

# check the certificate validity
check_cert() {
    if [[ ! -f "$ESG_CERT" || $force ]]; then
        #not there, just get it
        get_credentials
    elif which openssl &>/dev/null; then
        #check openssl and certificate
        if ! openssl x509 -checkend $CERT_EXPIRATION_WARNING -noout -in $ESG_CERT 2>/dev/null; then
            echo "The certificate expires in less than $((CERT_EXPIRATION_WARNING / 60 / 60)) hour(s). Renewing..."
            get_credentials
        else
            #ok, certificate is fine
            return 0
        fi
    fi
}

#
# Detect ESG credentials
#
find_credentials() {

    #is X509_USER_PROXY or $HOME/.esg/credential.pem
    if [[ -f "$ESG_CREDENTIALS" ]]; then
        # file found, proceed.
        ESG_CERT="$ESG_CREDENTIALS"
        ESG_KEY="$ESG_CREDENTIALS"
    elif [[ -f "$X509_USER_CERT" && -f "$X509_USER_KEY" ]]; then
        # second try, use these certificates.
        ESG_CERT="$X509_USER_CERT"
        ESG_KEY="$X509_USER_KEY"
    else
        # If credentials are not present, just point to where they should go 
        echo "No ESG Credentials found in $ESG_CREDENTIALS" >&2
            ESG_CERT="$ESG_CREDENTIALS"
            ESG_KEY="$ESG_CREDENTIALS"
            #they will be retrieved later one
    fi


    #chek openssl and certificate
    if (which openssl &>/dev/null); then
        if ( openssl version | grep 'OpenSSL 1\.0' ); then
            echo '** WARNING: ESGF Host certificate checking might not be compatible with OpenSSL 1.0+'
        fi
        check_cert || { (($?==1)); exit 1; }
    fi
    
    if [[ $CHECK_SERVER_CERT == "Yes" ]]; then
        [[ -d "$ESG_CERT_DIR" ]] || { echo "CA certs not found. Aborting."; exit 1; }
        PKI_WGET_OPTS="--ca-directory=$ESG_CERT_DIR"
    fi

    #some wget version complain if there's no file present
    [[ -f $COOKIE_JAR ]] || touch $COOKIE_JAR

    PKI_WGET_OPTS="$PKI_WGET_OPTS --certificate=$ESG_CERT --private-key=$ESG_KEY --save-cookies=$COOKIE_JAR --load-cookies=$COOKIE_JAR --ca-certificate=$ESG_CERT"

}

check_chksum() {
    local file="$1"
    local chk_type=$2
    local chk_value=$3
    local local_chksum=Unknown

    case $chk_type in
        md5) local_chksum=$(md5sum_ $file | cut -f1 -d" ");;
        sha256) local_chksum=$(sha256sum_ $file|awk '{print $1}'|cut -d ' ' -f1);;
        *) echo "Can't verify checksum." && return 0;;
    esac

    #verify
    ((debug)) && echo "local:$local_chksum vs remote:$chk_value" >&2
    echo $local_chksum
}

#Our own md5sum function call that takes into account machines that don't have md5sum but do have md5 (i.e. mac os x)
md5sum_() {
    hash -r
    if type md5sum >& /dev/null; then
        echo $(md5sum $@)
    else
        echo $(md5 $@ | sed -n 's/MD5[ ]*\(.*\)[^=]*=[ ]*\(.*$\)/\2 \1/p')
    fi
}

#Our own sha256sum function call that takes into account machines that don't have sha256sum but do have sha2 (i.e. mac os x)
sha256sum_() {
    hash -r
    if type sha256sum >& /dev/null; then
        echo $(sha256sum $@)
    elif type shasum >& /dev/null; then
        echo $(shasum -a 256 $@)
    else
        echo $(sha2 -q -256 $@)
    fi
}

get_mod_time_() {
    if ((MACOSX)); then
        #on a mac modtime is stat -f %m <file>
        echo "$(stat -f %m $@)"
    else
        #on linux (cygwin) modtime is stat -c %Y <file>
        echo "$(stat -c %Y $@)"
    fi
    return 0;
}

remove_from_cache() {
    local entry="$1"
    local tmp_file="$(grep -ve "^$entry" "$CACHE_FILE")"
    echo "$tmp_file" > "$CACHE_FILE"
    unset cached
}

#Download data from node using cookies and not certificates.
download_http_sec()
{
  #The data to be downloaded.
  data=" $url"
  filename="$file"  

  #Wget args.
  if ((insecure)) 
  then
   wget_args=" --no-check-certificate --cookies=on  --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt " 
  else
   wget_args=" --ca-directory=$WGET_TRUSTED_CERTIFICATES --cookies=on --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt "  
  fi 

  if ((use_cookies_for_http_basic_auth_start)) || ((use_cookies_for_http_basic_auth)) 
  then
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
  fi
  
  if((force_TLSv1))
  then
   wget_args=" $wget_args"" --secure-protocol=TLSv1 "
  fi
  
  
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
    wget_args="$wget_args $ESGF_WGET_OPTS"
  fi  
  

  #use cookies for the next downloads
  use_cookies_for_http_basic_auth=1;
   
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "wget $wget_args $data\n"
  fi


  #Try to download the data. 
  command="wget $wget_args -O $filename $data"
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
      
  #Extract orp service from url ?
  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" == 1 )) && 
  if  echo "$http_resp" | grep -q "/esg-orp/"      
  then
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   orp_service=$(echo "$urls" | tr '\n' ' ' | cut -d' ' -f 2)


   #Use cookies for transaction with orp.
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
   
   #Download data using either http basic auth or http login form.
   if [[ "$openid_c" == */openid/  || "$openid_c" == */openid ]]
   then
    download_http_sec_open_id
   else
    download_http_sec_decide_service
   fi
  else  
   if    echo "$http_resp" | grep -q "401 Unauthorized"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || echo "$http_resp" | grep -q "Connection timed out."  \
      || echo "$http_resp" | grep -q "no-check-certificate"  \
      || (( $cmd_exit_status != 0 ))      
   then 
    echo "ERROR : http request to OpenID Relying Party service failed."
    failed=1
   fi
  fi
}


#Function that decides which implementaion of idp to use.
download_http_sec_decide_service()
{
  #find claimed id

  pos=$(echo "$openid_c" | egrep -o '/' | wc -l)
  username_c=$(echo "$openid_c"  | cut -d'/' -f "$(($pos + 1))")
  esgf_uri=$(echo "$openid_c" | egrep -o '/esgf-idp/openid/')

  host=$(echo "$openid_c"  | cut -d'/' -f 3)
  #test ceda first.

  if [[ -z "$esgf_uri" ]]
  then
   openid_c_tmp="https://""$host""/openid/"
  else
   openid_c_tmp="https://""$host""/esgf-idp/openid/" 
  fi

  command="wget "$openid_c_tmp" --no-check-certificate ${force_TLSv1:+--secure-protocol=TLSv1} -O-"
        
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
   command="$command $ESGF_WGET_OPTS"
  fi  
          
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "$command\n"
  fi
            

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
  

  if    echo "$http_resp" | grep -q "[application/xrds+xml]"  \
     && echo "$http_resp" | grep -q "200 OK"  \
     && (( cmd_exit_status == 0 ))       
  then
   openid_c=$openid_c_tmp
   download_http_sec_open_id
  else
   if [[ -z "$esgf_uri" ]]
   then
    echo "ERROR : HTTP request to OpenID Relying Party service failed."
    failed=1
   else
   download_http_sec_cl_id
   fi
  fi
}


download_http_sec_retry()
{
  echo -e "\nRetrying....\n"
  #Retry in case that last redirect did not work, this happens with older version of wget.
  command="wget $wget_args $data"
      
  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi   
   
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"

  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
   
  if    echo "$http_resp" | grep -q "401 Unauthorized"  \
     || echo "$http_resp" | grep -q "403: Forbidden"  \
     || echo "$http_resp" | grep -q "Connection timed out."  \
     || echo "$http_resp" | grep -q "no-check-certificate"  \
     || (( $cmd_exit_status != 0 ))      
  then 
   echo -e "\nERROR : Retry failed.\n"
   #rm "$filename"
   failed=1
  fi #if retry failed.
}

#Function for downloading data using the claimed id.
download_http_sec_cl_id()
{
  #Http request for sending openid to the orp service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\"  $wget_args -O- https://$orp_service/esg-orp/j_spring_openid_security_check.htm "

  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "wget $command\n"
  fi 
  
  
  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"

  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
    
  
  #Extract orp service from openid ?
  #Evaluate response.If redirected to idp service send the credentials.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( redirects == 2  )) && 
  if  echo "$http_resp" | grep -q "login.htm"  && (( cmd_exit_status == 0 ))   
  then 
  
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   idp_service=$(echo "$urls"  | tr '\n' ' ' | cut -d' ' -f 2) 
      
   command="wget --post-data  password=\"$password_c\" $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$idp_service/esgf-idp/idp/login.htm"
   

   #Debug message.
   if  ((debug))
   then
    echo -e "Executing:\n"
    echo -e "wget $command\n"
   fi 

   #Execution of command.
   http_resp=$(eval $command  2>&1)
   cmd_exit_status="$?"
      
   if ((debug))
   then
    echo -e "\nHTTP response:\n $http_resp\n"
   fi 
        
   #Evaluate response. 
   #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
   #(( "$redirects" != 5 )) \ 
   if    echo "$http_resp" | grep -q "text/html"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || (( cmd_exit_status != 0 ))        
   then 
    rm "$filename"
    download_http_sec_retry
   fi
 
  else
   echo "ERROR : HTTP request to OpenID Provider service failed."
   failed=1
  fi #if redirected to idp.  
}



download_http_sec_open_id()
{
  #Http request for sending openid to the orp web service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\" --header=\"esgf-idea-agent-type:basic_auth\" --http-user=\"$username_c\" --http-password=\"$password_c\"  $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$orp_service/esg-orp/j_spring_openid_security_check.htm "


  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi 

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 

  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" != 7 )) ||
  if   echo "$http_resp" | grep -q "text/html"  ||  (( $cmd_exit_status != 0 ))   
  then
   rm "$filename"
   download_http_sec_retry     
  fi #if error during http basic authentication. 
  
}


download() {
    wget="wget ${insecure:+--no-check-certificate} ${quiet:+-q} ${quiet:--v} -c ${force_TLSv1:+--secure-protocol=TLSv1} $PKI_WGET_OPTS"
    
    while read line
    do
        # read csv here document into proper variables
        eval $(awk -F "' '" '{$0=substr($0,2,length($0)-2); $3=tolower($3); print "file=\""$1"\";url=\""$2"\";chksum_type=\""$3"\";chksum=\""$4"\""}' <(echo $line) )

        #Process the file
        echo -n "$file ..."

        #get the cached entry if any.
        cached="$(grep -e "^$file" "$CACHE_FILE")"
        
        #if we have the cache entry but no file, clean it.
        if [[ ! -f $file && "$cached" ]]; then
            #the file was removed, clean the cache
            remove_from_cache "$file"
            unset cached
        fi
        
        #check it wasn't modified
        if [[ -n "$cached" && "$(get_mod_time_ $file)" == $(echo "$cached" | cut -d ' ' -f2) ]]; then
                    if [[ "$chksum" == "$(echo "$cached" | cut -d ' ' -f3)" ]]; then
                echo "Already downloaded and verified"
                continue
            elif ((update_files)); then
                #user want's to overwrite newer files
                rm $file
                remove_from_cache "$file"
                unset cached
            else
                #file on server is different from what we have. 
                echo "WARNING: The remote file was changed (probably a new version is available). Use -U to Update/overwrite"
                continue
            fi
        fi
        unset chksum_err_value chksum_err_count
        
        while : ; do
            # (if we had the file size, we could check before trying to complete)
            echo "Downloading"
            [[ ! -d "$(dirname "$file")" ]] && mkdir -p "$(dirname "$file")"
            if ((dry_run)); then
                #all important info was already displayed, if in dry_run mode just abort
                #No status will be stored
                break
            else
                if ((use_http_sec))
                then
                 download_http_sec
                 if ((failed))
                 then
                  break
                 fi
                else
                 $wget -O "$file" $url || { failed=1; break; }  
                fi                
            fi

            #check if file is there
            if [[ -f $file ]]; then
                ((debug)) && echo file found
                if [[ ! "$chksum" ]]; then
                    echo "Checksum not provided, can't verify file integrity"
                    break
                fi
                result_chksum=$(check_chksum "$file" $chksum_type $chksum)
                if [[ "$result_chksum" != "$chksum" ]]; then
                    echo "  $chksum_type failed!"
                    if ((clean_work)); then
                        if !((chksum_err_count)); then
                                chksum_err_value=$result_chksum
                                chksum_err_count=2
                            elif ((checksum_err_count--)); then
                                if [[ "$result_chksum" != "$chksum_err_value" ]]; then
                                    #this is a real transmission problem
                                    chksum_err_value=$result_chksum
                                    chksum_err_count=2
                                fi
                            else
                                #ok if here we keep getting the same "different" checksum
                                echo "The file returns always a different checksum!"
                                echo "Contact the data owner to verify what is happening."
                                echo
                                sleep 1
                                break
                            fi
                        
                            rm $file
                            #try again
                            echo -n "  re-trying..."
                            continue
                    else
                            echo "  don't use -p or remove manually."
                    fi
                else
                    echo "  $chksum_type ok. done!"
                    echo "$file" $(get_mod_time_ "$file") $chksum >> $CACHE_FILE
                fi
            fi
            #done!
            break
        done
        
        if ((failed)); then
            echo "download failed"
            # most common failure is certificate expiration, so check this
            #if we have the pasword we can retrigger download
            ((!skip_security)) && [[ "$pass" ]] && check_cert
            unset failed
        fi
        
done <<<"$download_files"

}

dedup_cache_() {
    local file=${1:-${CACHE_FILE}}
    ((debug)) && echo "dedup'ing cache ${file} ..."
    local tmp=$(LC_ALL='C' sort  -r -k1,2 $file | awk '!($1 in a) {a[$1];print $0}' | sort -k2,2)
    ((DEBUG)) && echo "$tmp"
    echo "$tmp" > $file
    ((debug)) && echo "(cache dedup'ed)"
}

http_basic_auth_func_info_message()
{
  echo  "********************************************************************************"
  echo  "*                                                                              *"
  echo  "* Note that new functionality to allow authentication without the need for     *"
  echo  "* certificates is available with this version of the wget script.  To enable,  *"
  echo  "* use the \"-H\" option and enter your OpenID and password when prompted:        *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -H [options...]                                     *"
  echo  "*                                                                              *"
  echo  "* For a full description of the available options use the help option:         *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -h                                                  *"
  echo  "*                                                                              *"
  echo  "********************************************************************************"
}

#
# MAIN
#

if ((!use_http_sec))
then 
 http_basic_auth_func_info_message
fi

echo "Running $(basename $0) version: $version"
((verbose)) && echo "we use other tools in here, don't try to user their proposed 'options' directly"
echo "Use $(basename $0) -h for help."$'\n'

((debug)) && cat<<EOF
** Debug info **
ESG_HOME=$ESG_HOME
ESG_CREDENTIALS=$ESG_CREDENTIALS
ESG_CERT_DIR=$ESG_CERT_DIR
** -- ** -- ** -- ** --

EOF


cat <<'EOF-MESSAGE'
Script created for 140 file(s)
(The count won't match if you manually edit this file!)



EOF-MESSAGE
sleep 1

check_os
((!skip_security)) && find_credentials

if ((use_http_sec))
then 
     
 if (( ! insecure))
 then 
  get_certificates
 fi

 #Cookies folder.
 COOKIES_FOLDER="$ESG_HOME/wget_cookies"
 
 if (( force ))
 then
  if [ -d $COOKIES_FOLDER ] 
  then
   rm -rf $COOKIES_FOLDER
  fi
 fi

 #Create cookies folder. 
 if [[ ! -d $COOKIES_FOLDER ]] 
 then
  mkdir $COOKIES_FOLDER
 fi
 
 if((! use_cookies_for_http_basic_auth_start))
 then

  #Read openid.
  if [[ ! -z "$openId" ]]
  then
   openid_c="$openId"
  elif ( (("$#" > 1)) || (("$#" == 1)) ) 
  then
   openid_c=$1
  else
   read -p    "Enter your openid : " openid_c
  fi
  
  
  #Read username.
  if [[ ! -z "$username_supplied" ]]
  then
   username_c="$username_supplied"
  elif (("$#" == 2))
  then
   username_c=$2
  elif [[ "$openid_c" == */openid/ || "$openid_c" == */openid ]]
  then
   read -p    "Enter username : " username_c
  fi
  
  #Read password.
  read -s -p "Enter password : " password_c
  echo -e "\n"

 fi #use cookies

fi #use_http_sec 


#do we have old results? Create the file if not
[ ! -f $CACHE_FILE ] && echo "#filename mtime checksum" > $CACHE_FILE && chmod 666 $CACHE_FILE

#clean the force parameter if here (at htis point we already have the certificate)
unset force

download

dedup_cache_


echo "done"
