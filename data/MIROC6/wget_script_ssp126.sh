#!/bin/bash
##############################################################################
# ESG Federation download script
#
# Template version: 1.2
# Generated by localhost - 2025/01/02 23:06:39
# Search URL: http://localhost:8080/esg-search/wget?dataset_id=CMIP6.ScenarioMIP.MIROC.MIROC6.ssp126.r24i1p1f1.day.tas.gn.v20200817|esgf-data02.diasjp.net,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp126.r24i1p1f1.day.tasmax.gn.v20200817|esgf-data02.diasjp.net,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp126.r24i1p1f1.day.sfcWind.gn.v20200817|esgf-data02.diasjp.net,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp126.r24i1p1f1.day.pr.gn.v20200817|esgf-data02.diasjp.net,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp126.r24i1p1f1.day.tasmin.gn.v20200817|esgf-data02.diasjp.net,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp126.r1i1p1f1.day.rsds.gn.v20191016|esgf-data02.diasjp.net,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp126.r1i1p1f1.day.hur.gn.v20191016|esgf-data02.diasjp.net
#
###############################################################################
# first be sure it's bash... anything out of bash or sh will break
# and the test will assure we are not using sh instead of bash
if [ $BASH ] && [ `basename $BASH` != bash ]; then
    echo "######## This is a bash script! ##############" 
    echo "Change the execution bit 'chmod u+x $0' or start with 'bash $0' instead of sh."
    echo "Trying to recover automatically..."
    sleep 1
    /bin/bash $0 $@
    exit $?
fi

version=1.3.2
CACHE_FILE=.$(basename $0).status
openId=
search_url='http://localhost:8080/esg-search/wget?dataset_id=CMIP6.ScenarioMIP.MIROC.MIROC6.ssp126.r24i1p1f1.day.tas.gn.v20200817|esgf-data02.diasjp.net,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp126.r24i1p1f1.day.tasmax.gn.v20200817|esgf-data02.diasjp.net,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp126.r24i1p1f1.day.sfcWind.gn.v20200817|esgf-data02.diasjp.net,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp126.r24i1p1f1.day.pr.gn.v20200817|esgf-data02.diasjp.net,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp126.r24i1p1f1.day.tasmin.gn.v20200817|esgf-data02.diasjp.net,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp126.r1i1p1f1.day.rsds.gn.v20191016|esgf-data02.diasjp.net,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp126.r1i1p1f1.day.hur.gn.v20191016|esgf-data02.diasjp.net'

#These are the embedded files to be downloaded
download_files="$(cat <<EOF--dataset.file.url.chksum_type.chksum
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20150101-20151231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20150101-20151231.nc' 'SHA256' '44f26d96a7eef59237a81cfe2b811d467dfe193d95c82e58ddba9a25571133f8'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20160101-20161231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20160101-20161231.nc' 'SHA256' 'f1ff093af5fd57c8489240847f578900977c813b989a12ff71d5f662c8166448'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20170101-20171231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20170101-20171231.nc' 'SHA256' '9a671cbec35b591847d94d67c6b86ac9270d7762380a2a13bf9e9b916028ddd9'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20180101-20181231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20180101-20181231.nc' 'SHA256' '5424c32abae9013b7b871f50b2206036f3578d59455a3aba1274e61ba19536f5'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20190101-20191231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20190101-20191231.nc' 'SHA256' '5dbd782faaad450b0a51fc2bcc041159c6210fbc3a8670b5a8529c423f172c2e'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20200101-20201231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20200101-20201231.nc' 'SHA256' '2fa38fcebefc59e8e8c28ba5c73a66f5807426bec359721e4405ffd60eabea77'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20210101-20211231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20210101-20211231.nc' 'SHA256' 'b5ab11a1fe6dd13834c353c8a0ad3bbf52ef72479381bb3749cc404654b99be2'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20220101-20221231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20220101-20221231.nc' 'SHA256' '12584e1dd2ad8ab92f2e53f9240abd08e928a1099c00bb6932a7821e46d46e8d'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20230101-20231231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20230101-20231231.nc' 'SHA256' '1f13da62d1f3858b01d6f5ff14e5d3b0c70406089ab3e9f9c825b3fac4677a26'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20240101-20241231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20240101-20241231.nc' 'SHA256' '5d455ad9bc18a6b1bc05dac53a0761b547fb3488c87fb97e287e8cf74b52a069'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20250101-20251231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20250101-20251231.nc' 'SHA256' '6d27f544f89940adead81cc5f46867e7a77699761e667804f7eceb2b3364e792'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20260101-20261231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20260101-20261231.nc' 'SHA256' '262522f657393d95c4756fab59f3ae3fb58696cdd6640dfab3d2595d21f86f4a'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20270101-20271231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20270101-20271231.nc' 'SHA256' '64250a18778434ccc0e5c8a8b7ae2380d3a217f1895b9dd98da8a7623d9141de'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20280101-20281231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20280101-20281231.nc' 'SHA256' 'cd565835b713855c1f65285972a9dc4c1d879d15ea1bf06c72fefe763fba0bcd'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20290101-20291231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20290101-20291231.nc' 'SHA256' '0692a05fe1839aee4868c71d036939854b847ae630db55ffd3105ccfc88fc0bc'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20300101-20301231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20300101-20301231.nc' 'SHA256' 'bd7bd56676ee04f25befd715277864cdcc2baf71a02d8d79d148c5f3516d57d0'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20310101-20311231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20310101-20311231.nc' 'SHA256' 'a95cf42370e6d2bd1d74f23c98006a37be08b9eb08a4ee3b96f42b9e3c31541c'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20320101-20321231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20320101-20321231.nc' 'SHA256' '1d1c35e316e6650be683b6f9414197179847dee63c2f0e7b2aa26070924cbb47'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20330101-20331231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20330101-20331231.nc' 'SHA256' 'f8247c02e21d61658ea6fa17995f6562f68089fcbb08079269ab73ab0daac508'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20340101-20341231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20340101-20341231.nc' 'SHA256' '3c71c07faf1bde6a05e8056e9bbdf38df30f529913f876881e467833ee8b720f'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20350101-20351231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20350101-20351231.nc' 'SHA256' '097c537180ea3d46f627e2a39cf6031204197ce6c4ebe2bd45e2d3098db29bb9'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20360101-20361231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20360101-20361231.nc' 'SHA256' '250262fd233bdf05838b2f1b9963b76d7dc7a86dae556ba93daf4d5d98094685'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20370101-20371231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20370101-20371231.nc' 'SHA256' 'e97326898216768c31bbd3a7bdd932fda3639efa7ef50c3d572ac982ad37aa6a'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20380101-20381231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20380101-20381231.nc' 'SHA256' '38e2ea2270e22f0165f042851cebd99252ec1596fdea6a0d26b1e2579d965c3a'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20390101-20391231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20390101-20391231.nc' 'SHA256' '3e98acdb0591ab30c4fc76d6a662ae147099680b01292e92737057b664e89ae7'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20400101-20401231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20400101-20401231.nc' 'SHA256' 'b3175a61f0db77d458b1d407118f18fb603ae111074f251fa8e99384683e8b60'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20410101-20411231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20410101-20411231.nc' 'SHA256' 'b2d698d377b4282e5e40195e39d3582f1e0884ca8535de56554345040534447a'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20420101-20421231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20420101-20421231.nc' 'SHA256' '760098b2e85a80df1eb89c1ad0088a87e6334a109d092549ef70f7da64030389'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20430101-20431231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20430101-20431231.nc' 'SHA256' '3d8f1f22738960cc45771db2939c17ef8ce0206bd701d3ba2b343d3f5f324f72'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20440101-20441231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20440101-20441231.nc' 'SHA256' 'f2dbf98506f404c01532f02a09647137fbd66eb0a8a47686bdeb1f83ec1eedf1'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20450101-20451231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20450101-20451231.nc' 'SHA256' '6cc7132d300822e78e866ec54b2b5279f58d3c3c47f192452e6db9f3ba748486'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20460101-20461231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20460101-20461231.nc' 'SHA256' '71020f55fce8fe45608e11e8ce760fd2e63f81386573afc076d995df5167156a'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20470101-20471231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20470101-20471231.nc' 'SHA256' 'f37c87bafe8b9cbb3f21368d87bdf5a32b6fd525ba23a27ea85dbcdda605c936'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20480101-20481231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20480101-20481231.nc' 'SHA256' '39e503c5c87c9d0c4368fb23544c86504411e112d86dff9b3e0b7263c504851a'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20490101-20491231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20490101-20491231.nc' 'SHA256' '8138b344967530d992cf841e7891d562c7f65cb39832ac2fdc452472f62383a1'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20500101-20501231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20500101-20501231.nc' 'SHA256' 'd50d68aa910d2e78012746abd632bb2580896ba0dfa823bcdf5aaa9cdee312eb'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20510101-20511231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20510101-20511231.nc' 'SHA256' 'c913b359e4eac28c662af35b2506b23a5e59710bb0f6b9608356beda513b13d8'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20520101-20521231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20520101-20521231.nc' 'SHA256' 'aac6a91dca19f570af7770cf3454890bb8b5ec5108d803667a8ace3cae16da15'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20530101-20531231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20530101-20531231.nc' 'SHA256' 'cb33d13c55f560a65c443220af63b268526545af2fdccccefc0b1ed5566d0e56'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20540101-20541231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20540101-20541231.nc' 'SHA256' 'e0d5938ff7065572b6b7875e22f1d3ca255d7cb8be48512d630a11ba797cb0fe'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20550101-20551231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20550101-20551231.nc' 'SHA256' '88614d39c3c419f3de3d169625e5cc918e66948d0517a8821b8439dcca1344a9'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20560101-20561231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20560101-20561231.nc' 'SHA256' '06716c440c204b26f1e124a7d514351dc706e9513c66121682f01dddebe3f223'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20570101-20571231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20570101-20571231.nc' 'SHA256' 'dc660c71b351793228bf1bd936e253af95e51c39901a21d647d694bfc4fd32e5'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20580101-20581231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20580101-20581231.nc' 'SHA256' '527f110801fc12e5fe0073b797d087be3cc3deb6b3f1d37bcf587dfb1fc50eac'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20590101-20591231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20590101-20591231.nc' 'SHA256' '10f249d0cf84fc8d4fda304f208a4d9dbbd14bb15bef1193cb4a0c37b66df0d9'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20600101-20601231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20600101-20601231.nc' 'SHA256' '42cf238e5e3561850e1592fb6ef2bf499ae502fe6bac9211c3b79216c057781f'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20610101-20611231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20610101-20611231.nc' 'SHA256' '03d2e019ad946baba888bd03f66851ccd8d5fcb3cf6099dc1ed3c340b524f938'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20620101-20621231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20620101-20621231.nc' 'SHA256' 'e171d9f2679f51103ba70408fe38a5dbe841d339cba67aaa0de2f6e40537c861'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20630101-20631231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20630101-20631231.nc' 'SHA256' '960e6202a0b1a5d57f79c837a5b3ee452dae86fd5909bd19fb974a15f1c6643a'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20640101-20641231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20640101-20641231.nc' 'SHA256' '6d0c1970e10c9bf5380ddc809db37a6493b406d9c8cb2324144287848160e39b'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20650101-20651231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20650101-20651231.nc' 'SHA256' '5383df48cc0d46e19b237307d367ac9d70af1236eba99ec3f0039e203153d2a6'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20660101-20661231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20660101-20661231.nc' 'SHA256' '7d228c1bca00a3fd7504e49fdb62929e5fff1e535980a78064036a23af4076ea'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20670101-20671231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20670101-20671231.nc' 'SHA256' '5eabd958ab879bf2adcf32a92d55817de58ff1c3acf01c4ecd12fea7f7fd8006'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20680101-20681231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20680101-20681231.nc' 'SHA256' '3e74ae6ef2238779788873a34815ece05f5604c90929b24fb40a6df2fe1303ed'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20690101-20691231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20690101-20691231.nc' 'SHA256' 'f77727d8a4bafa82737da813346b5cfe7ba90f9cfce67ed2e415b0f498ace082'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20700101-20701231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20700101-20701231.nc' 'SHA256' 'b8fc8306477a339797c37e3414110e0c31ebd67c06788f0b9d5f5e82908bd203'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20710101-20711231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20710101-20711231.nc' 'SHA256' '86c16c3c17ae6108f544ad58844069a98d7520507b91af368b2c101278d4c9b8'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20720101-20721231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20720101-20721231.nc' 'SHA256' '6cf439d94eaa35131a6b7dbe2ce11c71eb6647fab8e77137b8be57d9d24bc11d'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20730101-20731231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20730101-20731231.nc' 'SHA256' '695ed5fd57993255a3577ac2fcd1099431849d24f2361af604b7818bd81a8942'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20740101-20741231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20740101-20741231.nc' 'SHA256' '2a403a7f8d7a8dc7af30f7987fa53074099dbf60d27ebf3dfc39a7b2194b173f'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20750101-20751231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20750101-20751231.nc' 'SHA256' '41eb1690af00966c238e9c554d44bbc6a147772523cdfe52c8966dcd8b3e1e01'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20760101-20761231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20760101-20761231.nc' 'SHA256' '5257ad6f0612b1c1c67a893fb9f0d5ba1ca9338d108463c396e9502fadcbb5ee'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20770101-20771231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20770101-20771231.nc' 'SHA256' 'a450caba80eae4c0d9c01a432acbec77321e3cae6a1791235891b38800d415d3'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20780101-20781231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20780101-20781231.nc' 'SHA256' '5a5c2153529ad2032fea9d550d4a5a47abae73922a561cbcf1b25659ffca7ca6'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20790101-20791231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20790101-20791231.nc' 'SHA256' 'd5f6c2545d9e39287b5ad0f3f7aa8e85ea1044cdbdab1bddea0ff5b1fc3a28bb'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20800101-20801231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20800101-20801231.nc' 'SHA256' 'bd380bf0324157d486e965f0f2e974ece496f0d1fcb32d996908a7e2512a1565'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20810101-20811231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20810101-20811231.nc' 'SHA256' 'c240af8758a1e5d91dbe2534879167131bd7fdc368e5982a96bab7c428eaaffb'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20820101-20821231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20820101-20821231.nc' 'SHA256' '2da0f0006eaf444908505cc1eaddd6ed454fbcec4a91d95b4a6744818685dc5b'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20830101-20831231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20830101-20831231.nc' 'SHA256' '6b5a1cbb654d0e170604e6e09bc89e26bf31130f090ebbeb0b072b423e62121b'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20840101-20841231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20840101-20841231.nc' 'SHA256' '4416d36c105bcf32979e54dd61b3968f6ad40fc5f34da4fd7ae515892d76d83e'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20850101-20851231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20850101-20851231.nc' 'SHA256' 'e053a23e759a8d8d9900b4cbab2366e30653c779e959743be39aa98e94d926fe'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20860101-20861231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20860101-20861231.nc' 'SHA256' '3167b7883d1614359a7d5b9d66d777358c15af2442b8cda68bf9c5197c4579f3'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20870101-20871231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20870101-20871231.nc' 'SHA256' 'f8be0a51bb92d7bdd71bb76c8f16abd984f08daab8e79de7b872778ce584348f'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20880101-20881231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20880101-20881231.nc' 'SHA256' 'd8ddeebba14dc2fa1b0bd3f384c0ffd22d6c1eb3380e00d66f7280350a427914'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20890101-20891231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20890101-20891231.nc' 'SHA256' 'cad09302ace96e08474a657ed4b2ace02e1753dce1d865473578fe4eb79e6902'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20900101-20901231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20900101-20901231.nc' 'SHA256' '38b5db18b2403c5fa73519744d045e446827b1f8d9d6c962320fce800f616d85'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20910101-20911231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20910101-20911231.nc' 'SHA256' '12831797334c386d4ed8b76ee0dd0116a64f041f219c6c246f474c05b1506406'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20920101-20921231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20920101-20921231.nc' 'SHA256' '5e1ba3128a52afef1531efdf5c794f423037b249fa3f43b2c6872500731e0efe'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20930101-20931231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20930101-20931231.nc' 'SHA256' 'd096c56c15fd9179f98d506fadc23ed9653867d28fafd8b49cdfbd1245fcd15f'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20940101-20941231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20940101-20941231.nc' 'SHA256' 'e3ff3018d8dcf438638bbe0dfb341521ea4601a375b0243486c6c16c7f70d72d'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20950101-20951231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20950101-20951231.nc' 'SHA256' '6ae8f90ecc6908c14f0d50e488f3066d5952bfe346c3412176a0010b28e915de'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20960101-20961231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20960101-20961231.nc' 'SHA256' '1dcddbc2f4085103f8246cef665e132d583b6b40d41a2aa583251948af00a13a'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20970101-20971231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20970101-20971231.nc' 'SHA256' 'c806938bed68b4efe892ea74a6fe8d1d3c4d23cd3e5f5e608adcda3dfc9dada4'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20980101-20981231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20980101-20981231.nc' 'SHA256' 'cea72ffd01687a02c8a17195c76a09af0419f17d500b16608128cc698ae0a2e0'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_20990101-20991231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_20990101-20991231.nc' 'SHA256' 'c7879f087139d6a481bce52e595f063c6ab1a0d19e4ded51a20eacd7678c39cb'
'hur_day_MIROC6_ssp126_r1i1p1f1_gn_21000101-21001231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp126_r1i1p1f1_gn_21000101-21001231.nc' 'SHA256' '67d8c6dad32312c176b7fe1f73c7adf0058c82eb648efdb83d912115fceac665'
'rsds_day_MIROC6_ssp126_r1i1p1f1_gn_20150101-20241231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/rsds/gn/v20191016/rsds_day_MIROC6_ssp126_r1i1p1f1_gn_20150101-20241231.nc' 'SHA256' 'aee4cf61650a3eee0be6e8ae6667cfe5e586b5eb22dfd078b353662dde9ddd01'
'rsds_day_MIROC6_ssp126_r1i1p1f1_gn_20250101-20341231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/rsds/gn/v20191016/rsds_day_MIROC6_ssp126_r1i1p1f1_gn_20250101-20341231.nc' 'SHA256' '7d2b8ebc1ab51e551fcce2c11487debede9a69393cc10c53cee169c066a5cf2c'
'rsds_day_MIROC6_ssp126_r1i1p1f1_gn_20350101-20441231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/rsds/gn/v20191016/rsds_day_MIROC6_ssp126_r1i1p1f1_gn_20350101-20441231.nc' 'SHA256' '0eeca308c35ff099c0ebf9d7cbc95905b8af7cf117330dbeefebb75dd284430f'
'rsds_day_MIROC6_ssp126_r1i1p1f1_gn_20450101-20541231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/rsds/gn/v20191016/rsds_day_MIROC6_ssp126_r1i1p1f1_gn_20450101-20541231.nc' 'SHA256' '749045a77bf91d0c59f6ede3bd419b3135ad61f6514956d01b20c25fb96313cd'
'rsds_day_MIROC6_ssp126_r1i1p1f1_gn_20550101-20641231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/rsds/gn/v20191016/rsds_day_MIROC6_ssp126_r1i1p1f1_gn_20550101-20641231.nc' 'SHA256' '12aece630e9fc77e17744aa3dc64de64893ab8678a7afa6684cee00d1146c066'
'rsds_day_MIROC6_ssp126_r1i1p1f1_gn_20650101-20741231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/rsds/gn/v20191016/rsds_day_MIROC6_ssp126_r1i1p1f1_gn_20650101-20741231.nc' 'SHA256' '8dc759df23a40260125d78ff1acb600c5d715833b5a656be810a10d13f1a0d66'
'rsds_day_MIROC6_ssp126_r1i1p1f1_gn_20750101-20841231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/rsds/gn/v20191016/rsds_day_MIROC6_ssp126_r1i1p1f1_gn_20750101-20841231.nc' 'SHA256' '252fd2909d3cee3bc00457ae80d1d405a165c1f648a0fcc26dce177d398de1d7'
'rsds_day_MIROC6_ssp126_r1i1p1f1_gn_20850101-20941231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/rsds/gn/v20191016/rsds_day_MIROC6_ssp126_r1i1p1f1_gn_20850101-20941231.nc' 'SHA256' 'f797b7cdca1ea961c049aeb824cbe92f86ca8951f815a824fb33e5b4ba2bd5ae'
'rsds_day_MIROC6_ssp126_r1i1p1f1_gn_20950101-21001231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r1i1p1f1/day/rsds/gn/v20191016/rsds_day_MIROC6_ssp126_r1i1p1f1_gn_20950101-21001231.nc' 'SHA256' '788a512988bdb16efdb940c7c4f7a3f0193e8f4e817c8ce3c84bb4dec9a2d036'
'pr_day_MIROC6_ssp126_r24i1p1f1_gn_20150101-20241231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/pr/gn/v20200817/pr_day_MIROC6_ssp126_r24i1p1f1_gn_20150101-20241231.nc' 'SHA256' '1e7ddba9e0e908a999e49ef5c904052506b1f98a610e298def5a9f3907b540c1'
'pr_day_MIROC6_ssp126_r24i1p1f1_gn_20250101-20341231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/pr/gn/v20200817/pr_day_MIROC6_ssp126_r24i1p1f1_gn_20250101-20341231.nc' 'SHA256' '8f425d4574d1f1074377d3aea332509315f046f61c2071017c6e1f788fbff485'
'pr_day_MIROC6_ssp126_r24i1p1f1_gn_20350101-20441231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/pr/gn/v20200817/pr_day_MIROC6_ssp126_r24i1p1f1_gn_20350101-20441231.nc' 'SHA256' 'fee5026a1e105f16fc76647bb5431fc5c01faa95e50fac5d6032b4aca6bea473'
'pr_day_MIROC6_ssp126_r24i1p1f1_gn_20450101-20541231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/pr/gn/v20200817/pr_day_MIROC6_ssp126_r24i1p1f1_gn_20450101-20541231.nc' 'SHA256' '3968f965f78ae56a4531c51f7038f5b9b5b71bb9f57aeb9852f37ce2350bccf2'
'pr_day_MIROC6_ssp126_r24i1p1f1_gn_20550101-20641231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/pr/gn/v20200817/pr_day_MIROC6_ssp126_r24i1p1f1_gn_20550101-20641231.nc' 'SHA256' '60761db03548e18fc534c9d0023a4c779bdb3a0ea6274e9ca82fcc173c35941a'
'pr_day_MIROC6_ssp126_r24i1p1f1_gn_20650101-20741231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/pr/gn/v20200817/pr_day_MIROC6_ssp126_r24i1p1f1_gn_20650101-20741231.nc' 'SHA256' '50013f974f46d0ffe9207130a9134aac5c50c0146a5b70a2321c71165d179935'
'pr_day_MIROC6_ssp126_r24i1p1f1_gn_20750101-20841231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/pr/gn/v20200817/pr_day_MIROC6_ssp126_r24i1p1f1_gn_20750101-20841231.nc' 'SHA256' '56bd28d04ce42671ea1d6a0d51321d52abf6190e5f412e761d289b0f6b83b53f'
'pr_day_MIROC6_ssp126_r24i1p1f1_gn_20850101-20941231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/pr/gn/v20200817/pr_day_MIROC6_ssp126_r24i1p1f1_gn_20850101-20941231.nc' 'SHA256' '03671bc382ef2b379bc4e25e62a7394c1898b52f57adf52ebf38e43f8a6a1fac'
'pr_day_MIROC6_ssp126_r24i1p1f1_gn_20950101-21001231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/pr/gn/v20200817/pr_day_MIROC6_ssp126_r24i1p1f1_gn_20950101-21001231.nc' 'SHA256' '0ed311e6a3d45407a257f6b8022e191ca06bd52c8d11076657ab5f4f844d007a'
'sfcWind_day_MIROC6_ssp126_r24i1p1f1_gn_20150101-20241231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/sfcWind/gn/v20200817/sfcWind_day_MIROC6_ssp126_r24i1p1f1_gn_20150101-20241231.nc' 'SHA256' 'c1933c83554fe7a6ef714d25169c03711b2baf6ab12fe827b1010cf0360cd9df'
'sfcWind_day_MIROC6_ssp126_r24i1p1f1_gn_20250101-20341231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/sfcWind/gn/v20200817/sfcWind_day_MIROC6_ssp126_r24i1p1f1_gn_20250101-20341231.nc' 'SHA256' '173180bd26819647ec858a38fa0b00e246f8a57659bbfbc815fed8aa80aa199c'
'sfcWind_day_MIROC6_ssp126_r24i1p1f1_gn_20350101-20441231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/sfcWind/gn/v20200817/sfcWind_day_MIROC6_ssp126_r24i1p1f1_gn_20350101-20441231.nc' 'SHA256' '847179ee870554604811b21887dc9e61e1835a1a0384ab9e7381fc148846f6af'
'sfcWind_day_MIROC6_ssp126_r24i1p1f1_gn_20450101-20541231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/sfcWind/gn/v20200817/sfcWind_day_MIROC6_ssp126_r24i1p1f1_gn_20450101-20541231.nc' 'SHA256' '61fc424b300f73101f5676836e6e504cff4244100bf861df11e56ee5bfb26b7d'
'sfcWind_day_MIROC6_ssp126_r24i1p1f1_gn_20550101-20641231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/sfcWind/gn/v20200817/sfcWind_day_MIROC6_ssp126_r24i1p1f1_gn_20550101-20641231.nc' 'SHA256' '2b6e8ddd462ccca7628cecde03f15a2957510dee98190ba5e101769987b3b47b'
'sfcWind_day_MIROC6_ssp126_r24i1p1f1_gn_20650101-20741231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/sfcWind/gn/v20200817/sfcWind_day_MIROC6_ssp126_r24i1p1f1_gn_20650101-20741231.nc' 'SHA256' '8b2fd71dcaf0a3dd421e6bc32a47656d1a71e1cbe7ece85fe167f627f70dc534'
'sfcWind_day_MIROC6_ssp126_r24i1p1f1_gn_20750101-20841231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/sfcWind/gn/v20200817/sfcWind_day_MIROC6_ssp126_r24i1p1f1_gn_20750101-20841231.nc' 'SHA256' '3387908e5fe62acd19c1f41ff8d70ddefbbbc8e3dbd598dfa1cc9417c4af580e'
'sfcWind_day_MIROC6_ssp126_r24i1p1f1_gn_20850101-20941231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/sfcWind/gn/v20200817/sfcWind_day_MIROC6_ssp126_r24i1p1f1_gn_20850101-20941231.nc' 'SHA256' 'cf5352558c8e8152e10e2348d4f9dcd53ae7d2d8c23de0c19811dd66144c1482'
'sfcWind_day_MIROC6_ssp126_r24i1p1f1_gn_20950101-21001231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/sfcWind/gn/v20200817/sfcWind_day_MIROC6_ssp126_r24i1p1f1_gn_20950101-21001231.nc' 'SHA256' 'db0622dd689f212d4ae2dc38ac781e1615047c85abd86968210640bd73827c4a'
'tas_day_MIROC6_ssp126_r24i1p1f1_gn_20150101-20241231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/tas/gn/v20200817/tas_day_MIROC6_ssp126_r24i1p1f1_gn_20150101-20241231.nc' 'SHA256' '494d29e299e7882de1ea6442d86c43b5b50edb8e5b724efa82435f18c348ef97'
'tas_day_MIROC6_ssp126_r24i1p1f1_gn_20250101-20341231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/tas/gn/v20200817/tas_day_MIROC6_ssp126_r24i1p1f1_gn_20250101-20341231.nc' 'SHA256' 'cd43e4af720f5aecd6dae5ebdc6b44e7bff0f0c8cf3ff179457e33524bf6aa6c'
'tas_day_MIROC6_ssp126_r24i1p1f1_gn_20350101-20441231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/tas/gn/v20200817/tas_day_MIROC6_ssp126_r24i1p1f1_gn_20350101-20441231.nc' 'SHA256' '78256d94e14828add7d3f4d69de17a58f35e35b19fcc587c4a47fea61b178b2e'
'tas_day_MIROC6_ssp126_r24i1p1f1_gn_20450101-20541231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/tas/gn/v20200817/tas_day_MIROC6_ssp126_r24i1p1f1_gn_20450101-20541231.nc' 'SHA256' 'b89cb35f43ac8643e08f1251fa315230b9ee9bcaf8fc1aacf1306efa9950c2fd'
'tas_day_MIROC6_ssp126_r24i1p1f1_gn_20550101-20641231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/tas/gn/v20200817/tas_day_MIROC6_ssp126_r24i1p1f1_gn_20550101-20641231.nc' 'SHA256' 'f330a418ff4691d7eb09cab55408313fe1c36107542f44245e19051679ddcd30'
'tas_day_MIROC6_ssp126_r24i1p1f1_gn_20650101-20741231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/tas/gn/v20200817/tas_day_MIROC6_ssp126_r24i1p1f1_gn_20650101-20741231.nc' 'SHA256' 'fc31891d08d49033644121155e6ba445d9d13adaa9403e5e2fcef04ed0b3cff1'
'tas_day_MIROC6_ssp126_r24i1p1f1_gn_20750101-20841231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/tas/gn/v20200817/tas_day_MIROC6_ssp126_r24i1p1f1_gn_20750101-20841231.nc' 'SHA256' 'dfdb74989202f3a2a91fc227e144cce97eddbdc2b09556f282bf3afef7fe3d64'
'tas_day_MIROC6_ssp126_r24i1p1f1_gn_20850101-20941231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/tas/gn/v20200817/tas_day_MIROC6_ssp126_r24i1p1f1_gn_20850101-20941231.nc' 'SHA256' 'df3d3dadb612341501c9c08c3ce736ea0879c57064c475229f59bf706a4aeb72'
'tas_day_MIROC6_ssp126_r24i1p1f1_gn_20950101-21001231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/tas/gn/v20200817/tas_day_MIROC6_ssp126_r24i1p1f1_gn_20950101-21001231.nc' 'SHA256' '0d6b2dea095fa00168657c99752ad0d2abd2dcbe01ab9c772a9b825237dedc31'
'tasmax_day_MIROC6_ssp126_r24i1p1f1_gn_20150101-20241231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/tasmax/gn/v20200817/tasmax_day_MIROC6_ssp126_r24i1p1f1_gn_20150101-20241231.nc' 'SHA256' '620ff7a5167f2ecc8c5318ab5f12da1b5b9178f46fef1f74215495d9d17fff8c'
'tasmax_day_MIROC6_ssp126_r24i1p1f1_gn_20250101-20341231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/tasmax/gn/v20200817/tasmax_day_MIROC6_ssp126_r24i1p1f1_gn_20250101-20341231.nc' 'SHA256' '22e7468d6dca55e74f15ea3a191580b24e9006052a137e846a12fbba8ef3d2bb'
'tasmax_day_MIROC6_ssp126_r24i1p1f1_gn_20350101-20441231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/tasmax/gn/v20200817/tasmax_day_MIROC6_ssp126_r24i1p1f1_gn_20350101-20441231.nc' 'SHA256' 'dfcf63abe94d8a56cca5d868fd62e3f124842651d7b44db93114f93f98211b0f'
'tasmax_day_MIROC6_ssp126_r24i1p1f1_gn_20450101-20541231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/tasmax/gn/v20200817/tasmax_day_MIROC6_ssp126_r24i1p1f1_gn_20450101-20541231.nc' 'SHA256' '4efc843ee26e880800a4d905f47de7c5c969e03c5772679b01013c527c9617f0'
'tasmax_day_MIROC6_ssp126_r24i1p1f1_gn_20550101-20641231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/tasmax/gn/v20200817/tasmax_day_MIROC6_ssp126_r24i1p1f1_gn_20550101-20641231.nc' 'SHA256' 'b63715062dfb1baa05daeb085d71e1496f1001349ff8005e72f3f3ad617ea127'
'tasmax_day_MIROC6_ssp126_r24i1p1f1_gn_20650101-20741231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/tasmax/gn/v20200817/tasmax_day_MIROC6_ssp126_r24i1p1f1_gn_20650101-20741231.nc' 'SHA256' 'dbb8eb99fddf47f1f1acb1e3f6ee2c8559c3ce311c1a7e136c3a6044783cc560'
'tasmax_day_MIROC6_ssp126_r24i1p1f1_gn_20750101-20841231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/tasmax/gn/v20200817/tasmax_day_MIROC6_ssp126_r24i1p1f1_gn_20750101-20841231.nc' 'SHA256' 'ccfc6e5adcc89dfad65cf0797fd16bf5e2bfb864ab6a327137ac0b0481b4e3bb'
'tasmax_day_MIROC6_ssp126_r24i1p1f1_gn_20850101-20941231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/tasmax/gn/v20200817/tasmax_day_MIROC6_ssp126_r24i1p1f1_gn_20850101-20941231.nc' 'SHA256' '3da4f976e78366c606720622145ebd2447109eaa8138cf08231d6d9f3b93fe7d'
'tasmax_day_MIROC6_ssp126_r24i1p1f1_gn_20950101-21001231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/tasmax/gn/v20200817/tasmax_day_MIROC6_ssp126_r24i1p1f1_gn_20950101-21001231.nc' 'SHA256' '19ec9b3d16e93a7541e08cae18b64f02d66902487765c51111424a0ddd2db68c'
'tasmin_day_MIROC6_ssp126_r24i1p1f1_gn_20150101-20241231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/tasmin/gn/v20200817/tasmin_day_MIROC6_ssp126_r24i1p1f1_gn_20150101-20241231.nc' 'SHA256' 'ec530a76580986bcd4cd6b9e50c8e4acfb5df8a3b37229cf077e52747e45fd27'
'tasmin_day_MIROC6_ssp126_r24i1p1f1_gn_20250101-20341231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/tasmin/gn/v20200817/tasmin_day_MIROC6_ssp126_r24i1p1f1_gn_20250101-20341231.nc' 'SHA256' 'f1ddbb7391f935b102aec86d71d501b06e73b5c52854980b449cec271e45b33e'
'tasmin_day_MIROC6_ssp126_r24i1p1f1_gn_20350101-20441231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/tasmin/gn/v20200817/tasmin_day_MIROC6_ssp126_r24i1p1f1_gn_20350101-20441231.nc' 'SHA256' '5cf931329617698dd407c95d14fb4b8a6efca0558f19616a976681ffe9efe4ce'
'tasmin_day_MIROC6_ssp126_r24i1p1f1_gn_20450101-20541231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/tasmin/gn/v20200817/tasmin_day_MIROC6_ssp126_r24i1p1f1_gn_20450101-20541231.nc' 'SHA256' 'e52f4d27d317da619f54b7098107f2eba2a5365077b4fbce694048c7a4972acf'
'tasmin_day_MIROC6_ssp126_r24i1p1f1_gn_20550101-20641231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/tasmin/gn/v20200817/tasmin_day_MIROC6_ssp126_r24i1p1f1_gn_20550101-20641231.nc' 'SHA256' '6c213bf9bedd8cf23d9e431523af02f4e4259248250bda4c42332431c50a04a3'
'tasmin_day_MIROC6_ssp126_r24i1p1f1_gn_20650101-20741231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/tasmin/gn/v20200817/tasmin_day_MIROC6_ssp126_r24i1p1f1_gn_20650101-20741231.nc' 'SHA256' '2ed8f3d23cb1ba0be6e3352e7ec90c13e2737f3cafcd50d9153caf735819deda'
'tasmin_day_MIROC6_ssp126_r24i1p1f1_gn_20750101-20841231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/tasmin/gn/v20200817/tasmin_day_MIROC6_ssp126_r24i1p1f1_gn_20750101-20841231.nc' 'SHA256' '2b62713eb0048aee84ba91efefcfbab538f9095f03b2143902b0f1abfd4391b4'
'tasmin_day_MIROC6_ssp126_r24i1p1f1_gn_20850101-20941231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/tasmin/gn/v20200817/tasmin_day_MIROC6_ssp126_r24i1p1f1_gn_20850101-20941231.nc' 'SHA256' '5e6f8ca45e1874a5130d5b91d74a473475821e972a94b85c3f3ca723db1b242f'
'tasmin_day_MIROC6_ssp126_r24i1p1f1_gn_20950101-21001231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp126/r24i1p1f1/day/tasmin/gn/v20200817/tasmin_day_MIROC6_ssp126_r24i1p1f1_gn_20950101-21001231.nc' 'SHA256' '3d50754b1a224291c8f5739d6c8f3c3eef43f43526469f36e2acacb39e4505df'
EOF--dataset.file.url.chksum_type.chksum
)"

# ESG_HOME should point to the directory containing ESG credentials.
#   Default is $HOME/.esg
ESG_HOME=${ESG_HOME:-$HOME/.esg}
[[ -d $ESG_HOME ]] || mkdir -p $ESG_HOME

ESG_CREDENTIALS=${X509_USER_PROXY:-$ESG_HOME/credentials.pem}
ESG_CERT_DIR=${X509_CERT_DIR:-$ESG_HOME/certificates}
MYPROXY_STATUS=$HOME/.MyProxyLogon
COOKIE_JAR=$ESG_HOME/cookies
MYPROXY_GETCERT=$ESG_HOME/getcert.jar
CERT_EXPIRATION_WARNING=$((60 * 60 * 8))   #Eight hour (in seconds)

WGET_TRUSTED_CERTIFICATES=$ESG_HOME/certificates


# Configure checking of server SSL certificates.
#   Disabling server certificate checking can resolve problems with myproxy
#   servers being out of sync with datanodes.
CHECK_SERVER_CERT=${CHECK_SERVER_CERT:-Yes}

check_os() {
    local os_name=$(uname | awk '{print $1}')
    case ${os_name} in
        Linux)
            ((debug)) && echo "Linux operating system detected"
            LINUX=1
            MACOSX=0
            ;;
        Darwin)
            ((debug)) && echo "Mac OS X operating system detected"
            LINUX=0
            MACOSX=1
            ;;
        *)
            echo "Unrecognized OS [${os_name}]"
            return 1
            ;;
    esac
    return 0
}

#taken from http://stackoverflow.com/a/4025065/1182464
vercomp () {
    if [[ $1 == $2 ]]
    then
        return 0
    fi
    local IFS=.
    local i ver1=($1) ver2=($2)
    # fill empty fields in ver1 with zeros
    for ((i=${#ver1[@]}; i<${#ver2[@]}; i++))
    do
        ver1[i]=0
    done
    for ((i=0; i<${#ver1[@]}; i++))
    do
        if [[ -z ${ver2[i]} ]]
        then
            # fill empty fields in ver2 with zeros
            ver2[i]=0
        fi
        if ((10#${ver1[i]} > 10#${ver2[i]}))
        then
            return 1
        fi
        if ((10#${ver1[i]} < 10#${ver2[i]}))
        then
            return 2
        fi
    done
    return 0
}

check_commands() {
    #check wget
    local MIN_WGET_VERSION=1.10
    vercomp $(wget -V | sed -n 's/^.* \([1-9]\.[0-9.]*\) .*$/\1/p') $MIN_WGET_VERSION
    case $? in
        2) #lower
            wget -V
            echo
            echo "** ERROR: wget version is too old. Use version $MIN_WGET_VERSION or greater. **" >&2
            exit 1
    esac
}

usage() {
    echo "Usage: $(basename $0) [flags] [openid] [username]"
    echo "Flags is one of:"
    sed -n '/^while getopts/,/^done/  s/^\([^)]*\)[^#]*#\(.*$\)/\1 \2/p' $0
    echo
    echo "This command stores the states of the downloads in .$0.status"
    echo "For more information check the website: http://esgf.org/wiki/ESGF_wget"
}

#defaults
debug=0
clean_work=1

#parse flags
while getopts ':c:pfF:o:w:isuUndvqhHI:T' OPT; do
    case $OPT in
        H) skip_security=1 && use_http_sec=1;; #       : Authenticate with OpenID (username,) and password, without the need for a certificate.
        T) force_TLSv1=1;;              #       : Forces wget to use TLSv1. 
        c) ESG_CREDENTIALS="$OPTARG";;  #<cert> : use this certificate for authentication.
        f) force=1;;                    #       : force certificate retrieval (defaults to only once per day); for certificate-less authentication (see -H option), this flag will force login and refresh cookies.
        F) input_file="$OPTARG";;       #<file> : read input from file instead of the embedded one (use - to read from stdin)
        o) openId="$OPTARG";;           #<openid>: Provide OpenID instead of interactively asking for it.
        I) username_supplied="$OPTARG";;    #<user_id> : Explicitly set user ID.  By default, the user ID is extracted from the last component of the OpenID URL.  Use this flag to override this behaviour.                   
        w) output="$OPTARG";;           #<file> : Write embedded files into a file and exit
        i) insecure=1;;                 #       : set insecure mode, i.e. don't check server certificate
        s) skip_security=1 && use_cookies_for_http_basic_auth_start=1;;            #       : completely skip security. It will only work if the accessed data is not secured at all. -- works only if the accessed data is unsecured or a certificate exists or cookies are saved (latter applies to -H option only).
        u) update=1;;                   #       : Issue the search again and see if something has changed.
        U) update_files=1;;             #       : Update files from server overwriting local ones (detect with -u)
        n) dry_run=1;;                  #       : Don't download any files, just report.
        p) clean_work=0;;               #       : preserve data that failed checksum
        d) verbose=1;debug=1;;          #       : display debug information
        v) verbose=1;;                  #       : be more verbose
        q) quiet=1;;                    #       : be less verbose
        h) usage && exit 0;;            #       : displays this help
        \?) echo "Unknown option '$OPTARG'" >&2 && usage && exit 1;;
        \:) echo "Missing parameter for flag '$OPTARG'" >&2 && usage && exit 1;;
    esac
done
shift $(($OPTIND - 1))

#setup input as desired by the user
if [[ "$input_file" ]]; then
    if [[ "$input_file" == '-' ]]; then
        download_files="$(cat)" #read from STDIN
        exec 0</dev/tty #reopen STDIN as cat closed it
    else
        download_files="$(cat $input_file)" #read from file
    fi
fi

#if -w (output) was selected write file and finish:
if [[ "$output" ]]; then
    #check the file
    if [[ -f "$output" ]]; then
        read -p "Overwrite existing file $output? (y/N) " answ
        case $answ in y|Y|yes|Yes);; *) echo "Aborting then..."; exit 0;; esac
    fi
    echo "$download_files">$output
    exit
fi


#assure we have everything we need
check_commands

if ((update)); then
    echo "Checking the server for changes..."
    new_wget="$(wget "$search_url" -qO -)"
    compare_cmd="grep -vE '^(# Generated by|# Search URL|search_url=)'"
    if diff -q <(eval $compare_cmd<<<"$new_wget") <(eval $compare_cmd $0) >/dev/null; then
        echo "No changes detected."
    else
        echo "Wget was changed. Dowloading. (old renamed to $0.old.#N)"
        counter=0
        while [[ -f $0.old.$counter ]]; do ((counter++)); done
        mv $0 $0.old.$counter
        echo "$new_wget" > $0
    fi
    exit 0      
fi


##############################################################################
check_java() {
    if ! type java >& /dev/null; then
        echo "Java could not be found." >&2
        return 1
    fi
    if java -version 2>&1|grep openjdk >/dev/null; then
        openjdk=1;
    else
        openjdk=0;
    fi
    jversion=($(jversion=$(java -version 2>&1 | awk '/version/ {gsub("\"","");print $3}'); echo ${jversion//./ }))
    mVer=${jversion[1]}
    if [ $openjdk -eq 1 ]; then
        mVer=${jversion[0]}
        if ((mVer<5)); then
            echo "Openjdk detected. Version 9+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    else
    
        if ((mVer<5)); then
            echo "Java version 1.5+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    fi
}

check_myproxy_logon() {
    if ! type myproxy-logon >& /dev/null; then
	echo "myproxy-logon could not be found." >&2
	return 1
    fi
    echo "myproxy-logon found" >&2
}

proxy_to_java() {
    local proxy_user proxy_pass proxy_server proxy_port
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$http_proxy)
    local JAVA_PROXY=
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyPort=$proxy_port"
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$https_proxy)
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyPort=$proxy_port"
    
    echo "$JAVA_PROXY"
}

# get certificates from github
get_certificates() {
    # don't if this was already done today
    [[ -z $force && "$(find $ESG_CERT_DIR -type d -mtime -1 2>/dev/null)" ]] && return 0
    echo -n "Retrieving Federation Certificates..." >&2

    if ! wget -O $ESG_HOME/esg-truststore.ts --no-check-certificate https://github.com/ESGF/esgf-dist/raw/master/installer/certs/esg-truststore.ts; then
        echo "Could not fetch esg-truststore";
        return 1
    fi
    
    if ! wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar -O - -q | tar x -C $ESG_HOME; then
        #certificates tarred into esg_trusted_certificates. (if it breaks, let the user know why
        wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar
        echo "Could't update certs!" >&2
        return 1
    else
        #if here everythng went fine. Replace old cert with this ones    
        [[ -d $ESG_CERT_DIR ]] && rm -r $ESG_CERT_DIR || mkdir -p $(dirname $ESG_CERT_DIR)
        mv $ESG_HOME/esg_trusted_certificates $ESG_CERT_DIR
        touch $ESG_CERT_DIR
        echo "done!" >&2
    fi

}

# Retrieve ESG credentials
unset pass
get_credentials() {
    if check_java
    then
	use_java=1
    else	
	use_java=0
	echo "No suitable java for obtaining certificate - checking for myproxy-logon instead" >&2
	check_myproxy_logon || exit 1
    fi
    #get all certificates
    get_certificates

    if [[ -z "$(find $MYPROXY_GETCERT -type f -mtime -1 2>/dev/null)" ]]; then
        echo -n "(Downloading $MYPROXY_GETCERT... "
        mkdir -p $(dirname $MYPROXY_GETCERT)
        if wget -q --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/getcert.jar -O $MYPROXY_GETCERT;then
            echo 'done)'
            touch $MYPROXY_GETCERT
        else
            echo 'failed)'
        fi
    fi

    #if the user already defined one, use it
    if [[ -z $openId ]]; then
        #try to parse the last valid value if any
        [[ -f "$MYPROXY_STATUS" ]] && openId=$(awk -F= '/^OpenID/ {gsub("\\\\", ""); print $2}' $MYPROXY_STATUS)
        if [[ -z $openId ]]; then
            #no OpenID, we need to ask the user
            echo -n "Please give your OpenID (Example: https://myserver/example/username) ? "
        else
            #Allow the user to change it if desired
            echo -n "Please give your OpenID (hit ENTER to accept default: $openId)? "
        fi
        read -e
        [[ "$REPLY" ]] && openId="$REPLY"
    else
        ((verbose)) && echo "Using user defined OpenID $openId (to change use -o <open_id>)"
    fi

    if grep -q ceda.ac.uk <<<$openId; then
        username=${openId##*/}
        echo -n "Please give your username if different [$username]: "
        read -e
        [[ "$REPLY" ]] && username="$REPLY"
    fi
    


    if [ $use_java -eq 1 ]
    then
        local args=
        #get password
	[[ ! "$pass" ]] && read -sp "MyProxy Password? " pass
        [[ "$openId" ]] && args=$args" --oid $openId"
        [[ "$pass" ]] && args=$args" -P $pass"
        [[ "$username" ]] && args=$args" -l $username"
        
        echo -n $'\nRetrieving Credentials...' >&2
        if ! java $(proxy_to_java) -jar $MYPROXY_GETCERT $args --ca-directory $ESG_CERT_DIR --output $ESG_CREDENTIALS ; then        
            echo "Certificate could not be retrieved"
            exit 1
        fi
        echo "done!" >&2
    else
        args=`openid_to_myproxy_args $openId $username` || exit 1
        if ! myproxy-logon $args -b -o $ESG_CREDENTIALS
	then
            echo "Certificate could not be retrieved"
	    exit 1
        fi
	cp $HOME/.globus/certificates/* $ESG_CERT_DIR/	
    fi
}

openid_to_myproxy_args() {
  python - <<EOF || exit 1
import sys
import re
import xml.etree.ElementTree as ET
import urllib2
openid = "$1"
username = "$2" or re.sub(".*/", "", openid)
e = ET.parse(urllib2.urlopen(openid))
servs = [el for el in e.getiterator() if el.tag.endswith("Service")]
for serv in servs:
    servinfo = dict([(re.sub(".*}", "", c.tag), c.text)
                     for c in serv.getchildren()])
    try:
        if servinfo["Type"].endswith("myproxy-service"):
            m = re.match("socket://(.*):(.*)", servinfo["URI"])
            if m:
                host = m.group(1)
                port = m.group(2)
                print "-s %s -p %s -l %s" % (host, port, username)
                break
    except KeyError:
        continue
else:
    sys.stderr.write("myproxy service could not be found\n")
    sys.exit(1)
EOF
}

# check the certificate validity
check_cert() {
    if [[ ! -f "$ESG_CERT" || $force ]]; then
        #not there, just get it
        get_credentials
    elif which openssl &>/dev/null; then
        #check openssl and certificate
        if ! openssl x509 -checkend $CERT_EXPIRATION_WARNING -noout -in $ESG_CERT 2>/dev/null; then
            echo "The certificate expires in less than $((CERT_EXPIRATION_WARNING / 60 / 60)) hour(s). Renewing..."
            get_credentials
        else
            #ok, certificate is fine
            return 0
        fi
    fi
}

#
# Detect ESG credentials
#
find_credentials() {

    #is X509_USER_PROXY or $HOME/.esg/credential.pem
    if [[ -f "$ESG_CREDENTIALS" ]]; then
        # file found, proceed.
        ESG_CERT="$ESG_CREDENTIALS"
        ESG_KEY="$ESG_CREDENTIALS"
    elif [[ -f "$X509_USER_CERT" && -f "$X509_USER_KEY" ]]; then
        # second try, use these certificates.
        ESG_CERT="$X509_USER_CERT"
        ESG_KEY="$X509_USER_KEY"
    else
        # If credentials are not present, just point to where they should go 
        echo "No ESG Credentials found in $ESG_CREDENTIALS" >&2
            ESG_CERT="$ESG_CREDENTIALS"
            ESG_KEY="$ESG_CREDENTIALS"
            #they will be retrieved later one
    fi


    #chek openssl and certificate
    if (which openssl &>/dev/null); then
        if ( openssl version | grep 'OpenSSL 1\.0' ); then
            echo '** WARNING: ESGF Host certificate checking might not be compatible with OpenSSL 1.0+'
        fi
        check_cert || { (($?==1)); exit 1; }
    fi
    
    if [[ $CHECK_SERVER_CERT == "Yes" ]]; then
        [[ -d "$ESG_CERT_DIR" ]] || { echo "CA certs not found. Aborting."; exit 1; }
        PKI_WGET_OPTS="--ca-directory=$ESG_CERT_DIR"
    fi

    #some wget version complain if there's no file present
    [[ -f $COOKIE_JAR ]] || touch $COOKIE_JAR

    PKI_WGET_OPTS="$PKI_WGET_OPTS --certificate=$ESG_CERT --private-key=$ESG_KEY --save-cookies=$COOKIE_JAR --load-cookies=$COOKIE_JAR --ca-certificate=$ESG_CERT"

}

check_chksum() {
    local file="$1"
    local chk_type=$2
    local chk_value=$3
    local local_chksum=Unknown

    case $chk_type in
        md5) local_chksum=$(md5sum_ $file | cut -f1 -d" ");;
        sha256) local_chksum=$(sha256sum_ $file|awk '{print $1}'|cut -d ' ' -f1);;
        *) echo "Can't verify checksum." && return 0;;
    esac

    #verify
    ((debug)) && echo "local:$local_chksum vs remote:$chk_value" >&2
    echo $local_chksum
}

#Our own md5sum function call that takes into account machines that don't have md5sum but do have md5 (i.e. mac os x)
md5sum_() {
    hash -r
    if type md5sum >& /dev/null; then
        echo $(md5sum $@)
    else
        echo $(md5 $@ | sed -n 's/MD5[ ]*\(.*\)[^=]*=[ ]*\(.*$\)/\2 \1/p')
    fi
}

#Our own sha256sum function call that takes into account machines that don't have sha256sum but do have sha2 (i.e. mac os x)
sha256sum_() {
    hash -r
    if type sha256sum >& /dev/null; then
        echo $(sha256sum $@)
    elif type shasum >& /dev/null; then
        echo $(shasum -a 256 $@)
    else
        echo $(sha2 -q -256 $@)
    fi
}

get_mod_time_() {
    if ((MACOSX)); then
        #on a mac modtime is stat -f %m <file>
        echo "$(stat -f %m $@)"
    else
        #on linux (cygwin) modtime is stat -c %Y <file>
        echo "$(stat -c %Y $@)"
    fi
    return 0;
}

remove_from_cache() {
    local entry="$1"
    local tmp_file="$(grep -ve "^$entry" "$CACHE_FILE")"
    echo "$tmp_file" > "$CACHE_FILE"
    unset cached
}

#Download data from node using cookies and not certificates.
download_http_sec()
{
  #The data to be downloaded.
  data=" $url"
  filename="$file"  

  #Wget args.
  if ((insecure)) 
  then
   wget_args=" --no-check-certificate --cookies=on  --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt " 
  else
   wget_args=" --ca-directory=$WGET_TRUSTED_CERTIFICATES --cookies=on --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt "  
  fi 

  if ((use_cookies_for_http_basic_auth_start)) || ((use_cookies_for_http_basic_auth)) 
  then
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
  fi
  
  if((force_TLSv1))
  then
   wget_args=" $wget_args"" --secure-protocol=TLSv1 "
  fi
  
  
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
    wget_args="$wget_args $ESGF_WGET_OPTS"
  fi  
  

  #use cookies for the next downloads
  use_cookies_for_http_basic_auth=1;
   
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "wget $wget_args $data\n"
  fi


  #Try to download the data. 
  command="wget $wget_args -O $filename $data"
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
      
  #Extract orp service from url ?
  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" == 1 )) && 
  if  echo "$http_resp" | grep -q "/esg-orp/"      
  then
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   orp_service=$(echo "$urls" | tr '\n' ' ' | cut -d' ' -f 2)


   #Use cookies for transaction with orp.
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
   
   #Download data using either http basic auth or http login form.
   if [[ "$openid_c" == */openid/  || "$openid_c" == */openid ]]
   then
    download_http_sec_open_id
   else
    download_http_sec_decide_service
   fi
  else  
   if    echo "$http_resp" | grep -q "401 Unauthorized"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || echo "$http_resp" | grep -q "Connection timed out."  \
      || echo "$http_resp" | grep -q "no-check-certificate"  \
      || (( $cmd_exit_status != 0 ))      
   then 
    echo "ERROR : http request to OpenID Relying Party service failed."
    failed=1
   fi
  fi
}


#Function that decides which implementaion of idp to use.
download_http_sec_decide_service()
{
  #find claimed id

  pos=$(echo "$openid_c" | egrep -o '/' | wc -l)
  username_c=$(echo "$openid_c"  | cut -d'/' -f "$(($pos + 1))")
  esgf_uri=$(echo "$openid_c" | egrep -o '/esgf-idp/openid/')

  host=$(echo "$openid_c"  | cut -d'/' -f 3)
  #test ceda first.

  if [[ -z "$esgf_uri" ]]
  then
   openid_c_tmp="https://""$host""/openid/"
  else
   openid_c_tmp="https://""$host""/esgf-idp/openid/" 
  fi

  command="wget "$openid_c_tmp" --no-check-certificate ${force_TLSv1:+--secure-protocol=TLSv1} -O-"
        
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
   command="$command $ESGF_WGET_OPTS"
  fi  
          
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "$command\n"
  fi
            

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
  

  if    echo "$http_resp" | grep -q "[application/xrds+xml]"  \
     && echo "$http_resp" | grep -q "200 OK"  \
     && (( cmd_exit_status == 0 ))       
  then
   openid_c=$openid_c_tmp
   download_http_sec_open_id
  else
   if [[ -z "$esgf_uri" ]]
   then
    echo "ERROR : HTTP request to OpenID Relying Party service failed."
    failed=1
   else
   download_http_sec_cl_id
   fi
  fi
}


download_http_sec_retry()
{
  echo -e "\nRetrying....\n"
  #Retry in case that last redirect did not work, this happens with older version of wget.
  command="wget $wget_args $data"
      
  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi   
   
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"

  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
   
  if    echo "$http_resp" | grep -q "401 Unauthorized"  \
     || echo "$http_resp" | grep -q "403: Forbidden"  \
     || echo "$http_resp" | grep -q "Connection timed out."  \
     || echo "$http_resp" | grep -q "no-check-certificate"  \
     || (( $cmd_exit_status != 0 ))      
  then 
   echo -e "\nERROR : Retry failed.\n"
   #rm "$filename"
   failed=1
  fi #if retry failed.
}

#Function for downloading data using the claimed id.
download_http_sec_cl_id()
{
  #Http request for sending openid to the orp service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\"  $wget_args -O- https://$orp_service/esg-orp/j_spring_openid_security_check.htm "

  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "wget $command\n"
  fi 
  
  
  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"

  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
    
  
  #Extract orp service from openid ?
  #Evaluate response.If redirected to idp service send the credentials.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( redirects == 2  )) && 
  if  echo "$http_resp" | grep -q "login.htm"  && (( cmd_exit_status == 0 ))   
  then 
  
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   idp_service=$(echo "$urls"  | tr '\n' ' ' | cut -d' ' -f 2) 
      
   command="wget --post-data  password=\"$password_c\" $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$idp_service/esgf-idp/idp/login.htm"
   

   #Debug message.
   if  ((debug))
   then
    echo -e "Executing:\n"
    echo -e "wget $command\n"
   fi 

   #Execution of command.
   http_resp=$(eval $command  2>&1)
   cmd_exit_status="$?"
      
   if ((debug))
   then
    echo -e "\nHTTP response:\n $http_resp\n"
   fi 
        
   #Evaluate response. 
   #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
   #(( "$redirects" != 5 )) \ 
   if    echo "$http_resp" | grep -q "text/html"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || (( cmd_exit_status != 0 ))        
   then 
    rm "$filename"
    download_http_sec_retry
   fi
 
  else
   echo "ERROR : HTTP request to OpenID Provider service failed."
   failed=1
  fi #if redirected to idp.  
}



download_http_sec_open_id()
{
  #Http request for sending openid to the orp web service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\" --header=\"esgf-idea-agent-type:basic_auth\" --http-user=\"$username_c\" --http-password=\"$password_c\"  $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$orp_service/esg-orp/j_spring_openid_security_check.htm "


  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi 

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 

  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" != 7 )) ||
  if   echo "$http_resp" | grep -q "text/html"  ||  (( $cmd_exit_status != 0 ))   
  then
   rm "$filename"
   download_http_sec_retry     
  fi #if error during http basic authentication. 
  
}


download() {
    wget="wget ${insecure:+--no-check-certificate} ${quiet:+-q} ${quiet:--v} -c ${force_TLSv1:+--secure-protocol=TLSv1} $PKI_WGET_OPTS"
    
    while read line
    do
        # read csv here document into proper variables
        eval $(awk -F "' '" '{$0=substr($0,2,length($0)-2); $3=tolower($3); print "file=\""$1"\";url=\""$2"\";chksum_type=\""$3"\";chksum=\""$4"\""}' <(echo $line) )

        #Process the file
        echo -n "$file ..."

        #get the cached entry if any.
        cached="$(grep -e "^$file" "$CACHE_FILE")"
        
        #if we have the cache entry but no file, clean it.
        if [[ ! -f $file && "$cached" ]]; then
            #the file was removed, clean the cache
            remove_from_cache "$file"
            unset cached
        fi
        
        #check it wasn't modified
        if [[ -n "$cached" && "$(get_mod_time_ $file)" == $(echo "$cached" | cut -d ' ' -f2) ]]; then
                    if [[ "$chksum" == "$(echo "$cached" | cut -d ' ' -f3)" ]]; then
                echo "Already downloaded and verified"
                continue
            elif ((update_files)); then
                #user want's to overwrite newer files
                rm $file
                remove_from_cache "$file"
                unset cached
            else
                #file on server is different from what we have. 
                echo "WARNING: The remote file was changed (probably a new version is available). Use -U to Update/overwrite"
                continue
            fi
        fi
        unset chksum_err_value chksum_err_count
        
        while : ; do
            # (if we had the file size, we could check before trying to complete)
            echo "Downloading"
            [[ ! -d "$(dirname "$file")" ]] && mkdir -p "$(dirname "$file")"
            if ((dry_run)); then
                #all important info was already displayed, if in dry_run mode just abort
                #No status will be stored
                break
            else
                if ((use_http_sec))
                then
                 download_http_sec
                 if ((failed))
                 then
                  break
                 fi
                else
                 $wget -O "$file" $url || { failed=1; break; }  
                fi                
            fi

            #check if file is there
            if [[ -f $file ]]; then
                ((debug)) && echo file found
                if [[ ! "$chksum" ]]; then
                    echo "Checksum not provided, can't verify file integrity"
                    break
                fi
                result_chksum=$(check_chksum "$file" $chksum_type $chksum)
                if [[ "$result_chksum" != "$chksum" ]]; then
                    echo "  $chksum_type failed!"
                    if ((clean_work)); then
                        if !((chksum_err_count)); then
                                chksum_err_value=$result_chksum
                                chksum_err_count=2
                            elif ((checksum_err_count--)); then
                                if [[ "$result_chksum" != "$chksum_err_value" ]]; then
                                    #this is a real transmission problem
                                    chksum_err_value=$result_chksum
                                    chksum_err_count=2
                                fi
                            else
                                #ok if here we keep getting the same "different" checksum
                                echo "The file returns always a different checksum!"
                                echo "Contact the data owner to verify what is happening."
                                echo
                                sleep 1
                                break
                            fi
                        
                            rm $file
                            #try again
                            echo -n "  re-trying..."
                            continue
                    else
                            echo "  don't use -p or remove manually."
                    fi
                else
                    echo "  $chksum_type ok. done!"
                    echo "$file" $(get_mod_time_ "$file") $chksum >> $CACHE_FILE
                fi
            fi
            #done!
            break
        done
        
        if ((failed)); then
            echo "download failed"
            # most common failure is certificate expiration, so check this
            #if we have the pasword we can retrigger download
            ((!skip_security)) && [[ "$pass" ]] && check_cert
            unset failed
        fi
        
done <<<"$download_files"

}

dedup_cache_() {
    local file=${1:-${CACHE_FILE}}
    ((debug)) && echo "dedup'ing cache ${file} ..."
    local tmp=$(LC_ALL='C' sort  -r -k1,2 $file | awk '!($1 in a) {a[$1];print $0}' | sort -k2,2)
    ((DEBUG)) && echo "$tmp"
    echo "$tmp" > $file
    ((debug)) && echo "(cache dedup'ed)"
}

http_basic_auth_func_info_message()
{
  echo  "********************************************************************************"
  echo  "*                                                                              *"
  echo  "* Note that new functionality to allow authentication without the need for     *"
  echo  "* certificates is available with this version of the wget script.  To enable,  *"
  echo  "* use the \"-H\" option and enter your OpenID and password when prompted:        *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -H [options...]                                     *"
  echo  "*                                                                              *"
  echo  "* For a full description of the available options use the help option:         *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -h                                                  *"
  echo  "*                                                                              *"
  echo  "********************************************************************************"
}

#
# MAIN
#

if ((!use_http_sec))
then 
 http_basic_auth_func_info_message
fi

echo "Running $(basename $0) version: $version"
((verbose)) && echo "we use other tools in here, don't try to user their proposed 'options' directly"
echo "Use $(basename $0) -h for help."$'\n'

((debug)) && cat<<EOF
** Debug info **
ESG_HOME=$ESG_HOME
ESG_CREDENTIALS=$ESG_CREDENTIALS
ESG_CERT_DIR=$ESG_CERT_DIR
** -- ** -- ** -- ** --

EOF


cat <<'EOF-MESSAGE'
Script created for 140 file(s)
(The count won't match if you manually edit this file!)



EOF-MESSAGE
sleep 1

check_os
((!skip_security)) && find_credentials

if ((use_http_sec))
then 
     
 if (( ! insecure))
 then 
  get_certificates
 fi

 #Cookies folder.
 COOKIES_FOLDER="$ESG_HOME/wget_cookies"
 
 if (( force ))
 then
  if [ -d $COOKIES_FOLDER ] 
  then
   rm -rf $COOKIES_FOLDER
  fi
 fi

 #Create cookies folder. 
 if [[ ! -d $COOKIES_FOLDER ]] 
 then
  mkdir $COOKIES_FOLDER
 fi
 
 if((! use_cookies_for_http_basic_auth_start))
 then

  #Read openid.
  if [[ ! -z "$openId" ]]
  then
   openid_c="$openId"
  elif ( (("$#" > 1)) || (("$#" == 1)) ) 
  then
   openid_c=$1
  else
   read -p    "Enter your openid : " openid_c
  fi
  
  
  #Read username.
  if [[ ! -z "$username_supplied" ]]
  then
   username_c="$username_supplied"
  elif (("$#" == 2))
  then
   username_c=$2
  elif [[ "$openid_c" == */openid/ || "$openid_c" == */openid ]]
  then
   read -p    "Enter username : " username_c
  fi
  
  #Read password.
  read -s -p "Enter password : " password_c
  echo -e "\n"

 fi #use cookies

fi #use_http_sec 


#do we have old results? Create the file if not
[ ! -f $CACHE_FILE ] && echo "#filename mtime checksum" > $CACHE_FILE && chmod 666 $CACHE_FILE

#clean the force parameter if here (at htis point we already have the certificate)
unset force

download

dedup_cache_


echo "done"
