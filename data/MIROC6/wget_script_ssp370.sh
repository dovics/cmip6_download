#!/bin/bash
##############################################################################
# ESG Federation download script
#
# Template version: 1.2
# Generated by localhost - 2025/01/03 01:56:51
# Search URL: http://localhost:8080/esg-search/wget?dataset_id=CMIP6.ScenarioMIP.MIROC.MIROC6.ssp370.r19i1p1f1.day.rsds.gn.v20221216|esgf-data02.diasjp.net,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp370.r19i1p1f1.day.sfcWind.gn.v20221216|esgf-data02.diasjp.net,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp370.r19i1p1f1.day.tas.gn.v20221216|esgf-data02.diasjp.net,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp370.r19i1p1f1.day.tasmax.gn.v20221216|esgf-data02.diasjp.net,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp370.r19i1p1f1.day.tasmin.gn.v20221216|esgf-data02.diasjp.net,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp370.r3i1p1f1.day.hur.gn.v20191016|esgf-data02.diasjp.net
#
###############################################################################
# first be sure it's bash... anything out of bash or sh will break
# and the test will assure we are not using sh instead of bash
if [ $BASH ] && [ `basename $BASH` != bash ]; then
    echo "######## This is a bash script! ##############" 
    echo "Change the execution bit 'chmod u+x $0' or start with 'bash $0' instead of sh."
    echo "Trying to recover automatically..."
    sleep 1
    /bin/bash $0 $@
    exit $?
fi

version=1.3.2
CACHE_FILE=.$(basename $0).status
openId=
search_url='http://localhost:8080/esg-search/wget?dataset_id=CMIP6.ScenarioMIP.MIROC.MIROC6.ssp370.r19i1p1f1.day.rsds.gn.v20221216|esgf-data02.diasjp.net,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp370.r19i1p1f1.day.sfcWind.gn.v20221216|esgf-data02.diasjp.net,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp370.r19i1p1f1.day.tas.gn.v20221216|esgf-data02.diasjp.net,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp370.r19i1p1f1.day.tasmax.gn.v20221216|esgf-data02.diasjp.net,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp370.r19i1p1f1.day.tasmin.gn.v20221216|esgf-data02.diasjp.net,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp370.r3i1p1f1.day.hur.gn.v20191016|esgf-data02.diasjp.net'

# 'pr_day_MIROC6_ssp370_r19i1p1f1_gn_20150101-20241231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/pr/gn/v20221216/pr_day_MIROC6_ssp370_r19i1p1f1_gn_20150101-20241231.nc' 'SHA256' '42cf678be5704cb3fc31e94ce7f7f2684d947f6bee77c1d16c0f5e3e4a6afaca'
# 'pr_day_MIROC6_ssp370_r19i1p1f1_gn_20250101-20341231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/pr/gn/v20221216/pr_day_MIROC6_ssp370_r19i1p1f1_gn_20250101-20341231.nc' 'SHA256' 'd73c26c8a840f27d5cd97574a7fe8885e3dc41da72ac7d21971e448249ccc0a4'
# 'pr_day_MIROC6_ssp370_r19i1p1f1_gn_20350101-20441231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/pr/gn/v20221216/pr_day_MIROC6_ssp370_r19i1p1f1_gn_20350101-20441231.nc' 'SHA256' 'eececf43d4515eb953d7d60579f5da99cad5ff141713ac18a1321fd1a7f5e220'
# 'pr_day_MIROC6_ssp370_r19i1p1f1_gn_20450101-20541231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/pr/gn/v20221216/pr_day_MIROC6_ssp370_r19i1p1f1_gn_20450101-20541231.nc' 'SHA256' '6ad52b6e94d6a4a583d7ccc3c42407b55126b4ed020fc7105e157b4e8e73cd97'
# 'pr_day_MIROC6_ssp370_r19i1p1f1_gn_20550101-20641231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/pr/gn/v20221216/pr_day_MIROC6_ssp370_r19i1p1f1_gn_20550101-20641231.nc' 'SHA256' 'ed30cccb766d5d4530083319d2a14a9fe2cde220420d7af4e09fcef4ae360464'
# 'pr_day_MIROC6_ssp370_r19i1p1f1_gn_20650101-20741231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/pr/gn/v20221216/pr_day_MIROC6_ssp370_r19i1p1f1_gn_20650101-20741231.nc' 'SHA256' '825c28e7e2af776dac1468a496639318588f220ba26437894cc5f6c8cb81acbd'
# 'pr_day_MIROC6_ssp370_r19i1p1f1_gn_20750101-20841231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/pr/gn/v20221216/pr_day_MIROC6_ssp370_r19i1p1f1_gn_20750101-20841231.nc' 'SHA256' '52bcb430fbdeac175cc4d942e90d3e3ab18d3e552b28a472db767e241c1a1143'
# 'pr_day_MIROC6_ssp370_r19i1p1f1_gn_20850101-20941231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/pr/gn/v20221216/pr_day_MIROC6_ssp370_r19i1p1f1_gn_20850101-20941231.nc' 'SHA256' 'ec9ef7325a74a1718c59131def24d74a385483860136cf269996ace62e8d0ee2'
# 'pr_day_MIROC6_ssp370_r19i1p1f1_gn_20950101-21001231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/pr/gn/v20221216/pr_day_MIROC6_ssp370_r19i1p1f1_gn_20950101-21001231.nc' 'SHA256' '5e732d46f3842ac9de2a7e45bfa8a3b2c040f0612ac50f2473b616ad0122c32a'
# 'rsds_day_MIROC6_ssp370_r19i1p1f1_gn_20150101-20241231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/rsds/gn/v20221216/rsds_day_MIROC6_ssp370_r19i1p1f1_gn_20150101-20241231.nc' 'SHA256' '5d1b7b3c31858d0ed78712ca42fff6ccf86776fa66a8cf9b6d1160795d0d9d28'
# 'rsds_day_MIROC6_ssp370_r19i1p1f1_gn_20250101-20341231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/rsds/gn/v20221216/rsds_day_MIROC6_ssp370_r19i1p1f1_gn_20250101-20341231.nc' 'SHA256' 'bc9e3c29dadb61555525c80325718bb829d3dbc82e8e71108dcbaf7afd4c8b47'
# 'rsds_day_MIROC6_ssp370_r19i1p1f1_gn_20350101-20441231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/rsds/gn/v20221216/rsds_day_MIROC6_ssp370_r19i1p1f1_gn_20350101-20441231.nc' 'SHA256' '91053532cddea4bb1764bf76f125dbd8bc4dfe4c3ae172138e113c2b6c8a6383'
# 'rsds_day_MIROC6_ssp370_r19i1p1f1_gn_20450101-20541231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/rsds/gn/v20221216/rsds_day_MIROC6_ssp370_r19i1p1f1_gn_20450101-20541231.nc' 'SHA256' 'f0fedd97eb80a45044bed7889fff1511f7869c80a6eb2f1355d4a7d8e69ccc7d'
# 'rsds_day_MIROC6_ssp370_r19i1p1f1_gn_20550101-20641231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/rsds/gn/v20221216/rsds_day_MIROC6_ssp370_r19i1p1f1_gn_20550101-20641231.nc' 'SHA256' 'bed19c2ee1f554b91d01d445334b531bae52e83395c7b3a9c07021c58cdeda34'
# 'rsds_day_MIROC6_ssp370_r19i1p1f1_gn_20650101-20741231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/rsds/gn/v20221216/rsds_day_MIROC6_ssp370_r19i1p1f1_gn_20650101-20741231.nc' 'SHA256' '073cf6445eb05f8177ff72ccad94b91fd5044daab1192cee3408e9225bef36b3'
# 'rsds_day_MIROC6_ssp370_r19i1p1f1_gn_20750101-20841231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/rsds/gn/v20221216/rsds_day_MIROC6_ssp370_r19i1p1f1_gn_20750101-20841231.nc' 'SHA256' 'bc9dda341fb7dcee4b7745b58daaeb6316a5af4174137ec143db73a7db00c039'
# 'rsds_day_MIROC6_ssp370_r19i1p1f1_gn_20850101-20941231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/rsds/gn/v20221216/rsds_day_MIROC6_ssp370_r19i1p1f1_gn_20850101-20941231.nc' 'SHA256' 'cbf4a0ee29294ec9a995a2b19909db54f0ed19a9ca9b36070c9f6b18c4fad4ac'
# 'rsds_day_MIROC6_ssp370_r19i1p1f1_gn_20950101-21001231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/rsds/gn/v20221216/rsds_day_MIROC6_ssp370_r19i1p1f1_gn_20950101-21001231.nc' 'SHA256' '0be8da7a1dbc1bb50cfa326bec020bfe27466b81225f4196c0475d337aa22158'
# 'sfcWind_day_MIROC6_ssp370_r19i1p1f1_gn_20150101-20241231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/sfcWind/gn/v20221216/sfcWind_day_MIROC6_ssp370_r19i1p1f1_gn_20150101-20241231.nc' 'SHA256' '9218d9a3d576166b5308ae5430a7800e1fdf5310e4d1078c35a4091badbdcfaf'
# 'sfcWind_day_MIROC6_ssp370_r19i1p1f1_gn_20250101-20341231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/sfcWind/gn/v20221216/sfcWind_day_MIROC6_ssp370_r19i1p1f1_gn_20250101-20341231.nc' 'SHA256' 'bb01f8b58da1bf6adfbec40bdb2a9d7ce49bdc44ada2e54b340f946a9fcc51ca'
# 'sfcWind_day_MIROC6_ssp370_r19i1p1f1_gn_20350101-20441231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/sfcWind/gn/v20221216/sfcWind_day_MIROC6_ssp370_r19i1p1f1_gn_20350101-20441231.nc' 'SHA256' 'd19ef6ff723939b795361066aff3b47c1bc1142dca9d606fb73d7ca207364c25'
# 'sfcWind_day_MIROC6_ssp370_r19i1p1f1_gn_20450101-20541231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/sfcWind/gn/v20221216/sfcWind_day_MIROC6_ssp370_r19i1p1f1_gn_20450101-20541231.nc' 'SHA256' 'cb2b5ff808319b5e46ea05ca071a9925bbcb890b94107579531f4d968c304d05'
# 'sfcWind_day_MIROC6_ssp370_r19i1p1f1_gn_20550101-20641231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/sfcWind/gn/v20221216/sfcWind_day_MIROC6_ssp370_r19i1p1f1_gn_20550101-20641231.nc' 'SHA256' '0b1cfd802d2b3f4842aa7277de1039cfe0643547edb4c24b17af3f3b1d7eae2c'
# 'sfcWind_day_MIROC6_ssp370_r19i1p1f1_gn_20650101-20741231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/sfcWind/gn/v20221216/sfcWind_day_MIROC6_ssp370_r19i1p1f1_gn_20650101-20741231.nc' 'SHA256' '36105db4359505e7147e91d7de4422c78708ca2a7002a712cc304fbd78b1daf2'
# 'sfcWind_day_MIROC6_ssp370_r19i1p1f1_gn_20750101-20841231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/sfcWind/gn/v20221216/sfcWind_day_MIROC6_ssp370_r19i1p1f1_gn_20750101-20841231.nc' 'SHA256' 'bb67ce856f8bc7dfc5ab23607645f2ef44ee234177f5327ac9b8878ef0770289'
# 'sfcWind_day_MIROC6_ssp370_r19i1p1f1_gn_20850101-20941231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/sfcWind/gn/v20221216/sfcWind_day_MIROC6_ssp370_r19i1p1f1_gn_20850101-20941231.nc' 'SHA256' 'f82a65149fbde6460980adddb4a04e3710f2aa7de828a3f6f99858b20da5460c'
# 'sfcWind_day_MIROC6_ssp370_r19i1p1f1_gn_20950101-21001231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/sfcWind/gn/v20221216/sfcWind_day_MIROC6_ssp370_r19i1p1f1_gn_20950101-21001231.nc' 'SHA256' '4b1c351eee7509305d91f3a2f78be80ab56e20ac8f0d183d7d7ec03fb06a9b90'
# 'tas_day_MIROC6_ssp370_r19i1p1f1_gn_20150101-20241231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/tas/gn/v20221216/tas_day_MIROC6_ssp370_r19i1p1f1_gn_20150101-20241231.nc' 'SHA256' 'af459a43bcb9c1fc1c91e85c155fb8c63c8d7f477c24c23c87e1d52c05d315a9'
# 'tas_day_MIROC6_ssp370_r19i1p1f1_gn_20250101-20341231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/tas/gn/v20221216/tas_day_MIROC6_ssp370_r19i1p1f1_gn_20250101-20341231.nc' 'SHA256' '4cac84e53b5a563174ad1681730cc4a74b9a9441e667477ab834bbb65adfdbce'
# 'tas_day_MIROC6_ssp370_r19i1p1f1_gn_20350101-20441231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/tas/gn/v20221216/tas_day_MIROC6_ssp370_r19i1p1f1_gn_20350101-20441231.nc' 'SHA256' '176d0f3a0ee06285dba7f1b921cbcf3435d470e3783c572a418782f235e1eb16'
# 'tas_day_MIROC6_ssp370_r19i1p1f1_gn_20450101-20541231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/tas/gn/v20221216/tas_day_MIROC6_ssp370_r19i1p1f1_gn_20450101-20541231.nc' 'SHA256' 'f943e5885ede1e040d8fc1d0ccdd495b4d8fdfac5fee72e482ac93aff4116848'
# 'tas_day_MIROC6_ssp370_r19i1p1f1_gn_20550101-20641231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/tas/gn/v20221216/tas_day_MIROC6_ssp370_r19i1p1f1_gn_20550101-20641231.nc' 'SHA256' 'dd623e2e6b98311849a47b6beff38fbcea9e19dc0c188d6f9da319c780f33bba'
# 'tas_day_MIROC6_ssp370_r19i1p1f1_gn_20650101-20741231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/tas/gn/v20221216/tas_day_MIROC6_ssp370_r19i1p1f1_gn_20650101-20741231.nc' 'SHA256' '59f93de52c20333941901b9a949a4f6d6a4d578736cf995b8a8dd734eeebd0db'
# 'tas_day_MIROC6_ssp370_r19i1p1f1_gn_20750101-20841231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/tas/gn/v20221216/tas_day_MIROC6_ssp370_r19i1p1f1_gn_20750101-20841231.nc' 'SHA256' 'bb23ea72eae414b7df0536fb97663309885a3680017805097a6f539c0167ba86'
# 'tas_day_MIROC6_ssp370_r19i1p1f1_gn_20850101-20941231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/tas/gn/v20221216/tas_day_MIROC6_ssp370_r19i1p1f1_gn_20850101-20941231.nc' 'SHA256' '9e72d1a28dd6f6063dcd0a4b97f4ad5792eb1f7d169e07efdd92b4d21564af87'
# 'tas_day_MIROC6_ssp370_r19i1p1f1_gn_20950101-21001231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/tas/gn/v20221216/tas_day_MIROC6_ssp370_r19i1p1f1_gn_20950101-21001231.nc' 'SHA256' '6164e53dbca2b9c2960c14137eecb22e73cbafa416a08e5eff6ed72ef9d2b825'
# 'tasmax_day_MIROC6_ssp370_r19i1p1f1_gn_20150101-20241231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/tasmax/gn/v20221216/tasmax_day_MIROC6_ssp370_r19i1p1f1_gn_20150101-20241231.nc' 'SHA256' '70a8f57684be805e9c89f38807c7f0f7216a7acbd9b3f489b0eebefd94b54c43'
# 'tasmax_day_MIROC6_ssp370_r19i1p1f1_gn_20250101-20341231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/tasmax/gn/v20221216/tasmax_day_MIROC6_ssp370_r19i1p1f1_gn_20250101-20341231.nc' 'SHA256' 'a30bced8b8ec186368f3f38409ae29b39f59e67c5da5f49beea3c23eac001177'
# 'tasmax_day_MIROC6_ssp370_r19i1p1f1_gn_20350101-20441231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/tasmax/gn/v20221216/tasmax_day_MIROC6_ssp370_r19i1p1f1_gn_20350101-20441231.nc' 'SHA256' '1ac2361695644afa6ab7c84886ff31aa8ff94232bed0c229016ec112e6401965'
# 'tasmax_day_MIROC6_ssp370_r19i1p1f1_gn_20450101-20541231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/tasmax/gn/v20221216/tasmax_day_MIROC6_ssp370_r19i1p1f1_gn_20450101-20541231.nc' 'SHA256' 'd8f2187ee6196e88a01ca223871ca03dfe811d7d7ede364e42b442bcc51d1c30'
# 'tasmax_day_MIROC6_ssp370_r19i1p1f1_gn_20550101-20641231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/tasmax/gn/v20221216/tasmax_day_MIROC6_ssp370_r19i1p1f1_gn_20550101-20641231.nc' 'SHA256' '567e28a089a5b5417ddd10bfb38511d2928e289a97d14426e636f55e9ff8f12f'
# 'tasmax_day_MIROC6_ssp370_r19i1p1f1_gn_20650101-20741231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/tasmax/gn/v20221216/tasmax_day_MIROC6_ssp370_r19i1p1f1_gn_20650101-20741231.nc' 'SHA256' 'f8c8c367b3b8277bcdfe715033b58a6ca76f193dfe36b81e4ae8d291fe73e84c'
# 'tasmax_day_MIROC6_ssp370_r19i1p1f1_gn_20750101-20841231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/tasmax/gn/v20221216/tasmax_day_MIROC6_ssp370_r19i1p1f1_gn_20750101-20841231.nc' 'SHA256' 'a6a5b5802c5b4dad1e9f22526f972c974675f3cab88f4e8b650b5989315abc0a'
# 'tasmax_day_MIROC6_ssp370_r19i1p1f1_gn_20850101-20941231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/tasmax/gn/v20221216/tasmax_day_MIROC6_ssp370_r19i1p1f1_gn_20850101-20941231.nc' 'SHA256' 'b16bf72ab050a6b52a7ffe2e0219de262db52686eb4ded5af4cc3181d1f56da9'
# 'tasmax_day_MIROC6_ssp370_r19i1p1f1_gn_20950101-21001231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/tasmax/gn/v20221216/tasmax_day_MIROC6_ssp370_r19i1p1f1_gn_20950101-21001231.nc' 'SHA256' '89e4c38b063efcb6e54328029ca920b0b1b1c5ea44da8c5fd48347e003b4a181'
# 'tasmin_day_MIROC6_ssp370_r19i1p1f1_gn_20150101-20241231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/tasmin/gn/v20221216/tasmin_day_MIROC6_ssp370_r19i1p1f1_gn_20150101-20241231.nc' 'SHA256' '532d0da504b8828496c832f9497b493cd9e18068bcc8d68fa2458b1f78276fe4'
# 'tasmin_day_MIROC6_ssp370_r19i1p1f1_gn_20250101-20341231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/tasmin/gn/v20221216/tasmin_day_MIROC6_ssp370_r19i1p1f1_gn_20250101-20341231.nc' 'SHA256' '5c15d53528b919981016b5e65d14d5ab530df4be66973c2f7694c74f11d935b0'
# 'tasmin_day_MIROC6_ssp370_r19i1p1f1_gn_20350101-20441231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/tasmin/gn/v20221216/tasmin_day_MIROC6_ssp370_r19i1p1f1_gn_20350101-20441231.nc' 'SHA256' '243b19da17595b75001a170ae8bb78b8a22459d57eabc925807d3f35a0127ef7'
# 'tasmin_day_MIROC6_ssp370_r19i1p1f1_gn_20450101-20541231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/tasmin/gn/v20221216/tasmin_day_MIROC6_ssp370_r19i1p1f1_gn_20450101-20541231.nc' 'SHA256' '8e6c1bd6939fc22efd9fc686afe18a34460e9c0bb0b326fa954fc2434c805023'
# 'tasmin_day_MIROC6_ssp370_r19i1p1f1_gn_20550101-20641231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/tasmin/gn/v20221216/tasmin_day_MIROC6_ssp370_r19i1p1f1_gn_20550101-20641231.nc' 'SHA256' '918c926989212e84304d2cd1406cf8b68dc310cf29c1dcdb435f6ad4f996e9cc'
# 'tasmin_day_MIROC6_ssp370_r19i1p1f1_gn_20650101-20741231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/tasmin/gn/v20221216/tasmin_day_MIROC6_ssp370_r19i1p1f1_gn_20650101-20741231.nc' 'SHA256' '7bf893a652dbf441ed474d80c91f542009d635d4a09ff60547632c8ba6a4debf'
# 'tasmin_day_MIROC6_ssp370_r19i1p1f1_gn_20750101-20841231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/tasmin/gn/v20221216/tasmin_day_MIROC6_ssp370_r19i1p1f1_gn_20750101-20841231.nc' 'SHA256' '6ca66e21f726ffe5d02b92519e2a355c534c7b431d4397bdf92d4402a7282825'
# 'tasmin_day_MIROC6_ssp370_r19i1p1f1_gn_20850101-20941231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/tasmin/gn/v20221216/tasmin_day_MIROC6_ssp370_r19i1p1f1_gn_20850101-20941231.nc' 'SHA256' '08eb044e4a9760b1f9bedb0628e117238bf4d91e565ffcd6980918fa3b12f6f2'
# 'tasmin_day_MIROC6_ssp370_r19i1p1f1_gn_20950101-21001231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r19i1p1f1/day/tasmin/gn/v20221216/tasmin_day_MIROC6_ssp370_r19i1p1f1_gn_20950101-21001231.nc' 'SHA256' '3b2a3d138894a7532501ba813b726eae850576c70380c37c9fc2ff0ef1aa2e36'
# 'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20150101-20151231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20150101-20151231.nc' 'SHA256' '24b56a5e4329f69909a437f1681ea762f08140e8189f8b152ca74b70e2fc447d'
# 'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20160101-20161231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20160101-20161231.nc' 'SHA256' 'a1e0bd30a0590e19f75900b8f94b74434896c3340c454791e68bc2c114c763d7'
# 'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20170101-20171231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20170101-20171231.nc' 'SHA256' 'fbabb0f3a6d2d7964b3b4779ad8917e67481e259534a7fdda6d0b7af4cfccc6d'
# 'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20180101-20181231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20180101-20181231.nc' 'SHA256' 'e035fc4d9be3f47c3d5259eaf5238743462d343d245da144c855be46f3c0f448'
# 'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20190101-20191231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20190101-20191231.nc' 'SHA256' 'f2edd1944562095004d4f08be2d6e43eea7708f4478b34549a8290116e69230b'
# 'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20200101-20201231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20200101-20201231.nc' 'SHA256' 'd18207bfb78009bae801a69a8eecb4122ea7af5888565b87aa380d891689b626'
# 'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20210101-20211231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20210101-20211231.nc' 'SHA256' '7f1ded4f8a32bccb80204471837d4cb0fe986dbde92d0c28fba962ba38247b37'
# 'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20220101-20221231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20220101-20221231.nc' 'SHA256' 'bd2b534e969fd8f665d170b855341630549443a4c63f283bb8b936d71372b802'

#These are the embedded files to be downloaded
download_files="$(cat <<EOF--dataset.file.url.chksum_type.chksum
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20230101-20231231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20230101-20231231.nc' 'SHA256' '4a6eae1b402377914121682b73fc15ec65600a21a917b83de60fdaca6f140c7b'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20240101-20241231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20240101-20241231.nc' 'SHA256' 'bf65000011f19115460f83c301d2f35ffe071d24476c3801ddde9e4ca075d569'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20250101-20251231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20250101-20251231.nc' 'SHA256' 'ee939afeb3d7ba3ca5e5727377a2086d788236a50a9d5188cdcc546943dced80'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20260101-20261231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20260101-20261231.nc' 'SHA256' '9b714a0ee4a6bc06c67a4231516f8fb157e7a968d9b0032e941fdac3339695b8'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20270101-20271231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20270101-20271231.nc' 'SHA256' '2b946719c307aba6746e99e9bb527a45b58ed6c958c092b60ba4bf2c46460785'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20280101-20281231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20280101-20281231.nc' 'SHA256' '5790be3164bfb7de9851e085ea42b2f351406fa8d366eafe7107fbe462ccfdb2'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20290101-20291231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20290101-20291231.nc' 'SHA256' '32f56acb2c0198505509d6c703c9d240840bfb67044227f18559f04196233841'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20300101-20301231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20300101-20301231.nc' 'SHA256' '583d720ee06516c95c6714c710a23f929178555aefa3c28d6ae2463e27be1478'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20310101-20311231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20310101-20311231.nc' 'SHA256' 'a3a5d50b18f649ea2a1859d43a05ad1efaa5b4d92e19ffe6ca480d1506f43af2'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20320101-20321231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20320101-20321231.nc' 'SHA256' 'fd37b30f839cdc3daafd801a48ee7270a94d022c447d3a8ed6b94a6ab9e931f9'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20330101-20331231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20330101-20331231.nc' 'SHA256' 'fba23c21e5f900998c0c00c11140a8612b6dbf066f341e7d72fb5fa29c62fc01'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20340101-20341231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20340101-20341231.nc' 'SHA256' '56764ac1b0021af8c30dcb6a3659e8239383390b17fb0b3c979702eff96f7158'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20350101-20351231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20350101-20351231.nc' 'SHA256' '0d7621b2e774a09deaaca69382c073b0ba0d8ebc9307c67682742b8f09fc919b'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20360101-20361231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20360101-20361231.nc' 'SHA256' '12133fd1b352ab4629bf79e446a0ddbfd7a8daba044fafe25c7a2bc56f3e933b'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20370101-20371231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20370101-20371231.nc' 'SHA256' '97a40fb8cbf78320a57ab908ac0aa7c9310b8d62ed8a216bf792f4478ec2f5a1'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20380101-20381231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20380101-20381231.nc' 'SHA256' 'df8250ea890ac3cda8173f6cca98b5fe699ca304ba19b91f29d20163703d7158'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20390101-20391231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20390101-20391231.nc' 'SHA256' '4bb57f47392625232c81b4b983d33a58b30ef2d9961abe5efeeb059300fe1b46'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20400101-20401231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20400101-20401231.nc' 'SHA256' 'd6df1e99fbfad702ae2ca41e86ff71528bad587ae13578ed616c1c833b4e04bf'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20410101-20411231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20410101-20411231.nc' 'SHA256' '48332a85c5f51ca5e74ce69ebfbe784ee16629224706f75b41b9d63ad882a4c8'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20420101-20421231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20420101-20421231.nc' 'SHA256' 'abeffe85061ed1a08e59ce71c8d7288cd5f36d51efeaf5d7974d29bcd6c8a85c'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20430101-20431231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20430101-20431231.nc' 'SHA256' 'fecd97bd5d28df1de48ec8df2f3ac49c6ce356835515176e7b4542c041f68883'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20440101-20441231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20440101-20441231.nc' 'SHA256' '7f531bce14aebaa494b54f7a485c2d02c1eb56868eb728dd3d40d7ff59ef7e10'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20450101-20451231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20450101-20451231.nc' 'SHA256' '453f52f2ce59ece5773d67bf92298a91d5d150fbc62f9d1e4001b4115963b717'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20460101-20461231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20460101-20461231.nc' 'SHA256' 'ff0519d91683ed1198432b324277ef569f297ef9e2612933c7796ac8b2a5050d'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20470101-20471231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20470101-20471231.nc' 'SHA256' 'ff164d86c765473423cefc59e3848b8838967f5fd5b48bd0cc70a6b101539b8d'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20480101-20481231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20480101-20481231.nc' 'SHA256' '60b334b4d9ac9805a44abcf0e423334e76df734f02ec15793cf0581821c6c810'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20490101-20491231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20490101-20491231.nc' 'SHA256' '0268b8ba0310896087ffc880e7009f0deb9cb849259ce4a611faa19020bf8b94'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20500101-20501231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20500101-20501231.nc' 'SHA256' 'd781de78de20a7594706d7ddcc0d4e64ef3f9f8afb6f4abca9436d7d50b8d741'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20510101-20511231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20510101-20511231.nc' 'SHA256' '824ff0cb5a4a0aded97aa299124106d9b3eace1faffc38f561f8ffb255abe227'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20520101-20521231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20520101-20521231.nc' 'SHA256' '1c77a55d616239ba47c102b6c4bf8991b00a1ca6b6bf52ad7ea2751a29edebf3'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20530101-20531231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20530101-20531231.nc' 'SHA256' 'a68fb96922b380da9d80e3977ca5ee6231809245c465dfe176dc2bf292f4bb53'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20540101-20541231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20540101-20541231.nc' 'SHA256' 'f740b1b42be288a78bafd9d3232c2913363bbba09511d74040f4b184637ab159'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20550101-20551231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20550101-20551231.nc' 'SHA256' '0cf89b3e9053b282785a848614caeafc982c56649e5f801427e5ec46c9cc1cb4'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20560101-20561231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20560101-20561231.nc' 'SHA256' 'daa0086c616189a6fb5d83bb81c980756b2f39100cf5b3fc6a3077e82d6c765e'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20570101-20571231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20570101-20571231.nc' 'SHA256' '69516092de9593be228c65a2c99ea29b0642563452a3754226acec866f55cdc1'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20580101-20581231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20580101-20581231.nc' 'SHA256' 'aff3a1cbedef5d1f6c9fb3e54ae6f1afaf600e364d2a20fd8a0df7049f0d8695'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20590101-20591231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20590101-20591231.nc' 'SHA256' 'dd0b3bf7d9a277c871d58badb8dfbffd7eb8e724799231f3c7b2449bffa34142'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20600101-20601231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20600101-20601231.nc' 'SHA256' '79831dccdb96fdb56a2d4b483bc378a11e24ba8aa5ce438e7c24be96e3e99932'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20610101-20611231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20610101-20611231.nc' 'SHA256' 'fff28de9a4c528d4785ef8d977024a1f3a222343d2ec20498814a98867e46f54'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20620101-20621231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20620101-20621231.nc' 'SHA256' '0f37741331d404e8a674482502a09c8abaf8ee1d5433376aafc139785dfbb392'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20630101-20631231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20630101-20631231.nc' 'SHA256' 'a4d1c673f9c79533989fd9e3f4a5b9989f314bbbe9d22c847883ab6d1f0c71bc'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20640101-20641231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20640101-20641231.nc' 'SHA256' '8d87a6bf478142c3b3021da2abcf2f64c10d0dc4dab7c0f343cc6647ce37632d'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20650101-20651231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20650101-20651231.nc' 'SHA256' '31f9b49b71c98b467dc4fcc9e4c812f9c47086dbb2a5019f473ac5260741e463'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20660101-20661231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20660101-20661231.nc' 'SHA256' 'd7d05ce7f05d8b03dd0f675c669034dad68f482ea908680761ca51f47dff5a18'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20670101-20671231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20670101-20671231.nc' 'SHA256' '3532c89dc7175842bfe9b01fad13ebceda2fac3961b59c0a70fbcf7151bcba08'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20680101-20681231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20680101-20681231.nc' 'SHA256' 'c825dc59572a3927ac3cfcd5339206d4062a237c19ef1e363090ce19a92cdb68'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20690101-20691231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20690101-20691231.nc' 'SHA256' 'bec495d71519690c503d863c450ba78fac44b25c959dee3107ae1dd8dbe798ba'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20700101-20701231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20700101-20701231.nc' 'SHA256' '82d804cc5fe0807e5e83dc69f8b6618aaa117713c9fb54040f544baab1fe3b89'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20710101-20711231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20710101-20711231.nc' 'SHA256' '78e6a2861d6c73e92a94c1892c1be03481584fbb9c0c34bde0cec7a783dcb097'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20720101-20721231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20720101-20721231.nc' 'SHA256' 'df20884251039b725df8adce461c7e3ca8c492284120f498c251f2e5ce94c213'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20730101-20731231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20730101-20731231.nc' 'SHA256' '66a63faf3d2e8321057318c09b1f2bdca9b49e3f244c0df64a247906f4b853af'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20740101-20741231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20740101-20741231.nc' 'SHA256' '802123415624d679a82e2af762eb1ea2140b60040a948b7e24114e92f3f6405d'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20750101-20751231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20750101-20751231.nc' 'SHA256' '8c55bd329700d745fb9e0df2c87fff0242214038e6b8db4526f6e5137f362991'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20760101-20761231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20760101-20761231.nc' 'SHA256' '801df41fa14a8e7fee7f0077f36359d411160c065bf4b7379d0ffabd0f5a9041'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20770101-20771231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20770101-20771231.nc' 'SHA256' 'e5ed23ebc1f654edc7362cfbbb5995a112d83fdac15e21c298bf1721a36c33d8'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20780101-20781231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20780101-20781231.nc' 'SHA256' '93bcc233b4999992e117978ab26ec779cebc3d8be3911342c8217c9f8d25f5ec'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20790101-20791231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20790101-20791231.nc' 'SHA256' 'bbd175944a4c307c13bf9566b373777f3dae3f34603c38e40717e6269ad8d973'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20800101-20801231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20800101-20801231.nc' 'SHA256' 'ce78cd7e534fb941d9e1bef1caaa5216f6ef049e6f77fea0aeb1719a8beb7ec8'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20810101-20811231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20810101-20811231.nc' 'SHA256' '800fce9da15bc18f57444e4254361c650b57d52da08aea1e7edce8eacc420d01'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20820101-20821231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20820101-20821231.nc' 'SHA256' 'c5c25263850dcaac6e5eef33ca65470fd4ef556924d804e4664174fdba95a143'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20830101-20831231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20830101-20831231.nc' 'SHA256' '2405f5238d0b7b820b178b733e619a18e5e66b37afb1ad83c93318b7656a80ba'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20840101-20841231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20840101-20841231.nc' 'SHA256' '9fc991f1f3d41cd593eba238ae0a672632d31a1a410ae7b761b47f9eb8afcefe'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20850101-20851231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20850101-20851231.nc' 'SHA256' '80e4074fba12b3869581171559ace8a6ef864eb754580ae0e225ca89746136cd'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20860101-20861231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20860101-20861231.nc' 'SHA256' '2f69f64fbfa4333c00f52be8e6dd97af124e312c9a3de0f0c912eb251e75fd0b'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20870101-20871231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20870101-20871231.nc' 'SHA256' 'aa440ec93544336e22c4a641302d232f159eb3e624b3a2a9191915996a9c84a5'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20880101-20881231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20880101-20881231.nc' 'SHA256' '97fdb4c0059453de8b7236f4baa88130ae49dc28e196161869599fa1c8e52032'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20890101-20891231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20890101-20891231.nc' 'SHA256' '80bb0adb261e9c71e3e21cf0a1bf973853bab61a189935403424f0941cc650b6'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20900101-20901231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20900101-20901231.nc' 'SHA256' '3497b771d9bb747737e0ec3cb8a6efd554589d24adfcddfbb70eb3691c1ddb6b'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20910101-20911231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20910101-20911231.nc' 'SHA256' '9dab576bfcfe036517b1fb3fef7aaac5f12567a1f45c3f30d907e2df342cd5da'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20920101-20921231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20920101-20921231.nc' 'SHA256' '20deb87ba1198d35bfd1e927be411872a99b5d3a19493a39d83c88b2e54c4003'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20930101-20931231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20930101-20931231.nc' 'SHA256' 'fdaa7e61869d550d638fee2fcf81e77ebc46f11d14cd11e1e6bd79bdb62fe6e0'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20940101-20941231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20940101-20941231.nc' 'SHA256' '0351b8f36ceb4d74dd33e03e44003cb920efde315459d1fb8c135b3cbd5f8a39'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20950101-20951231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20950101-20951231.nc' 'SHA256' '33fffc8f7c36ef52d6451c5ea00c7e726246854f2b3e8805ae9be4966bf894ae'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20960101-20961231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20960101-20961231.nc' 'SHA256' 'da51101c833a8ce331adcea080413c819a8107ceadf30054244c294e7511edbe'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20970101-20971231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20970101-20971231.nc' 'SHA256' '0ae1747460768f4f1e618384fb9cb8a3c635a2c3136b393742b9318d19adc18a'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20980101-20981231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20980101-20981231.nc' 'SHA256' '9d3ec438293394aa2450030518cfe2469a2d267afe75088d071bbdb7ec99d030'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_20990101-20991231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_20990101-20991231.nc' 'SHA256' '1c36765efacc6b8a3baed9febea65b69ef2626eb4ccd80ed4ced95f7c60008fc'
'hur_day_MIROC6_ssp370_r3i1p1f1_gn_21000101-21001231.nc' 'http://esgf-data02.diasjp.net/thredds/fileServer/esg_dataroot/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp370/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp370_r3i1p1f1_gn_21000101-21001231.nc' 'SHA256' '83eb986c7831a4abaee980e826a4ea87833e91d97e7aaf3a4827f6e042c6414c'
EOF--dataset.file.url.chksum_type.chksum
)"

# ESG_HOME should point to the directory containing ESG credentials.
#   Default is $HOME/.esg
ESG_HOME=${ESG_HOME:-$HOME/.esg}
[[ -d $ESG_HOME ]] || mkdir -p $ESG_HOME

ESG_CREDENTIALS=${X509_USER_PROXY:-$ESG_HOME/credentials.pem}
ESG_CERT_DIR=${X509_CERT_DIR:-$ESG_HOME/certificates}
MYPROXY_STATUS=$HOME/.MyProxyLogon
COOKIE_JAR=$ESG_HOME/cookies
MYPROXY_GETCERT=$ESG_HOME/getcert.jar
CERT_EXPIRATION_WARNING=$((60 * 60 * 8))   #Eight hour (in seconds)

WGET_TRUSTED_CERTIFICATES=$ESG_HOME/certificates


# Configure checking of server SSL certificates.
#   Disabling server certificate checking can resolve problems with myproxy
#   servers being out of sync with datanodes.
CHECK_SERVER_CERT=${CHECK_SERVER_CERT:-Yes}

check_os() {
    local os_name=$(uname | awk '{print $1}')
    case ${os_name} in
        Linux)
            ((debug)) && echo "Linux operating system detected"
            LINUX=1
            MACOSX=0
            ;;
        Darwin)
            ((debug)) && echo "Mac OS X operating system detected"
            LINUX=0
            MACOSX=1
            ;;
        *)
            echo "Unrecognized OS [${os_name}]"
            return 1
            ;;
    esac
    return 0
}

#taken from http://stackoverflow.com/a/4025065/1182464
vercomp () {
    if [[ $1 == $2 ]]
    then
        return 0
    fi
    local IFS=.
    local i ver1=($1) ver2=($2)
    # fill empty fields in ver1 with zeros
    for ((i=${#ver1[@]}; i<${#ver2[@]}; i++))
    do
        ver1[i]=0
    done
    for ((i=0; i<${#ver1[@]}; i++))
    do
        if [[ -z ${ver2[i]} ]]
        then
            # fill empty fields in ver2 with zeros
            ver2[i]=0
        fi
        if ((10#${ver1[i]} > 10#${ver2[i]}))
        then
            return 1
        fi
        if ((10#${ver1[i]} < 10#${ver2[i]}))
        then
            return 2
        fi
    done
    return 0
}

check_commands() {
    #check wget
    local MIN_WGET_VERSION=1.10
    vercomp $(wget -V | sed -n 's/^.* \([1-9]\.[0-9.]*\) .*$/\1/p') $MIN_WGET_VERSION
    case $? in
        2) #lower
            wget -V
            echo
            echo "** ERROR: wget version is too old. Use version $MIN_WGET_VERSION or greater. **" >&2
            exit 1
    esac
}

usage() {
    echo "Usage: $(basename $0) [flags] [openid] [username]"
    echo "Flags is one of:"
    sed -n '/^while getopts/,/^done/  s/^\([^)]*\)[^#]*#\(.*$\)/\1 \2/p' $0
    echo
    echo "This command stores the states of the downloads in .$0.status"
    echo "For more information check the website: http://esgf.org/wiki/ESGF_wget"
}

#defaults
debug=0
clean_work=1

#parse flags
while getopts ':c:pfF:o:w:isuUndvqhHI:T' OPT; do
    case $OPT in
        H) skip_security=1 && use_http_sec=1;; #       : Authenticate with OpenID (username,) and password, without the need for a certificate.
        T) force_TLSv1=1;;              #       : Forces wget to use TLSv1. 
        c) ESG_CREDENTIALS="$OPTARG";;  #<cert> : use this certificate for authentication.
        f) force=1;;                    #       : force certificate retrieval (defaults to only once per day); for certificate-less authentication (see -H option), this flag will force login and refresh cookies.
        F) input_file="$OPTARG";;       #<file> : read input from file instead of the embedded one (use - to read from stdin)
        o) openId="$OPTARG";;           #<openid>: Provide OpenID instead of interactively asking for it.
        I) username_supplied="$OPTARG";;    #<user_id> : Explicitly set user ID.  By default, the user ID is extracted from the last component of the OpenID URL.  Use this flag to override this behaviour.                   
        w) output="$OPTARG";;           #<file> : Write embedded files into a file and exit
        i) insecure=1;;                 #       : set insecure mode, i.e. don't check server certificate
        s) skip_security=1 && use_cookies_for_http_basic_auth_start=1;;            #       : completely skip security. It will only work if the accessed data is not secured at all. -- works only if the accessed data is unsecured or a certificate exists or cookies are saved (latter applies to -H option only).
        u) update=1;;                   #       : Issue the search again and see if something has changed.
        U) update_files=1;;             #       : Update files from server overwriting local ones (detect with -u)
        n) dry_run=1;;                  #       : Don't download any files, just report.
        p) clean_work=0;;               #       : preserve data that failed checksum
        d) verbose=1;debug=1;;          #       : display debug information
        v) verbose=1;;                  #       : be more verbose
        q) quiet=1;;                    #       : be less verbose
        h) usage && exit 0;;            #       : displays this help
        \?) echo "Unknown option '$OPTARG'" >&2 && usage && exit 1;;
        \:) echo "Missing parameter for flag '$OPTARG'" >&2 && usage && exit 1;;
    esac
done
shift $(($OPTIND - 1))

#setup input as desired by the user
if [[ "$input_file" ]]; then
    if [[ "$input_file" == '-' ]]; then
        download_files="$(cat)" #read from STDIN
        exec 0</dev/tty #reopen STDIN as cat closed it
    else
        download_files="$(cat $input_file)" #read from file
    fi
fi

#if -w (output) was selected write file and finish:
if [[ "$output" ]]; then
    #check the file
    if [[ -f "$output" ]]; then
        read -p "Overwrite existing file $output? (y/N) " answ
        case $answ in y|Y|yes|Yes);; *) echo "Aborting then..."; exit 0;; esac
    fi
    echo "$download_files">$output
    exit
fi


#assure we have everything we need
check_commands

if ((update)); then
    echo "Checking the server for changes..."
    new_wget="$(wget "$search_url" -qO -)"
    compare_cmd="grep -vE '^(# Generated by|# Search URL|search_url=)'"
    if diff -q <(eval $compare_cmd<<<"$new_wget") <(eval $compare_cmd $0) >/dev/null; then
        echo "No changes detected."
    else
        echo "Wget was changed. Dowloading. (old renamed to $0.old.#N)"
        counter=0
        while [[ -f $0.old.$counter ]]; do ((counter++)); done
        mv $0 $0.old.$counter
        echo "$new_wget" > $0
    fi
    exit 0      
fi


##############################################################################
check_java() {
    if ! type java >& /dev/null; then
        echo "Java could not be found." >&2
        return 1
    fi
    if java -version 2>&1|grep openjdk >/dev/null; then
        openjdk=1;
    else
        openjdk=0;
    fi
    jversion=($(jversion=$(java -version 2>&1 | awk '/version/ {gsub("\"","");print $3}'); echo ${jversion//./ }))
    mVer=${jversion[1]}
    if [ $openjdk -eq 1 ]; then
        mVer=${jversion[0]}
        if ((mVer<5)); then
            echo "Openjdk detected. Version 9+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    else
    
        if ((mVer<5)); then
            echo "Java version 1.5+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    fi
}

check_myproxy_logon() {
    if ! type myproxy-logon >& /dev/null; then
	echo "myproxy-logon could not be found." >&2
	return 1
    fi
    echo "myproxy-logon found" >&2
}

proxy_to_java() {
    local proxy_user proxy_pass proxy_server proxy_port
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$http_proxy)
    local JAVA_PROXY=
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyPort=$proxy_port"
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$https_proxy)
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyPort=$proxy_port"
    
    echo "$JAVA_PROXY"
}

# get certificates from github
get_certificates() {
    # don't if this was already done today
    [[ -z $force && "$(find $ESG_CERT_DIR -type d -mtime -1 2>/dev/null)" ]] && return 0
    echo -n "Retrieving Federation Certificates..." >&2

    if ! wget -O $ESG_HOME/esg-truststore.ts --no-check-certificate https://github.com/ESGF/esgf-dist/raw/master/installer/certs/esg-truststore.ts; then
        echo "Could not fetch esg-truststore";
        return 1
    fi
    
    if ! wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar -O - -q | tar x -C $ESG_HOME; then
        #certificates tarred into esg_trusted_certificates. (if it breaks, let the user know why
        wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar
        echo "Could't update certs!" >&2
        return 1
    else
        #if here everythng went fine. Replace old cert with this ones    
        [[ -d $ESG_CERT_DIR ]] && rm -r $ESG_CERT_DIR || mkdir -p $(dirname $ESG_CERT_DIR)
        mv $ESG_HOME/esg_trusted_certificates $ESG_CERT_DIR
        touch $ESG_CERT_DIR
        echo "done!" >&2
    fi

}

# Retrieve ESG credentials
unset pass
get_credentials() {
    if check_java
    then
	use_java=1
    else	
	use_java=0
	echo "No suitable java for obtaining certificate - checking for myproxy-logon instead" >&2
	check_myproxy_logon || exit 1
    fi
    #get all certificates
    get_certificates

    if [[ -z "$(find $MYPROXY_GETCERT -type f -mtime -1 2>/dev/null)" ]]; then
        echo -n "(Downloading $MYPROXY_GETCERT... "
        mkdir -p $(dirname $MYPROXY_GETCERT)
        if wget -q --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/getcert.jar -O $MYPROXY_GETCERT;then
            echo 'done)'
            touch $MYPROXY_GETCERT
        else
            echo 'failed)'
        fi
    fi

    #if the user already defined one, use it
    if [[ -z $openId ]]; then
        #try to parse the last valid value if any
        [[ -f "$MYPROXY_STATUS" ]] && openId=$(awk -F= '/^OpenID/ {gsub("\\\\", ""); print $2}' $MYPROXY_STATUS)
        if [[ -z $openId ]]; then
            #no OpenID, we need to ask the user
            echo -n "Please give your OpenID (Example: https://myserver/example/username) ? "
        else
            #Allow the user to change it if desired
            echo -n "Please give your OpenID (hit ENTER to accept default: $openId)? "
        fi
        read -e
        [[ "$REPLY" ]] && openId="$REPLY"
    else
        ((verbose)) && echo "Using user defined OpenID $openId (to change use -o <open_id>)"
    fi

    if grep -q ceda.ac.uk <<<$openId; then
        username=${openId##*/}
        echo -n "Please give your username if different [$username]: "
        read -e
        [[ "$REPLY" ]] && username="$REPLY"
    fi
    


    if [ $use_java -eq 1 ]
    then
        local args=
        #get password
	[[ ! "$pass" ]] && read -sp "MyProxy Password? " pass
        [[ "$openId" ]] && args=$args" --oid $openId"
        [[ "$pass" ]] && args=$args" -P $pass"
        [[ "$username" ]] && args=$args" -l $username"
        
        echo -n $'\nRetrieving Credentials...' >&2
        if ! java $(proxy_to_java) -jar $MYPROXY_GETCERT $args --ca-directory $ESG_CERT_DIR --output $ESG_CREDENTIALS ; then        
            echo "Certificate could not be retrieved"
            exit 1
        fi
        echo "done!" >&2
    else
        args=`openid_to_myproxy_args $openId $username` || exit 1
        if ! myproxy-logon $args -b -o $ESG_CREDENTIALS
	then
            echo "Certificate could not be retrieved"
	    exit 1
        fi
	cp $HOME/.globus/certificates/* $ESG_CERT_DIR/	
    fi
}

openid_to_myproxy_args() {
  python - <<EOF || exit 1
import sys
import re
import xml.etree.ElementTree as ET
import urllib2
openid = "$1"
username = "$2" or re.sub(".*/", "", openid)
e = ET.parse(urllib2.urlopen(openid))
servs = [el for el in e.getiterator() if el.tag.endswith("Service")]
for serv in servs:
    servinfo = dict([(re.sub(".*}", "", c.tag), c.text)
                     for c in serv.getchildren()])
    try:
        if servinfo["Type"].endswith("myproxy-service"):
            m = re.match("socket://(.*):(.*)", servinfo["URI"])
            if m:
                host = m.group(1)
                port = m.group(2)
                print "-s %s -p %s -l %s" % (host, port, username)
                break
    except KeyError:
        continue
else:
    sys.stderr.write("myproxy service could not be found\n")
    sys.exit(1)
EOF
}

# check the certificate validity
check_cert() {
    if [[ ! -f "$ESG_CERT" || $force ]]; then
        #not there, just get it
        get_credentials
    elif which openssl &>/dev/null; then
        #check openssl and certificate
        if ! openssl x509 -checkend $CERT_EXPIRATION_WARNING -noout -in $ESG_CERT 2>/dev/null; then
            echo "The certificate expires in less than $((CERT_EXPIRATION_WARNING / 60 / 60)) hour(s). Renewing..."
            get_credentials
        else
            #ok, certificate is fine
            return 0
        fi
    fi
}

#
# Detect ESG credentials
#
find_credentials() {

    #is X509_USER_PROXY or $HOME/.esg/credential.pem
    if [[ -f "$ESG_CREDENTIALS" ]]; then
        # file found, proceed.
        ESG_CERT="$ESG_CREDENTIALS"
        ESG_KEY="$ESG_CREDENTIALS"
    elif [[ -f "$X509_USER_CERT" && -f "$X509_USER_KEY" ]]; then
        # second try, use these certificates.
        ESG_CERT="$X509_USER_CERT"
        ESG_KEY="$X509_USER_KEY"
    else
        # If credentials are not present, just point to where they should go 
        echo "No ESG Credentials found in $ESG_CREDENTIALS" >&2
            ESG_CERT="$ESG_CREDENTIALS"
            ESG_KEY="$ESG_CREDENTIALS"
            #they will be retrieved later one
    fi


    #chek openssl and certificate
    if (which openssl &>/dev/null); then
        if ( openssl version | grep 'OpenSSL 1\.0' ); then
            echo '** WARNING: ESGF Host certificate checking might not be compatible with OpenSSL 1.0+'
        fi
        check_cert || { (($?==1)); exit 1; }
    fi
    
    if [[ $CHECK_SERVER_CERT == "Yes" ]]; then
        [[ -d "$ESG_CERT_DIR" ]] || { echo "CA certs not found. Aborting."; exit 1; }
        PKI_WGET_OPTS="--ca-directory=$ESG_CERT_DIR"
    fi

    #some wget version complain if there's no file present
    [[ -f $COOKIE_JAR ]] || touch $COOKIE_JAR

    PKI_WGET_OPTS="$PKI_WGET_OPTS --certificate=$ESG_CERT --private-key=$ESG_KEY --save-cookies=$COOKIE_JAR --load-cookies=$COOKIE_JAR --ca-certificate=$ESG_CERT"

}

check_chksum() {
    local file="$1"
    local chk_type=$2
    local chk_value=$3
    local local_chksum=Unknown

    case $chk_type in
        md5) local_chksum=$(md5sum_ $file | cut -f1 -d" ");;
        sha256) local_chksum=$(sha256sum_ $file|awk '{print $1}'|cut -d ' ' -f1);;
        *) echo "Can't verify checksum." && return 0;;
    esac

    #verify
    ((debug)) && echo "local:$local_chksum vs remote:$chk_value" >&2
    echo $local_chksum
}

#Our own md5sum function call that takes into account machines that don't have md5sum but do have md5 (i.e. mac os x)
md5sum_() {
    hash -r
    if type md5sum >& /dev/null; then
        echo $(md5sum $@)
    else
        echo $(md5 $@ | sed -n 's/MD5[ ]*\(.*\)[^=]*=[ ]*\(.*$\)/\2 \1/p')
    fi
}

#Our own sha256sum function call that takes into account machines that don't have sha256sum but do have sha2 (i.e. mac os x)
sha256sum_() {
    hash -r
    if type sha256sum >& /dev/null; then
        echo $(sha256sum $@)
    elif type shasum >& /dev/null; then
        echo $(shasum -a 256 $@)
    else
        echo $(sha2 -q -256 $@)
    fi
}

get_mod_time_() {
    if ((MACOSX)); then
        #on a mac modtime is stat -f %m <file>
        echo "$(stat -f %m $@)"
    else
        #on linux (cygwin) modtime is stat -c %Y <file>
        echo "$(stat -c %Y $@)"
    fi
    return 0;
}

remove_from_cache() {
    local entry="$1"
    local tmp_file="$(grep -ve "^$entry" "$CACHE_FILE")"
    echo "$tmp_file" > "$CACHE_FILE"
    unset cached
}

#Download data from node using cookies and not certificates.
download_http_sec()
{
  #The data to be downloaded.
  data=" $url"
  filename="$file"  

  #Wget args.
  if ((insecure)) 
  then
   wget_args=" --no-check-certificate --cookies=on  --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt " 
  else
   wget_args=" --ca-directory=$WGET_TRUSTED_CERTIFICATES --cookies=on --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt "  
  fi 

  if ((use_cookies_for_http_basic_auth_start)) || ((use_cookies_for_http_basic_auth)) 
  then
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
  fi
  
  if((force_TLSv1))
  then
   wget_args=" $wget_args"" --secure-protocol=TLSv1 "
  fi
  
  
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
    wget_args="$wget_args $ESGF_WGET_OPTS"
  fi  
  

  #use cookies for the next downloads
  use_cookies_for_http_basic_auth=1;
   
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "wget $wget_args $data\n"
  fi


  #Try to download the data. 
  command="wget $wget_args -O $filename $data"
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
      
  #Extract orp service from url ?
  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" == 1 )) && 
  if  echo "$http_resp" | grep -q "/esg-orp/"      
  then
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   orp_service=$(echo "$urls" | tr '\n' ' ' | cut -d' ' -f 2)


   #Use cookies for transaction with orp.
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
   
   #Download data using either http basic auth or http login form.
   if [[ "$openid_c" == */openid/  || "$openid_c" == */openid ]]
   then
    download_http_sec_open_id
   else
    download_http_sec_decide_service
   fi
  else  
   if    echo "$http_resp" | grep -q "401 Unauthorized"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || echo "$http_resp" | grep -q "Connection timed out."  \
      || echo "$http_resp" | grep -q "no-check-certificate"  \
      || (( $cmd_exit_status != 0 ))      
   then 
    echo "ERROR : http request to OpenID Relying Party service failed."
    failed=1
   fi
  fi
}


#Function that decides which implementaion of idp to use.
download_http_sec_decide_service()
{
  #find claimed id

  pos=$(echo "$openid_c" | egrep -o '/' | wc -l)
  username_c=$(echo "$openid_c"  | cut -d'/' -f "$(($pos + 1))")
  esgf_uri=$(echo "$openid_c" | egrep -o '/esgf-idp/openid/')

  host=$(echo "$openid_c"  | cut -d'/' -f 3)
  #test ceda first.

  if [[ -z "$esgf_uri" ]]
  then
   openid_c_tmp="https://""$host""/openid/"
  else
   openid_c_tmp="https://""$host""/esgf-idp/openid/" 
  fi

  command="wget "$openid_c_tmp" --no-check-certificate ${force_TLSv1:+--secure-protocol=TLSv1} -O-"
        
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
   command="$command $ESGF_WGET_OPTS"
  fi  
          
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "$command\n"
  fi
            

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
  

  if    echo "$http_resp" | grep -q "[application/xrds+xml]"  \
     && echo "$http_resp" | grep -q "200 OK"  \
     && (( cmd_exit_status == 0 ))       
  then
   openid_c=$openid_c_tmp
   download_http_sec_open_id
  else
   if [[ -z "$esgf_uri" ]]
   then
    echo "ERROR : HTTP request to OpenID Relying Party service failed."
    failed=1
   else
   download_http_sec_cl_id
   fi
  fi
}


download_http_sec_retry()
{
  echo -e "\nRetrying....\n"
  #Retry in case that last redirect did not work, this happens with older version of wget.
  command="wget $wget_args $data"
      
  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi   
   
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"

  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
   
  if    echo "$http_resp" | grep -q "401 Unauthorized"  \
     || echo "$http_resp" | grep -q "403: Forbidden"  \
     || echo "$http_resp" | grep -q "Connection timed out."  \
     || echo "$http_resp" | grep -q "no-check-certificate"  \
     || (( $cmd_exit_status != 0 ))      
  then 
   echo -e "\nERROR : Retry failed.\n"
   #rm "$filename"
   failed=1
  fi #if retry failed.
}

#Function for downloading data using the claimed id.
download_http_sec_cl_id()
{
  #Http request for sending openid to the orp service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\"  $wget_args -O- https://$orp_service/esg-orp/j_spring_openid_security_check.htm "

  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "wget $command\n"
  fi 
  
  
  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"

  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
    
  
  #Extract orp service from openid ?
  #Evaluate response.If redirected to idp service send the credentials.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( redirects == 2  )) && 
  if  echo "$http_resp" | grep -q "login.htm"  && (( cmd_exit_status == 0 ))   
  then 
  
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   idp_service=$(echo "$urls"  | tr '\n' ' ' | cut -d' ' -f 2) 
      
   command="wget --post-data  password=\"$password_c\" $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$idp_service/esgf-idp/idp/login.htm"
   

   #Debug message.
   if  ((debug))
   then
    echo -e "Executing:\n"
    echo -e "wget $command\n"
   fi 

   #Execution of command.
   http_resp=$(eval $command  2>&1)
   cmd_exit_status="$?"
      
   if ((debug))
   then
    echo -e "\nHTTP response:\n $http_resp\n"
   fi 
        
   #Evaluate response. 
   #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
   #(( "$redirects" != 5 )) \ 
   if    echo "$http_resp" | grep -q "text/html"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || (( cmd_exit_status != 0 ))        
   then 
    rm "$filename"
    download_http_sec_retry
   fi
 
  else
   echo "ERROR : HTTP request to OpenID Provider service failed."
   failed=1
  fi #if redirected to idp.  
}



download_http_sec_open_id()
{
  #Http request for sending openid to the orp web service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\" --header=\"esgf-idea-agent-type:basic_auth\" --http-user=\"$username_c\" --http-password=\"$password_c\"  $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$orp_service/esg-orp/j_spring_openid_security_check.htm "


  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi 

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 

  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" != 7 )) ||
  if   echo "$http_resp" | grep -q "text/html"  ||  (( $cmd_exit_status != 0 ))   
  then
   rm "$filename"
   download_http_sec_retry     
  fi #if error during http basic authentication. 
  
}


download() {
    wget="wget ${insecure:+--no-check-certificate} ${quiet:+-q} ${quiet:--v} -c ${force_TLSv1:+--secure-protocol=TLSv1} $PKI_WGET_OPTS"
    
    while read line
    do
        # read csv here document into proper variables
        eval $(awk -F "' '" '{$0=substr($0,2,length($0)-2); $3=tolower($3); print "file=\""$1"\";url=\""$2"\";chksum_type=\""$3"\";chksum=\""$4"\""}' <(echo $line) )

        #Process the file
        echo -n "$file ..."

        #get the cached entry if any.
        cached="$(grep -e "^$file" "$CACHE_FILE")"
        
        #if we have the cache entry but no file, clean it.
        if [[ ! -f $file && "$cached" ]]; then
            #the file was removed, clean the cache
            remove_from_cache "$file"
            unset cached
        fi
        
        #check it wasn't modified
        if [[ -n "$cached" && "$(get_mod_time_ $file)" == $(echo "$cached" | cut -d ' ' -f2) ]]; then
                    if [[ "$chksum" == "$(echo "$cached" | cut -d ' ' -f3)" ]]; then
                echo "Already downloaded and verified"
                continue
            elif ((update_files)); then
                #user want's to overwrite newer files
                rm $file
                remove_from_cache "$file"
                unset cached
            else
                #file on server is different from what we have. 
                echo "WARNING: The remote file was changed (probably a new version is available). Use -U to Update/overwrite"
                continue
            fi
        fi
        unset chksum_err_value chksum_err_count
        
        while : ; do
            # (if we had the file size, we could check before trying to complete)
            echo "Downloading"
            [[ ! -d "$(dirname "$file")" ]] && mkdir -p "$(dirname "$file")"
            if ((dry_run)); then
                #all important info was already displayed, if in dry_run mode just abort
                #No status will be stored
                break
            else
                if ((use_http_sec))
                then
                 download_http_sec
                 if ((failed))
                 then
                  break
                 fi
                else
                 $wget -O "$file" $url || { failed=1; break; }  
                fi                
            fi

            #check if file is there
            if [[ -f $file ]]; then
                ((debug)) && echo file found
                if [[ ! "$chksum" ]]; then
                    echo "Checksum not provided, can't verify file integrity"
                    break
                fi
                result_chksum=$(check_chksum "$file" $chksum_type $chksum)
                if [[ "$result_chksum" != "$chksum" ]]; then
                    echo "  $chksum_type failed!"
                    if ((clean_work)); then
                        if !((chksum_err_count)); then
                                chksum_err_value=$result_chksum
                                chksum_err_count=2
                            elif ((checksum_err_count--)); then
                                if [[ "$result_chksum" != "$chksum_err_value" ]]; then
                                    #this is a real transmission problem
                                    chksum_err_value=$result_chksum
                                    chksum_err_count=2
                                fi
                            else
                                #ok if here we keep getting the same "different" checksum
                                echo "The file returns always a different checksum!"
                                echo "Contact the data owner to verify what is happening."
                                echo
                                sleep 1
                                break
                            fi
                        
                            rm $file
                            #try again
                            echo -n "  re-trying..."
                            continue
                    else
                            echo "  don't use -p or remove manually."
                    fi
                else
                    echo "  $chksum_type ok. done!"
                    echo "$file" $(get_mod_time_ "$file") $chksum >> $CACHE_FILE
                fi
            fi
            #done!
            break
        done
        
        if ((failed)); then
            echo "download failed"
            # most common failure is certificate expiration, so check this
            #if we have the pasword we can retrigger download
            ((!skip_security)) && [[ "$pass" ]] && check_cert
            unset failed
        fi
        
done <<<"$download_files"

}

dedup_cache_() {
    local file=${1:-${CACHE_FILE}}
    ((debug)) && echo "dedup'ing cache ${file} ..."
    local tmp=$(LC_ALL='C' sort  -r -k1,2 $file | awk '!($1 in a) {a[$1];print $0}' | sort -k2,2)
    ((DEBUG)) && echo "$tmp"
    echo "$tmp" > $file
    ((debug)) && echo "(cache dedup'ed)"
}

http_basic_auth_func_info_message()
{
  echo  "********************************************************************************"
  echo  "*                                                                              *"
  echo  "* Note that new functionality to allow authentication without the need for     *"
  echo  "* certificates is available with this version of the wget script.  To enable,  *"
  echo  "* use the \"-H\" option and enter your OpenID and password when prompted:        *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -H [options...]                                     *"
  echo  "*                                                                              *"
  echo  "* For a full description of the available options use the help option:         *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -h                                                  *"
  echo  "*                                                                              *"
  echo  "********************************************************************************"
}

#
# MAIN
#

if ((!use_http_sec))
then 
 http_basic_auth_func_info_message
fi

echo "Running $(basename $0) version: $version"
((verbose)) && echo "we use other tools in here, don't try to user their proposed 'options' directly"
echo "Use $(basename $0) -h for help."$'\n'

((debug)) && cat<<EOF
** Debug info **
ESG_HOME=$ESG_HOME
ESG_CREDENTIALS=$ESG_CREDENTIALS
ESG_CERT_DIR=$ESG_CERT_DIR
** -- ** -- ** -- ** --

EOF


cat <<'EOF-MESSAGE'
Script created for 131 file(s)
(The count won't match if you manually edit this file!)



EOF-MESSAGE
sleep 1

check_os
((!skip_security)) && find_credentials

if ((use_http_sec))
then 
     
 if (( ! insecure))
 then 
  get_certificates
 fi

 #Cookies folder.
 COOKIES_FOLDER="$ESG_HOME/wget_cookies"
 
 if (( force ))
 then
  if [ -d $COOKIES_FOLDER ] 
  then
   rm -rf $COOKIES_FOLDER
  fi
 fi

 #Create cookies folder. 
 if [[ ! -d $COOKIES_FOLDER ]] 
 then
  mkdir $COOKIES_FOLDER
 fi
 
 if((! use_cookies_for_http_basic_auth_start))
 then

  #Read openid.
  if [[ ! -z "$openId" ]]
  then
   openid_c="$openId"
  elif ( (("$#" > 1)) || (("$#" == 1)) ) 
  then
   openid_c=$1
  else
   read -p    "Enter your openid : " openid_c
  fi
  
  
  #Read username.
  if [[ ! -z "$username_supplied" ]]
  then
   username_c="$username_supplied"
  elif (("$#" == 2))
  then
   username_c=$2
  elif [[ "$openid_c" == */openid/ || "$openid_c" == */openid ]]
  then
   read -p    "Enter username : " username_c
  fi
  
  #Read password.
  read -s -p "Enter password : " password_c
  echo -e "\n"

 fi #use cookies

fi #use_http_sec 


#do we have old results? Create the file if not
[ ! -f $CACHE_FILE ] && echo "#filename mtime checksum" > $CACHE_FILE && chmod 666 $CACHE_FILE

#clean the force parameter if here (at htis point we already have the certificate)
unset force

download

dedup_cache_


echo "done"
