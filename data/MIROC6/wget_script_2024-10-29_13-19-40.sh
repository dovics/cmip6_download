#!/bin/bash
##############################################################################
# ESG Federation download script
#
# Template version: 1.2
# Generated by localhost - 2024/10/28 22:19:40
# Search URL: http://localhost:8080/esg-search/wget?dataset_id=CMIP6.ScenarioMIP.MIROC.MIROC6.ssp585.r3i1p1f1.day.tas.gn.v20191016|esgf-data1.llnl.gov,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp585.r3i1p1f1.day.tasmin.gn.v20191016|esgf-data1.llnl.gov,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp585.r3i1p1f1.day.hur.gn.v20191016|esgf-data1.llnl.gov,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp585.r3i1p1f1.day.pr.gn.v20191016|esgf-data1.llnl.gov,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp585.r3i1p1f1.day.rsds.gn.v20191016|esgf-data1.llnl.gov,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp585.r12i1p1f1.day.tasmax.gn.v20200623|esgf-data1.llnl.gov,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp585.r38i1p1f1.day.sfcWind.gn.v20200623|esgf-data1.llnl.gov
#
###############################################################################
# first be sure it's bash... anything out of bash or sh will break
# and the test will assure we are not using sh instead of bash
if [ $BASH ] && [ `basename $BASH` != bash ]; then
    echo "######## This is a bash script! ##############" 
    echo "Change the execution bit 'chmod u+x $0' or start with 'bash $0' instead of sh."
    echo "Trying to recover automatically..."
    sleep 1
    /bin/bash $0 $@
    exit $?
fi

version=1.3.2
CACHE_FILE=.$(basename $0).status
openId=
search_url='http://localhost:8080/esg-search/wget?dataset_id=CMIP6.ScenarioMIP.MIROC.MIROC6.ssp585.r3i1p1f1.day.tas.gn.v20191016|esgf-data1.llnl.gov,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp585.r3i1p1f1.day.tasmin.gn.v20191016|esgf-data1.llnl.gov,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp585.r3i1p1f1.day.hur.gn.v20191016|esgf-data1.llnl.gov,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp585.r3i1p1f1.day.pr.gn.v20191016|esgf-data1.llnl.gov,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp585.r3i1p1f1.day.rsds.gn.v20191016|esgf-data1.llnl.gov,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp585.r12i1p1f1.day.tasmax.gn.v20200623|esgf-data1.llnl.gov,CMIP6.ScenarioMIP.MIROC.MIROC6.ssp585.r38i1p1f1.day.sfcWind.gn.v20200623|esgf-data1.llnl.gov'

#These are the embedded files to be downloaded
download_files="$(cat <<EOF--dataset.file.url.chksum_type.chksum
'tasmax_day_MIROC6_ssp585_r12i1p1f1_gn_20150101-20241231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r12i1p1f1/day/tasmax/gn/v20200623/tasmax_day_MIROC6_ssp585_r12i1p1f1_gn_20150101-20241231.nc' 'SHA256' '7971b58f0fa6d2feec68508726dbb3cb493feeba2d9b96dc7a9a3bd374b7352c'
'tasmax_day_MIROC6_ssp585_r12i1p1f1_gn_20250101-20341231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r12i1p1f1/day/tasmax/gn/v20200623/tasmax_day_MIROC6_ssp585_r12i1p1f1_gn_20250101-20341231.nc' 'SHA256' 'ae7723f958ec620858dea72a04c1df68d4a8cc636bccea999a617bbe146480b0'
'tasmax_day_MIROC6_ssp585_r12i1p1f1_gn_20350101-20441231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r12i1p1f1/day/tasmax/gn/v20200623/tasmax_day_MIROC6_ssp585_r12i1p1f1_gn_20350101-20441231.nc' 'SHA256' 'cb484a8a725bee1b7596a2e5044eb44839f983d8e530471320d3d575e08db046'
'tasmax_day_MIROC6_ssp585_r12i1p1f1_gn_20450101-20541231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r12i1p1f1/day/tasmax/gn/v20200623/tasmax_day_MIROC6_ssp585_r12i1p1f1_gn_20450101-20541231.nc' 'SHA256' 'ef773b13df128a7644d23a2d5eff9fbc40594be22042416e6d4d74ffd4da23d7'
'tasmax_day_MIROC6_ssp585_r12i1p1f1_gn_20550101-20641231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r12i1p1f1/day/tasmax/gn/v20200623/tasmax_day_MIROC6_ssp585_r12i1p1f1_gn_20550101-20641231.nc' 'SHA256' '4190abb7da34be56d4dbc00c6636315dcbcbf818245e31b31f19fe30b54132de'
'tasmax_day_MIROC6_ssp585_r12i1p1f1_gn_20650101-20741231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r12i1p1f1/day/tasmax/gn/v20200623/tasmax_day_MIROC6_ssp585_r12i1p1f1_gn_20650101-20741231.nc' 'SHA256' '5267848479125cb3de6b6a7b555c670b563a7f5b6dbdf1b19724fde602de5172'
'tasmax_day_MIROC6_ssp585_r12i1p1f1_gn_20750101-20841231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r12i1p1f1/day/tasmax/gn/v20200623/tasmax_day_MIROC6_ssp585_r12i1p1f1_gn_20750101-20841231.nc' 'SHA256' '3428e9f772db31c556a08f23995f79ea0768eeaa71d9c822c17b31a13762ddf9'
'tasmax_day_MIROC6_ssp585_r12i1p1f1_gn_20850101-20941231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r12i1p1f1/day/tasmax/gn/v20200623/tasmax_day_MIROC6_ssp585_r12i1p1f1_gn_20850101-20941231.nc' 'SHA256' 'ec903aef118ec64a655072c8218091069a8152f5c744f7d9bab33e2f1affb612'
'tasmax_day_MIROC6_ssp585_r12i1p1f1_gn_20950101-21001231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r12i1p1f1/day/tasmax/gn/v20200623/tasmax_day_MIROC6_ssp585_r12i1p1f1_gn_20950101-21001231.nc' 'SHA256' '8c70be22353ad01f3da48fe1cf5bfbca3da1497ad15c06ac8949e7295f8d290e'
'sfcWind_day_MIROC6_ssp585_r38i1p1f1_gn_20150101-20241231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r38i1p1f1/day/sfcWind/gn/v20200623/sfcWind_day_MIROC6_ssp585_r38i1p1f1_gn_20150101-20241231.nc' 'SHA256' '03cc5b62179b3564acd2516bca9028f914a800e0275dd809b55be7605e988214'
'sfcWind_day_MIROC6_ssp585_r38i1p1f1_gn_20250101-20341231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r38i1p1f1/day/sfcWind/gn/v20200623/sfcWind_day_MIROC6_ssp585_r38i1p1f1_gn_20250101-20341231.nc' 'SHA256' 'e3478ef81cd162b1ac3ca9ec56255f1e9248b5766dc442e84143ae492efc683b'
'sfcWind_day_MIROC6_ssp585_r38i1p1f1_gn_20350101-20441231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r38i1p1f1/day/sfcWind/gn/v20200623/sfcWind_day_MIROC6_ssp585_r38i1p1f1_gn_20350101-20441231.nc' 'SHA256' '6bdd0e5bf6267a616a54659aab3f4dd83a34c6f064defd86e23382d07cae5779'
'sfcWind_day_MIROC6_ssp585_r38i1p1f1_gn_20450101-20541231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r38i1p1f1/day/sfcWind/gn/v20200623/sfcWind_day_MIROC6_ssp585_r38i1p1f1_gn_20450101-20541231.nc' 'SHA256' '553cfe99d6c2fa4a74965544f5995e9e462614a4447d6980d057a0263079c7c5'
'sfcWind_day_MIROC6_ssp585_r38i1p1f1_gn_20550101-20641231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r38i1p1f1/day/sfcWind/gn/v20200623/sfcWind_day_MIROC6_ssp585_r38i1p1f1_gn_20550101-20641231.nc' 'SHA256' '7679c0d64ba6ec285b53fcfe7865514119cb3ba8a0f4aa707c43c38161911835'
'sfcWind_day_MIROC6_ssp585_r38i1p1f1_gn_20650101-20741231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r38i1p1f1/day/sfcWind/gn/v20200623/sfcWind_day_MIROC6_ssp585_r38i1p1f1_gn_20650101-20741231.nc' 'SHA256' 'e1d89227a5f01d408e99ce1201935b4aff98f8a5e9a5d43b952dd8f5e819f7a2'
'sfcWind_day_MIROC6_ssp585_r38i1p1f1_gn_20750101-20841231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r38i1p1f1/day/sfcWind/gn/v20200623/sfcWind_day_MIROC6_ssp585_r38i1p1f1_gn_20750101-20841231.nc' 'SHA256' '537858a044f83b27510d9d3e9991e63b16e1f6eb5c01345d297e1b6e502eb2f0'
'sfcWind_day_MIROC6_ssp585_r38i1p1f1_gn_20850101-20941231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r38i1p1f1/day/sfcWind/gn/v20200623/sfcWind_day_MIROC6_ssp585_r38i1p1f1_gn_20850101-20941231.nc' 'SHA256' 'c438319bb711f5ee1ecc8034ced8e4f0f0e4c06f925faf7f618f9a7d71d774b3'
'sfcWind_day_MIROC6_ssp585_r38i1p1f1_gn_20950101-21001231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r38i1p1f1/day/sfcWind/gn/v20200623/sfcWind_day_MIROC6_ssp585_r38i1p1f1_gn_20950101-21001231.nc' 'SHA256' '251414c8e71b23478bf449c96c33b5d138c1e30ed24fc974b501e0c350ca9845'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20150101-20151231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20150101-20151231.nc' 'SHA256' '2fde2a91d97813fcd289c7cb1fcd97eb213ee4123a54f75fb235ad8a8d9563d7'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20160101-20161231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20160101-20161231.nc' 'SHA256' 'b9f056c803ce2cfc89aeae9ddf9a07eacff5c0a38bd9ab4ba0f05abef2a78a2c'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20170101-20171231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20170101-20171231.nc' 'SHA256' '4e9ec1f77bd5cc038c61bd969b3f28b42b37a112d40a36e869bf62ee70716c27'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20180101-20181231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20180101-20181231.nc' 'SHA256' 'ce14e66793bbfd315060ce300d65631ba97a8c55d29408e9e227e48910eca9e5'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20190101-20191231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20190101-20191231.nc' 'SHA256' '964eff7f28e7f3206d680ae2b7a553e65ba4059b1ab9ae2f077efe7a7e622ecd'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20200101-20201231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20200101-20201231.nc' 'SHA256' '249257406920c2cb21c4daa15badfc380858afdb7ad858b1a939a26352686628'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20210101-20211231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20210101-20211231.nc' 'SHA256' '6582aa045ca823f74d17276030d7a8e26295268042dced1c725e923de79732dd'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20220101-20221231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20220101-20221231.nc' 'SHA256' '4d927127837d6edecb84c17f63638b5c290ac8ff3e08f00f339f2e93ed8af5fb'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20230101-20231231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20230101-20231231.nc' 'SHA256' 'e868dd81ab6781261e24c3c2cdbd2ed6243a39f21a27b4f839d1b89620ccf12a'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20240101-20241231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20240101-20241231.nc' 'SHA256' 'e1ad0d5f4ea7eba03bac563c7cdeafecef6468b6ea7ef976ecf9fd2c9c0f6236'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20250101-20251231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20250101-20251231.nc' 'SHA256' '26796e74f8d1aff4f4fffcf68df54ed94a5f5e368d3cc21f0898a19a5eedbb0f'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20260101-20261231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20260101-20261231.nc' 'SHA256' '00059b073d0eeb866d359f812dfafd1d055d6732462a0a1d126f69e9bd49a775'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20270101-20271231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20270101-20271231.nc' 'SHA256' 'f691571a4eed4b2130ade45f308acbf5ca66398261c3493bf497e7839c7554cf'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20280101-20281231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20280101-20281231.nc' 'SHA256' 'cffdb6ae8d5ad60ee4e4c96765676c2e2be47927ca82002b91fad46c058e545e'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20290101-20291231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20290101-20291231.nc' 'SHA256' 'e61c9e48a82b81e41e624462b7d916375114363570934175124256b3be18f159'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20300101-20301231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20300101-20301231.nc' 'SHA256' 'f49f2cb59b5bd8be4385b8d3a54ccb1def2bfd75bf2a6a57d0f6a9b671d37efe'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20310101-20311231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20310101-20311231.nc' 'SHA256' 'dafd4f0a88dbdfce2af8d462fb19d168d27e62659e42caeec4b0bbc336cf4549'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20320101-20321231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20320101-20321231.nc' 'SHA256' '111e6e622c219d09f665d4c021f53fdcd29c464a79c7d4728323872f4fe5bc75'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20330101-20331231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20330101-20331231.nc' 'SHA256' '9059ddfd306662e0064a491a54e0a84a0c5feaf4cc2892f8986f028809ef2543'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20340101-20341231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20340101-20341231.nc' 'SHA256' '513237561501b55aa0f959b8021bfd2d60643a9e8dbf8969a0c4bc57f628f56b'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20350101-20351231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20350101-20351231.nc' 'SHA256' 'dd33034e655dc76ab73d8123e9f01df53f2b9515c207a3f658df236062d331ba'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20360101-20361231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20360101-20361231.nc' 'SHA256' 'd2cf4caa9986e7110fe01dcf872d9734f2bf154ab342bbf0a9339415e7803f60'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20370101-20371231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20370101-20371231.nc' 'SHA256' 'a3de51719e764db455b629bfd93d8e3cab9091f2e318d1351bfd1ffbe2ac092a'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20380101-20381231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20380101-20381231.nc' 'SHA256' '2ef26c2889a885dc2b66f8409aa054cdf7738f91a1a3d0e344c0a74969446f0a'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20390101-20391231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20390101-20391231.nc' 'SHA256' '33ff316f91b32dfc56e4878a67de91ff01f8a011ddaaeaf4e1d393eff7755385'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20400101-20401231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20400101-20401231.nc' 'SHA256' '8886603b05b40b61c17d3d0d2e94e35dc91490f13b216925fef2b47c8a12f034'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20410101-20411231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20410101-20411231.nc' 'SHA256' '4f33c3eda46b3b29d8ca24d627664fe068f1ffd21062f2a6f58658894ac8f101'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20420101-20421231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20420101-20421231.nc' 'SHA256' 'ff943e30ffed6116f61f1141ed0ae87a67b541f3e720790f85c8b6f707362951'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20430101-20431231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20430101-20431231.nc' 'SHA256' '8b028e91e04e0b83bcd3e1d56ad6f068f81604bdee20d225fab9d2254296e2b9'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20440101-20441231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20440101-20441231.nc' 'SHA256' '6e38cbc77fbe14915604b7c1f9b55438585af5d9d4b554f34a457f8b3be897b3'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20450101-20451231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20450101-20451231.nc' 'SHA256' 'dc937f25895af5ff11be45a1d565adfec7f729d84993e56af359421854955796'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20460101-20461231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20460101-20461231.nc' 'SHA256' 'c704759abd0f92a55e0b7f003a3be2e84249a979667ad71f66dbd76098c057d0'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20470101-20471231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20470101-20471231.nc' 'SHA256' 'e3c4f1b3cd6348a1667ac14e1cd4dca9048671702b275abf9319f9285780fe8f'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20480101-20481231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20480101-20481231.nc' 'SHA256' '81417a4a8a526c336d922e2e4694a53e96968e943d1fa6cd00ca61821f50dd57'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20490101-20491231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20490101-20491231.nc' 'SHA256' 'fdf92e22a4e10a83e976d25c8ada675838dd87455de54e5836638a5c0ac8e3f5'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20500101-20501231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20500101-20501231.nc' 'SHA256' '87c414325814e2395fcb6543d66cf32419887446fa7292b16b21e77183e42741'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20510101-20511231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20510101-20511231.nc' 'SHA256' 'c1194aab2178126bcd030e469e061c8d2b8f5c99b5d72a478af93feee9206403'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20520101-20521231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20520101-20521231.nc' 'SHA256' '9348075bc7c0c6fbfda6de21ff910f45baed820fb8a511ad9550aa7291215b47'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20530101-20531231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20530101-20531231.nc' 'SHA256' '6297dc33dd34e8856e62e065af89c49ab31a21743d48fef1efead1482bb08242'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20540101-20541231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20540101-20541231.nc' 'SHA256' 'aada734294d8d3a7e789ca28881577e0683dcbf830749f1f2593210e1ba69310'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20550101-20551231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20550101-20551231.nc' 'SHA256' '532ddef2856dfc85c90b31bd3241110af70ec225cce6485ca0cdb05b23706f68'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20560101-20561231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20560101-20561231.nc' 'SHA256' '666ddfd0b40ee6b5018dd853baaedf2d6f63577a82aaf452f317748b9a132d84'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20570101-20571231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20570101-20571231.nc' 'SHA256' 'd6faf177987a437144d7dca4dafe8da301a5e892463eda7afd8a287cb845f54d'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20580101-20581231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20580101-20581231.nc' 'SHA256' '3bd7fb4910020b1abe5873db00a2818028e1a18a244174e53fc536758b6e9e3b'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20590101-20591231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20590101-20591231.nc' 'SHA256' '0d2dcb3bb0a10ed7c8bbbee40574b147d2b221d9a855a1f54c84dfce6bd680a5'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20600101-20601231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20600101-20601231.nc' 'SHA256' 'e635ab60f471a98f5e205dafe9b3711b4a7056770226bd95b273630ac96a2698'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20610101-20611231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20610101-20611231.nc' 'SHA256' '8df52a958da4564a71a12e99c8e0149b936e7f8a568890af20c4394324ddc6f1'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20620101-20621231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20620101-20621231.nc' 'SHA256' '20d4c228662308659021ce77776175be45518e762500f61bedc410a6fd89442a'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20630101-20631231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20630101-20631231.nc' 'SHA256' 'f7005c0ddbe36ba6595cb9bc6adf2c9afcd7efd8f248a61040244eb7e087ffbd'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20640101-20641231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20640101-20641231.nc' 'SHA256' 'd65ee784ef3277b75bc77325487c1d73ac9d1724ef814b9c02c16b9f5915fe9a'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20650101-20651231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20650101-20651231.nc' 'SHA256' '6c96837018e8e825670bbc1be466f4137fdceb053c21d03b0368cd63a9eb0513'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20660101-20661231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20660101-20661231.nc' 'SHA256' '1607e22f4c00371e96240af292909eeb7024603e84a63bd6721e8a659ca55398'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20670101-20671231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20670101-20671231.nc' 'SHA256' '31505c3655ab4823b260f56efc1f595246eef34313dfc1a1e83471c2f52437e2'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20680101-20681231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20680101-20681231.nc' 'SHA256' '6fd1a0654439f302ba70c6f1e216930b36343a7360bc03a0609b4f80edcbf9bf'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20690101-20691231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20690101-20691231.nc' 'SHA256' '8fc8deee826344ffb60d44c9b8141cd12b3e567c64eeacdd50fa47c03b8b703e'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20700101-20701231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20700101-20701231.nc' 'SHA256' '56739b2f526a3bd5e2005d0eabc9bbc64ad1f133fceb78631590c7e011d27aa6'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20710101-20711231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20710101-20711231.nc' 'SHA256' 'f8bc306f89dfc13efe755b40d2bc9659e252350b02a773f87213ba36c07e013d'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20720101-20721231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20720101-20721231.nc' 'SHA256' '56df6efec32d4e486365eec791ded8b752fd9224c6573179474dc57e6f3f3b69'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20730101-20731231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20730101-20731231.nc' 'SHA256' '34875eab89569105de058c6a1e2052a207baac128f6b23189e8cb87c84caa107'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20740101-20741231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20740101-20741231.nc' 'SHA256' '04e10a13e65003703975a2b6b0f74c2394a484919d633abac3618470c7676ca3'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20750101-20751231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20750101-20751231.nc' 'SHA256' 'f7a1ede53e6e22a8350a283ad89b43dca45c248dea7da466ecc30106ff00b435'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20760101-20761231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20760101-20761231.nc' 'SHA256' 'c566d0a268a119dc60f0365a869b7cb5adf695fb73d6b01a42172fbb139d8781'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20770101-20771231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20770101-20771231.nc' 'SHA256' '6756354e74adc562e8bb385e52248f667e03d68ca4bc7be8bfbafa160382acf0'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20780101-20781231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20780101-20781231.nc' 'SHA256' 'a38b44874775318cc79dceb5cc8a423cb1c632c1222db5a0ea6237a9aa368aa9'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20790101-20791231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20790101-20791231.nc' 'SHA256' '273c6cf5606745352872a722e3d612eae98e8808517aee158c34e632bf74a33e'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20800101-20801231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20800101-20801231.nc' 'SHA256' 'f01d79315b2d1c60a3553b2a910a0de908870c4b632d8d076e86e1dca055c678'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20810101-20811231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20810101-20811231.nc' 'SHA256' '067a12565427d5690d8e141621ff7c1e7d29141da27b740a87c42328a331806e'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20820101-20821231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20820101-20821231.nc' 'SHA256' '302f2d5a024cb654454bfa396dcb7433b99cfae12164d9ed0d460ef9709a304a'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20830101-20831231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20830101-20831231.nc' 'SHA256' 'a8c9b76f7e0b9a04fbaa2d88e986cb63ba625618cb0e5d079524be5d150d6093'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20840101-20841231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20840101-20841231.nc' 'SHA256' 'cc8686fc4aac22a8effd3c1e653db40267709cd37ce4deb91a16dc03b41c4f4c'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20850101-20851231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20850101-20851231.nc' 'SHA256' 'ed8a854d67715d8b88c93c9f3aeb4597ef84d28e46f71f40a9b44cd0ecf6fd95'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20860101-20861231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20860101-20861231.nc' 'SHA256' 'c28f8851b27bd862799511fe0aa5d229d3838ee3333e002ff54b6181741dc039'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20870101-20871231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20870101-20871231.nc' 'SHA256' '725575dbea81f8431af9e6da3ee445a0fcda4c53e01a25d985f56a77581e8578'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20880101-20881231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20880101-20881231.nc' 'SHA256' '8e965b6ccefd456a1bfab8afe763e7d7e4f740b574ec1e894bf84428c0d33cba'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20890101-20891231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20890101-20891231.nc' 'SHA256' '55dd108a84ea3bfeba1452bce096ab5e21fbf56dafd5dc4a7f7062d9d586d797'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20900101-20901231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20900101-20901231.nc' 'SHA256' 'd962a6d4b7f63f0a0e810ebd579ac6cc0f70c5b968cf22785b0e5eb3f27200f1'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20910101-20911231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20910101-20911231.nc' 'SHA256' '9f101c325de5206e2a107d445c04f493195427c449484ce2e00b258a000493f5'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20920101-20921231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20920101-20921231.nc' 'SHA256' '9029394c72be94a00f79270a66f82dd7c39a4834982a2a2726ba012f58cca424'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20930101-20931231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20930101-20931231.nc' 'SHA256' '32f5454a26f945a99cff580e464a45287efd5f72a27f5270dfbfe5be898a5ba7'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20940101-20941231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20940101-20941231.nc' 'SHA256' 'd6667cab0c6e10f81876894a218627fa799d2bf77985485f42392b4d021ef795'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20950101-20951231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20950101-20951231.nc' 'SHA256' 'c4cf26a1c47fcfb5ca07bea6758cbae4a90244c91c620bb9ccd462bf83c383e2'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20960101-20961231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20960101-20961231.nc' 'SHA256' '81ee3dd2e0466dc86c311f7b5baf6457c4683edc8698348c9c37b727b2ff2b99'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20970101-20971231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20970101-20971231.nc' 'SHA256' '8ee4d0bb7faffc15694369ef5de51faaffbcef132c588502ace73decb80adafc'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20980101-20981231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20980101-20981231.nc' 'SHA256' 'fa1daa190378ffd645b37acf5fd004aeadeb30b9781151c1eb7d06b1eab4c35c'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_20990101-20991231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_20990101-20991231.nc' 'SHA256' '1278f644bfe4746389aa79a066957b1b19d1fb11de1dd53ac3e79851ca534f65'
'hur_day_MIROC6_ssp585_r3i1p1f1_gn_21000101-21001231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/hur/gn/v20191016/hur_day_MIROC6_ssp585_r3i1p1f1_gn_21000101-21001231.nc' 'SHA256' 'adaed6ff9a0367e428d99ddd125fbe3f2e4dee1dbc11273f5a05d120da00b853'
'pr_day_MIROC6_ssp585_r3i1p1f1_gn_20150101-20241231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/pr/gn/v20191016/pr_day_MIROC6_ssp585_r3i1p1f1_gn_20150101-20241231.nc' 'SHA256' 'bc97f29f22a61f15992397d14057ecf823f1e3eb1985aec2d3b02b1c5f5bf2be'
'pr_day_MIROC6_ssp585_r3i1p1f1_gn_20250101-20341231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/pr/gn/v20191016/pr_day_MIROC6_ssp585_r3i1p1f1_gn_20250101-20341231.nc' 'SHA256' 'a713306b5acaf9075fab547aff9acc86e2303c594ae0c9cf50697bcde3db2a16'
'pr_day_MIROC6_ssp585_r3i1p1f1_gn_20350101-20441231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/pr/gn/v20191016/pr_day_MIROC6_ssp585_r3i1p1f1_gn_20350101-20441231.nc' 'SHA256' '8b89fa914d82c3e44797a968eb5abf3b08f88a90573660d0259a032f1917a2de'
'pr_day_MIROC6_ssp585_r3i1p1f1_gn_20450101-20541231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/pr/gn/v20191016/pr_day_MIROC6_ssp585_r3i1p1f1_gn_20450101-20541231.nc' 'SHA256' '1d17ef7dd66a6ac6864388a45ba3185c2a1194079a5dad513c222e7d917f4494'
'pr_day_MIROC6_ssp585_r3i1p1f1_gn_20550101-20641231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/pr/gn/v20191016/pr_day_MIROC6_ssp585_r3i1p1f1_gn_20550101-20641231.nc' 'SHA256' '8b4107ae974227285ddda6af153935ef655612ef977c03a755a5eb6f5c186d0e'
'pr_day_MIROC6_ssp585_r3i1p1f1_gn_20650101-20741231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/pr/gn/v20191016/pr_day_MIROC6_ssp585_r3i1p1f1_gn_20650101-20741231.nc' 'SHA256' 'eaae0e28c2a3f09d41c82266b7afdbca8bc86a86783e57c90e5a617baec5dfbe'
'pr_day_MIROC6_ssp585_r3i1p1f1_gn_20750101-20841231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/pr/gn/v20191016/pr_day_MIROC6_ssp585_r3i1p1f1_gn_20750101-20841231.nc' 'SHA256' '4b9eab75052436402ca0375923fa2d6581375960c456245d36de0f0792621e18'
'pr_day_MIROC6_ssp585_r3i1p1f1_gn_20850101-20941231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/pr/gn/v20191016/pr_day_MIROC6_ssp585_r3i1p1f1_gn_20850101-20941231.nc' 'SHA256' '154b8e0bbc179e9964a5ebd597b54fd8c2be2aa830489926804da7c830eb2932'
'pr_day_MIROC6_ssp585_r3i1p1f1_gn_20950101-21001231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/pr/gn/v20191016/pr_day_MIROC6_ssp585_r3i1p1f1_gn_20950101-21001231.nc' 'SHA256' 'b377bbb9581ca5c09a358fd1c49ea6ead5648f951e7b5997b0eda9cd2cb48bd7'
'rsds_day_MIROC6_ssp585_r3i1p1f1_gn_20150101-20241231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/rsds/gn/v20191016/rsds_day_MIROC6_ssp585_r3i1p1f1_gn_20150101-20241231.nc' 'SHA256' '3a8a96cf572113efa66bda1a74143b119fc51735a13d99267181e5617a5a1875'
'rsds_day_MIROC6_ssp585_r3i1p1f1_gn_20250101-20341231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/rsds/gn/v20191016/rsds_day_MIROC6_ssp585_r3i1p1f1_gn_20250101-20341231.nc' 'SHA256' '37c03ddea66fdc0836b347211cb3f21b4ee8d484bd46c5c79eb6924797d0ca90'
'rsds_day_MIROC6_ssp585_r3i1p1f1_gn_20350101-20441231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/rsds/gn/v20191016/rsds_day_MIROC6_ssp585_r3i1p1f1_gn_20350101-20441231.nc' 'SHA256' '23930a35f6e94790fa97775053709c8a9777c4988ca86084c3d0d9dd1d447fbf'
'rsds_day_MIROC6_ssp585_r3i1p1f1_gn_20450101-20541231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/rsds/gn/v20191016/rsds_day_MIROC6_ssp585_r3i1p1f1_gn_20450101-20541231.nc' 'SHA256' '697e1d0056ee3c020f21c7b8b23b7c15786d6dbc420820af40911f085c112881'
'rsds_day_MIROC6_ssp585_r3i1p1f1_gn_20550101-20641231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/rsds/gn/v20191016/rsds_day_MIROC6_ssp585_r3i1p1f1_gn_20550101-20641231.nc' 'SHA256' '73bf8e1fd04e6cff6e02951ad0c2d2bc9d947ebff7aa14e52b9f7ef538f4c46e'
'rsds_day_MIROC6_ssp585_r3i1p1f1_gn_20650101-20741231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/rsds/gn/v20191016/rsds_day_MIROC6_ssp585_r3i1p1f1_gn_20650101-20741231.nc' 'SHA256' '7f982f480be74ac5a57f26fc7c632def4e63de10fbcaa83019353079b9b14f03'
'rsds_day_MIROC6_ssp585_r3i1p1f1_gn_20750101-20841231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/rsds/gn/v20191016/rsds_day_MIROC6_ssp585_r3i1p1f1_gn_20750101-20841231.nc' 'SHA256' 'dfb2914050b0ff5136621d4361a552ead139675ae21228187812ad10f5163f6b'
'rsds_day_MIROC6_ssp585_r3i1p1f1_gn_20850101-20941231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/rsds/gn/v20191016/rsds_day_MIROC6_ssp585_r3i1p1f1_gn_20850101-20941231.nc' 'SHA256' '0b2eb67b9448e23c39bb0d9b78c1e1f4c9d034438c42175b9c1074d1a2e3ab3d'
'rsds_day_MIROC6_ssp585_r3i1p1f1_gn_20950101-21001231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/rsds/gn/v20191016/rsds_day_MIROC6_ssp585_r3i1p1f1_gn_20950101-21001231.nc' 'SHA256' '5ac6b20201d92655d0e5d04055c38f57e5229a2aad9e55b73eb6c7cb4942fcc6'
'tas_day_MIROC6_ssp585_r3i1p1f1_gn_20150101-20241231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/tas/gn/v20191016/tas_day_MIROC6_ssp585_r3i1p1f1_gn_20150101-20241231.nc' 'SHA256' '0ea7bc5ef1054637304bfa1c8d13bde025b41e0335b43c01f9964cc20c79f77d'
'tas_day_MIROC6_ssp585_r3i1p1f1_gn_20250101-20341231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/tas/gn/v20191016/tas_day_MIROC6_ssp585_r3i1p1f1_gn_20250101-20341231.nc' 'SHA256' 'a7a68d9d173530e03a92d8668764c774d76c480b3c73a7d0c4b889ecafe68f08'
'tas_day_MIROC6_ssp585_r3i1p1f1_gn_20350101-20441231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/tas/gn/v20191016/tas_day_MIROC6_ssp585_r3i1p1f1_gn_20350101-20441231.nc' 'SHA256' '3b1b8232f43fcc6074257e8e7ef07a2e29f84efa2bc645a08315d2e47088057f'
'tas_day_MIROC6_ssp585_r3i1p1f1_gn_20450101-20541231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/tas/gn/v20191016/tas_day_MIROC6_ssp585_r3i1p1f1_gn_20450101-20541231.nc' 'SHA256' '347d0210fcd8787697d69b5dff76dfbb05e67d9e57510763418b7a2b676a9796'
'tas_day_MIROC6_ssp585_r3i1p1f1_gn_20550101-20641231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/tas/gn/v20191016/tas_day_MIROC6_ssp585_r3i1p1f1_gn_20550101-20641231.nc' 'SHA256' '07dc8e2036ff53714933dea38780c70b3931332d9f312f46c2fbf3a70c2bfe0f'
'tas_day_MIROC6_ssp585_r3i1p1f1_gn_20650101-20741231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/tas/gn/v20191016/tas_day_MIROC6_ssp585_r3i1p1f1_gn_20650101-20741231.nc' 'SHA256' 'df666406989952695a6556e72a7746afa25a3f386fbf79e1053079fb7d6a113b'
'tas_day_MIROC6_ssp585_r3i1p1f1_gn_20750101-20841231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/tas/gn/v20191016/tas_day_MIROC6_ssp585_r3i1p1f1_gn_20750101-20841231.nc' 'SHA256' '87fd66b1bed87f3a72616c30e4b9c20f4926431c4bba3fb2a5c617953e26e451'
'tas_day_MIROC6_ssp585_r3i1p1f1_gn_20850101-20941231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/tas/gn/v20191016/tas_day_MIROC6_ssp585_r3i1p1f1_gn_20850101-20941231.nc' 'SHA256' '85ad425b8ba7b8b1ab9ba4a136ab8eeeb19a272f47cfc3cd888f690fa915714a'
'tas_day_MIROC6_ssp585_r3i1p1f1_gn_20950101-21001231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/tas/gn/v20191016/tas_day_MIROC6_ssp585_r3i1p1f1_gn_20950101-21001231.nc' 'SHA256' '725b91eae4003dd7c6a8cac7a17b9950f051ed26df24b95933e2d1a2ef7ad489'
'tasmin_day_MIROC6_ssp585_r3i1p1f1_gn_20150101-20241231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/tasmin/gn/v20191016/tasmin_day_MIROC6_ssp585_r3i1p1f1_gn_20150101-20241231.nc' 'SHA256' '5d50215ee0e45ad2cd73eee9d6249559e7b0166a30de5b9903974312b281546c'
'tasmin_day_MIROC6_ssp585_r3i1p1f1_gn_20250101-20341231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/tasmin/gn/v20191016/tasmin_day_MIROC6_ssp585_r3i1p1f1_gn_20250101-20341231.nc' 'SHA256' 'baf8f2adc667a6352f22308cf24d1e9eb08e373044b88c0dff0ef0be800f70a3'
'tasmin_day_MIROC6_ssp585_r3i1p1f1_gn_20350101-20441231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/tasmin/gn/v20191016/tasmin_day_MIROC6_ssp585_r3i1p1f1_gn_20350101-20441231.nc' 'SHA256' '8762bcce0925b390254c0fdb58cca631932097546624deb0b34d455a3dbafc5e'
'tasmin_day_MIROC6_ssp585_r3i1p1f1_gn_20450101-20541231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/tasmin/gn/v20191016/tasmin_day_MIROC6_ssp585_r3i1p1f1_gn_20450101-20541231.nc' 'SHA256' 'e15a1df68b4fc4ead9998f35573e6f0e045c1d9ec2fcf1e98dbc63c2eed7feb6'
'tasmin_day_MIROC6_ssp585_r3i1p1f1_gn_20550101-20641231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/tasmin/gn/v20191016/tasmin_day_MIROC6_ssp585_r3i1p1f1_gn_20550101-20641231.nc' 'SHA256' '1afb3295c8710af8296eafcc8f7ecd49542422c77258c5806ddb4f48e239b2e0'
'tasmin_day_MIROC6_ssp585_r3i1p1f1_gn_20650101-20741231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/tasmin/gn/v20191016/tasmin_day_MIROC6_ssp585_r3i1p1f1_gn_20650101-20741231.nc' 'SHA256' '1dde4ed4193bfed72915e24fcfaf64f7e56d2d3dd8f0e84bc33c5e6d148ff00b'
'tasmin_day_MIROC6_ssp585_r3i1p1f1_gn_20750101-20841231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/tasmin/gn/v20191016/tasmin_day_MIROC6_ssp585_r3i1p1f1_gn_20750101-20841231.nc' 'SHA256' 'd9adc90fec3588aec6e24607b1351b261bfc336aa9247187e9c2d5d6fe3fb559'
'tasmin_day_MIROC6_ssp585_r3i1p1f1_gn_20850101-20941231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/tasmin/gn/v20191016/tasmin_day_MIROC6_ssp585_r3i1p1f1_gn_20850101-20941231.nc' 'SHA256' 'ce70776880834375117c5091356940ded8cc00e8cdb073d86ab3e265f5a7d7d1'
'tasmin_day_MIROC6_ssp585_r3i1p1f1_gn_20950101-21001231.nc' 'http://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/ScenarioMIP/MIROC/MIROC6/ssp585/r3i1p1f1/day/tasmin/gn/v20191016/tasmin_day_MIROC6_ssp585_r3i1p1f1_gn_20950101-21001231.nc' 'SHA256' '52e00135c9d9546341400b6f6530512f6909d728bc97881b94ab78137151aea6'
EOF--dataset.file.url.chksum_type.chksum
)"

# ESG_HOME should point to the directory containing ESG credentials.
#   Default is $HOME/.esg
ESG_HOME=${ESG_HOME:-$HOME/.esg}
[[ -d $ESG_HOME ]] || mkdir -p $ESG_HOME

ESG_CREDENTIALS=${X509_USER_PROXY:-$ESG_HOME/credentials.pem}
ESG_CERT_DIR=${X509_CERT_DIR:-$ESG_HOME/certificates}
MYPROXY_STATUS=$HOME/.MyProxyLogon
COOKIE_JAR=$ESG_HOME/cookies
MYPROXY_GETCERT=$ESG_HOME/getcert.jar
CERT_EXPIRATION_WARNING=$((60 * 60 * 8))   #Eight hour (in seconds)

WGET_TRUSTED_CERTIFICATES=$ESG_HOME/certificates


# Configure checking of server SSL certificates.
#   Disabling server certificate checking can resolve problems with myproxy
#   servers being out of sync with datanodes.
CHECK_SERVER_CERT=${CHECK_SERVER_CERT:-Yes}

check_os() {
    local os_name=$(uname | awk '{print $1}')
    case ${os_name} in
        Linux)
            ((debug)) && echo "Linux operating system detected"
            LINUX=1
            MACOSX=0
            ;;
        Darwin)
            ((debug)) && echo "Mac OS X operating system detected"
            LINUX=0
            MACOSX=1
            ;;
        *)
            echo "Unrecognized OS [${os_name}]"
            return 1
            ;;
    esac
    return 0
}

#taken from http://stackoverflow.com/a/4025065/1182464
vercomp () {
    if [[ $1 == $2 ]]
    then
        return 0
    fi
    local IFS=.
    local i ver1=($1) ver2=($2)
    # fill empty fields in ver1 with zeros
    for ((i=${#ver1[@]}; i<${#ver2[@]}; i++))
    do
        ver1[i]=0
    done
    for ((i=0; i<${#ver1[@]}; i++))
    do
        if [[ -z ${ver2[i]} ]]
        then
            # fill empty fields in ver2 with zeros
            ver2[i]=0
        fi
        if ((10#${ver1[i]} > 10#${ver2[i]}))
        then
            return 1
        fi
        if ((10#${ver1[i]} < 10#${ver2[i]}))
        then
            return 2
        fi
    done
    return 0
}

check_commands() {
    #check wget
    local MIN_WGET_VERSION=1.10
    vercomp $(wget -V | sed -n 's/^.* \([1-9]\.[0-9.]*\) .*$/\1/p') $MIN_WGET_VERSION
    case $? in
        2) #lower
            wget -V
            echo
            echo "** ERROR: wget version is too old. Use version $MIN_WGET_VERSION or greater. **" >&2
            exit 1
    esac
}

usage() {
    echo "Usage: $(basename $0) [flags] [openid] [username]"
    echo "Flags is one of:"
    sed -n '/^while getopts/,/^done/  s/^\([^)]*\)[^#]*#\(.*$\)/\1 \2/p' $0
    echo
    echo "This command stores the states of the downloads in .$0.status"
    echo "For more information check the website: http://esgf.org/wiki/ESGF_wget"
}

#defaults
debug=0
clean_work=1

#parse flags
while getopts ':c:pfF:o:w:isuUndvqhHI:T' OPT; do
    case $OPT in
        H) skip_security=1 && use_http_sec=1;; #       : Authenticate with OpenID (username,) and password, without the need for a certificate.
        T) force_TLSv1=1;;              #       : Forces wget to use TLSv1. 
        c) ESG_CREDENTIALS="$OPTARG";;  #<cert> : use this certificate for authentication.
        f) force=1;;                    #       : force certificate retrieval (defaults to only once per day); for certificate-less authentication (see -H option), this flag will force login and refresh cookies.
        F) input_file="$OPTARG";;       #<file> : read input from file instead of the embedded one (use - to read from stdin)
        o) openId="$OPTARG";;           #<openid>: Provide OpenID instead of interactively asking for it.
        I) username_supplied="$OPTARG";;    #<user_id> : Explicitly set user ID.  By default, the user ID is extracted from the last component of the OpenID URL.  Use this flag to override this behaviour.                   
        w) output="$OPTARG";;           #<file> : Write embedded files into a file and exit
        i) insecure=1;;                 #       : set insecure mode, i.e. don't check server certificate
        s) skip_security=1 && use_cookies_for_http_basic_auth_start=1;;            #       : completely skip security. It will only work if the accessed data is not secured at all. -- works only if the accessed data is unsecured or a certificate exists or cookies are saved (latter applies to -H option only).
        u) update=1;;                   #       : Issue the search again and see if something has changed.
        U) update_files=1;;             #       : Update files from server overwriting local ones (detect with -u)
        n) dry_run=1;;                  #       : Don't download any files, just report.
        p) clean_work=0;;               #       : preserve data that failed checksum
        d) verbose=1;debug=1;;          #       : display debug information
        v) verbose=1;;                  #       : be more verbose
        q) quiet=1;;                    #       : be less verbose
        h) usage && exit 0;;            #       : displays this help
        \?) echo "Unknown option '$OPTARG'" >&2 && usage && exit 1;;
        \:) echo "Missing parameter for flag '$OPTARG'" >&2 && usage && exit 1;;
    esac
done
shift $(($OPTIND - 1))

#setup input as desired by the user
if [[ "$input_file" ]]; then
    if [[ "$input_file" == '-' ]]; then
        download_files="$(cat)" #read from STDIN
        exec 0</dev/tty #reopen STDIN as cat closed it
    else
        download_files="$(cat $input_file)" #read from file
    fi
fi

#if -w (output) was selected write file and finish:
if [[ "$output" ]]; then
    #check the file
    if [[ -f "$output" ]]; then
        read -p "Overwrite existing file $output? (y/N) " answ
        case $answ in y|Y|yes|Yes);; *) echo "Aborting then..."; exit 0;; esac
    fi
    echo "$download_files">$output
    exit
fi


#assure we have everything we need
check_commands

if ((update)); then
    echo "Checking the server for changes..."
    new_wget="$(wget "$search_url" -qO -)"
    compare_cmd="grep -vE '^(# Generated by|# Search URL|search_url=)'"
    if diff -q <(eval $compare_cmd<<<"$new_wget") <(eval $compare_cmd $0) >/dev/null; then
        echo "No changes detected."
    else
        echo "Wget was changed. Dowloading. (old renamed to $0.old.#N)"
        counter=0
        while [[ -f $0.old.$counter ]]; do ((counter++)); done
        mv $0 $0.old.$counter
        echo "$new_wget" > $0
    fi
    exit 0      
fi


##############################################################################
check_java() {
    if ! type java >& /dev/null; then
        echo "Java could not be found." >&2
        return 1
    fi
    if java -version 2>&1|grep openjdk >/dev/null; then
        openjdk=1;
    else
        openjdk=0;
    fi
    jversion=($(jversion=$(java -version 2>&1 | awk '/version/ {gsub("\"","");print $3}'); echo ${jversion//./ }))
    mVer=${jversion[1]}
    if [ $openjdk -eq 1 ]; then
        mVer=${jversion[0]}
        if ((mVer<5)); then
            echo "Openjdk detected. Version 9+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    else
    
        if ((mVer<5)); then
            echo "Java version 1.5+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    fi
}

check_myproxy_logon() {
    if ! type myproxy-logon >& /dev/null; then
	echo "myproxy-logon could not be found." >&2
	return 1
    fi
    echo "myproxy-logon found" >&2
}

proxy_to_java() {
    local proxy_user proxy_pass proxy_server proxy_port
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$http_proxy)
    local JAVA_PROXY=
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyPort=$proxy_port"
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$https_proxy)
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyPort=$proxy_port"
    
    echo "$JAVA_PROXY"
}

# get certificates from github
get_certificates() {
    # don't if this was already done today
    [[ -z $force && "$(find $ESG_CERT_DIR -type d -mtime -1 2>/dev/null)" ]] && return 0
    echo -n "Retrieving Federation Certificates..." >&2

    if ! wget -O $ESG_HOME/esg-truststore.ts --no-check-certificate https://github.com/ESGF/esgf-dist/raw/master/installer/certs/esg-truststore.ts; then
        echo "Could not fetch esg-truststore";
        return 1
    fi
    
    if ! wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar -O - -q | tar x -C $ESG_HOME; then
        #certificates tarred into esg_trusted_certificates. (if it breaks, let the user know why
        wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar
        echo "Could't update certs!" >&2
        return 1
    else
        #if here everythng went fine. Replace old cert with this ones    
        [[ -d $ESG_CERT_DIR ]] && rm -r $ESG_CERT_DIR || mkdir -p $(dirname $ESG_CERT_DIR)
        mv $ESG_HOME/esg_trusted_certificates $ESG_CERT_DIR
        touch $ESG_CERT_DIR
        echo "done!" >&2
    fi

}

# Retrieve ESG credentials
unset pass
get_credentials() {
    if check_java
    then
	use_java=1
    else	
	use_java=0
	echo "No suitable java for obtaining certificate - checking for myproxy-logon instead" >&2
	check_myproxy_logon || exit 1
    fi
    #get all certificates
    get_certificates

    if [[ -z "$(find $MYPROXY_GETCERT -type f -mtime -1 2>/dev/null)" ]]; then
        echo -n "(Downloading $MYPROXY_GETCERT... "
        mkdir -p $(dirname $MYPROXY_GETCERT)
        if wget -q --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/getcert.jar -O $MYPROXY_GETCERT;then
            echo 'done)'
            touch $MYPROXY_GETCERT
        else
            echo 'failed)'
        fi
    fi

    #if the user already defined one, use it
    if [[ -z $openId ]]; then
        #try to parse the last valid value if any
        [[ -f "$MYPROXY_STATUS" ]] && openId=$(awk -F= '/^OpenID/ {gsub("\\\\", ""); print $2}' $MYPROXY_STATUS)
        if [[ -z $openId ]]; then
            #no OpenID, we need to ask the user
            echo -n "Please give your OpenID (Example: https://myserver/example/username) ? "
        else
            #Allow the user to change it if desired
            echo -n "Please give your OpenID (hit ENTER to accept default: $openId)? "
        fi
        read -e
        [[ "$REPLY" ]] && openId="$REPLY"
    else
        ((verbose)) && echo "Using user defined OpenID $openId (to change use -o <open_id>)"
    fi

    if grep -q ceda.ac.uk <<<$openId; then
        username=${openId##*/}
        echo -n "Please give your username if different [$username]: "
        read -e
        [[ "$REPLY" ]] && username="$REPLY"
    fi
    


    if [ $use_java -eq 1 ]
    then
        local args=
        #get password
	[[ ! "$pass" ]] && read -sp "MyProxy Password? " pass
        [[ "$openId" ]] && args=$args" --oid $openId"
        [[ "$pass" ]] && args=$args" -P $pass"
        [[ "$username" ]] && args=$args" -l $username"
        
        echo -n $'\nRetrieving Credentials...' >&2
        if ! java $(proxy_to_java) -jar $MYPROXY_GETCERT $args --ca-directory $ESG_CERT_DIR --output $ESG_CREDENTIALS ; then        
            echo "Certificate could not be retrieved"
            exit 1
        fi
        echo "done!" >&2
    else
        args=`openid_to_myproxy_args $openId $username` || exit 1
        if ! myproxy-logon $args -b -o $ESG_CREDENTIALS
	then
            echo "Certificate could not be retrieved"
	    exit 1
        fi
	cp $HOME/.globus/certificates/* $ESG_CERT_DIR/	
    fi
}

openid_to_myproxy_args() {
  python - <<EOF || exit 1
import sys
import re
import xml.etree.ElementTree as ET
import urllib2
openid = "$1"
username = "$2" or re.sub(".*/", "", openid)
e = ET.parse(urllib2.urlopen(openid))
servs = [el for el in e.getiterator() if el.tag.endswith("Service")]
for serv in servs:
    servinfo = dict([(re.sub(".*}", "", c.tag), c.text)
                     for c in serv.getchildren()])
    try:
        if servinfo["Type"].endswith("myproxy-service"):
            m = re.match("socket://(.*):(.*)", servinfo["URI"])
            if m:
                host = m.group(1)
                port = m.group(2)
                print "-s %s -p %s -l %s" % (host, port, username)
                break
    except KeyError:
        continue
else:
    sys.stderr.write("myproxy service could not be found\n")
    sys.exit(1)
EOF
}

# check the certificate validity
check_cert() {
    if [[ ! -f "$ESG_CERT" || $force ]]; then
        #not there, just get it
        get_credentials
    elif which openssl &>/dev/null; then
        #check openssl and certificate
        if ! openssl x509 -checkend $CERT_EXPIRATION_WARNING -noout -in $ESG_CERT 2>/dev/null; then
            echo "The certificate expires in less than $((CERT_EXPIRATION_WARNING / 60 / 60)) hour(s). Renewing..."
            get_credentials
        else
            #ok, certificate is fine
            return 0
        fi
    fi
}

#
# Detect ESG credentials
#
find_credentials() {

    #is X509_USER_PROXY or $HOME/.esg/credential.pem
    if [[ -f "$ESG_CREDENTIALS" ]]; then
        # file found, proceed.
        ESG_CERT="$ESG_CREDENTIALS"
        ESG_KEY="$ESG_CREDENTIALS"
    elif [[ -f "$X509_USER_CERT" && -f "$X509_USER_KEY" ]]; then
        # second try, use these certificates.
        ESG_CERT="$X509_USER_CERT"
        ESG_KEY="$X509_USER_KEY"
    else
        # If credentials are not present, just point to where they should go 
        echo "No ESG Credentials found in $ESG_CREDENTIALS" >&2
            ESG_CERT="$ESG_CREDENTIALS"
            ESG_KEY="$ESG_CREDENTIALS"
            #they will be retrieved later one
    fi


    #chek openssl and certificate
    if (which openssl &>/dev/null); then
        if ( openssl version | grep 'OpenSSL 1\.0' ); then
            echo '** WARNING: ESGF Host certificate checking might not be compatible with OpenSSL 1.0+'
        fi
        check_cert || { (($?==1)); exit 1; }
    fi
    
    if [[ $CHECK_SERVER_CERT == "Yes" ]]; then
        [[ -d "$ESG_CERT_DIR" ]] || { echo "CA certs not found. Aborting."; exit 1; }
        PKI_WGET_OPTS="--ca-directory=$ESG_CERT_DIR"
    fi

    #some wget version complain if there's no file present
    [[ -f $COOKIE_JAR ]] || touch $COOKIE_JAR

    PKI_WGET_OPTS="$PKI_WGET_OPTS --certificate=$ESG_CERT --private-key=$ESG_KEY --save-cookies=$COOKIE_JAR --load-cookies=$COOKIE_JAR --ca-certificate=$ESG_CERT"

}

check_chksum() {
    local file="$1"
    local chk_type=$2
    local chk_value=$3
    local local_chksum=Unknown

    case $chk_type in
        md5) local_chksum=$(md5sum_ $file | cut -f1 -d" ");;
        sha256) local_chksum=$(sha256sum_ $file|awk '{print $1}'|cut -d ' ' -f1);;
        *) echo "Can't verify checksum." && return 0;;
    esac

    #verify
    ((debug)) && echo "local:$local_chksum vs remote:$chk_value" >&2
    echo $local_chksum
}

#Our own md5sum function call that takes into account machines that don't have md5sum but do have md5 (i.e. mac os x)
md5sum_() {
    hash -r
    if type md5sum >& /dev/null; then
        echo $(md5sum $@)
    else
        echo $(md5 $@ | sed -n 's/MD5[ ]*\(.*\)[^=]*=[ ]*\(.*$\)/\2 \1/p')
    fi
}

#Our own sha256sum function call that takes into account machines that don't have sha256sum but do have sha2 (i.e. mac os x)
sha256sum_() {
    hash -r
    if type sha256sum >& /dev/null; then
        echo $(sha256sum $@)
    elif type shasum >& /dev/null; then
        echo $(shasum -a 256 $@)
    else
        echo $(sha2 -q -256 $@)
    fi
}

get_mod_time_() {
    if ((MACOSX)); then
        #on a mac modtime is stat -f %m <file>
        echo "$(stat -f %m $@)"
    else
        #on linux (cygwin) modtime is stat -c %Y <file>
        echo "$(stat -c %Y $@)"
    fi
    return 0;
}

remove_from_cache() {
    local entry="$1"
    local tmp_file="$(grep -ve "^$entry" "$CACHE_FILE")"
    echo "$tmp_file" > "$CACHE_FILE"
    unset cached
}

#Download data from node using cookies and not certificates.
download_http_sec()
{
  #The data to be downloaded.
  data=" $url"
  filename="$file"  

  #Wget args.
  if ((insecure)) 
  then
   wget_args=" --no-check-certificate --cookies=on  --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt " 
  else
   wget_args=" --ca-directory=$WGET_TRUSTED_CERTIFICATES --cookies=on --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt "  
  fi 

  if ((use_cookies_for_http_basic_auth_start)) || ((use_cookies_for_http_basic_auth)) 
  then
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
  fi
  
  if((force_TLSv1))
  then
   wget_args=" $wget_args"" --secure-protocol=TLSv1 "
  fi
  
  
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
    wget_args="$wget_args $ESGF_WGET_OPTS"
  fi  
  

  #use cookies for the next downloads
  use_cookies_for_http_basic_auth=1;
   
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "wget $wget_args $data\n"
  fi


  #Try to download the data. 
  command="wget $wget_args -O $filename $data"
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
      
  #Extract orp service from url ?
  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" == 1 )) && 
  if  echo "$http_resp" | grep -q "/esg-orp/"      
  then
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   orp_service=$(echo "$urls" | tr '\n' ' ' | cut -d' ' -f 2)


   #Use cookies for transaction with orp.
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
   
   #Download data using either http basic auth or http login form.
   if [[ "$openid_c" == */openid/  || "$openid_c" == */openid ]]
   then
    download_http_sec_open_id
   else
    download_http_sec_decide_service
   fi
  else  
   if    echo "$http_resp" | grep -q "401 Unauthorized"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || echo "$http_resp" | grep -q "Connection timed out."  \
      || echo "$http_resp" | grep -q "no-check-certificate"  \
      || (( $cmd_exit_status != 0 ))      
   then 
    echo "ERROR : http request to OpenID Relying Party service failed."
    failed=1
   fi
  fi
}


#Function that decides which implementaion of idp to use.
download_http_sec_decide_service()
{
  #find claimed id

  pos=$(echo "$openid_c" | egrep -o '/' | wc -l)
  username_c=$(echo "$openid_c"  | cut -d'/' -f "$(($pos + 1))")
  esgf_uri=$(echo "$openid_c" | egrep -o '/esgf-idp/openid/')

  host=$(echo "$openid_c"  | cut -d'/' -f 3)
  #test ceda first.

  if [[ -z "$esgf_uri" ]]
  then
   openid_c_tmp="https://""$host""/openid/"
  else
   openid_c_tmp="https://""$host""/esgf-idp/openid/" 
  fi

  command="wget "$openid_c_tmp" --no-check-certificate ${force_TLSv1:+--secure-protocol=TLSv1} -O-"
        
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
   command="$command $ESGF_WGET_OPTS"
  fi  
          
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "$command\n"
  fi
            

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
  

  if    echo "$http_resp" | grep -q "[application/xrds+xml]"  \
     && echo "$http_resp" | grep -q "200 OK"  \
     && (( cmd_exit_status == 0 ))       
  then
   openid_c=$openid_c_tmp
   download_http_sec_open_id
  else
   if [[ -z "$esgf_uri" ]]
   then
    echo "ERROR : HTTP request to OpenID Relying Party service failed."
    failed=1
   else
   download_http_sec_cl_id
   fi
  fi
}


download_http_sec_retry()
{
  echo -e "\nRetrying....\n"
  #Retry in case that last redirect did not work, this happens with older version of wget.
  command="wget $wget_args $data"
      
  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi   
   
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"

  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
   
  if    echo "$http_resp" | grep -q "401 Unauthorized"  \
     || echo "$http_resp" | grep -q "403: Forbidden"  \
     || echo "$http_resp" | grep -q "Connection timed out."  \
     || echo "$http_resp" | grep -q "no-check-certificate"  \
     || (( $cmd_exit_status != 0 ))      
  then 
   echo -e "\nERROR : Retry failed.\n"
   #rm "$filename"
   failed=1
  fi #if retry failed.
}

#Function for downloading data using the claimed id.
download_http_sec_cl_id()
{
  #Http request for sending openid to the orp service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\"  $wget_args -O- https://$orp_service/esg-orp/j_spring_openid_security_check.htm "

  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "wget $command\n"
  fi 
  
  
  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"

  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
    
  
  #Extract orp service from openid ?
  #Evaluate response.If redirected to idp service send the credentials.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( redirects == 2  )) && 
  if  echo "$http_resp" | grep -q "login.htm"  && (( cmd_exit_status == 0 ))   
  then 
  
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   idp_service=$(echo "$urls"  | tr '\n' ' ' | cut -d' ' -f 2) 
      
   command="wget --post-data  password=\"$password_c\" $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$idp_service/esgf-idp/idp/login.htm"
   

   #Debug message.
   if  ((debug))
   then
    echo -e "Executing:\n"
    echo -e "wget $command\n"
   fi 

   #Execution of command.
   http_resp=$(eval $command  2>&1)
   cmd_exit_status="$?"
      
   if ((debug))
   then
    echo -e "\nHTTP response:\n $http_resp\n"
   fi 
        
   #Evaluate response. 
   #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
   #(( "$redirects" != 5 )) \ 
   if    echo "$http_resp" | grep -q "text/html"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || (( cmd_exit_status != 0 ))        
   then 
    rm "$filename"
    download_http_sec_retry
   fi
 
  else
   echo "ERROR : HTTP request to OpenID Provider service failed."
   failed=1
  fi #if redirected to idp.  
}



download_http_sec_open_id()
{
  #Http request for sending openid to the orp web service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\" --header=\"esgf-idea-agent-type:basic_auth\" --http-user=\"$username_c\" --http-password=\"$password_c\"  $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$orp_service/esg-orp/j_spring_openid_security_check.htm "


  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi 

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 

  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" != 7 )) ||
  if   echo "$http_resp" | grep -q "text/html"  ||  (( $cmd_exit_status != 0 ))   
  then
   rm "$filename"
   download_http_sec_retry     
  fi #if error during http basic authentication. 
  
}


download() {
    wget="wget ${insecure:+--no-check-certificate} ${quiet:+-q} ${quiet:--v} -c ${force_TLSv1:+--secure-protocol=TLSv1} $PKI_WGET_OPTS"
    
    while read line
    do
        # read csv here document into proper variables
        eval $(awk -F "' '" '{$0=substr($0,2,length($0)-2); $3=tolower($3); print "file=\""$1"\";url=\""$2"\";chksum_type=\""$3"\";chksum=\""$4"\""}' <(echo $line) )

        #Process the file
        echo -n "$file ..."

        #get the cached entry if any.
        cached="$(grep -e "^$file" "$CACHE_FILE")"
        
        #if we have the cache entry but no file, clean it.
        if [[ ! -f $file && "$cached" ]]; then
            #the file was removed, clean the cache
            remove_from_cache "$file"
            unset cached
        fi
        
        #check it wasn't modified
        if [[ -n "$cached" && "$(get_mod_time_ $file)" == $(echo "$cached" | cut -d ' ' -f2) ]]; then
                    if [[ "$chksum" == "$(echo "$cached" | cut -d ' ' -f3)" ]]; then
                echo "Already downloaded and verified"
                continue
            elif ((update_files)); then
                #user want's to overwrite newer files
                rm $file
                remove_from_cache "$file"
                unset cached
            else
                #file on server is different from what we have. 
                echo "WARNING: The remote file was changed (probably a new version is available). Use -U to Update/overwrite"
                continue
            fi
        fi
        unset chksum_err_value chksum_err_count
        
        while : ; do
            # (if we had the file size, we could check before trying to complete)
            echo "Downloading"
            [[ ! -d "$(dirname "$file")" ]] && mkdir -p "$(dirname "$file")"
            if ((dry_run)); then
                #all important info was already displayed, if in dry_run mode just abort
                #No status will be stored
                break
            else
                if ((use_http_sec))
                then
                 download_http_sec
                 if ((failed))
                 then
                  break
                 fi
                else
                 $wget -O "$file" $url || { failed=1; break; }  
                fi                
            fi

            #check if file is there
            if [[ -f $file ]]; then
                ((debug)) && echo file found
                if [[ ! "$chksum" ]]; then
                    echo "Checksum not provided, can't verify file integrity"
                    break
                fi
                result_chksum=$(check_chksum "$file" $chksum_type $chksum)
                if [[ "$result_chksum" != "$chksum" ]]; then
                    echo "  $chksum_type failed!"
                    if ((clean_work)); then
                        if !((chksum_err_count)); then
                                chksum_err_value=$result_chksum
                                chksum_err_count=2
                            elif ((checksum_err_count--)); then
                                if [[ "$result_chksum" != "$chksum_err_value" ]]; then
                                    #this is a real transmission problem
                                    chksum_err_value=$result_chksum
                                    chksum_err_count=2
                                fi
                            else
                                #ok if here we keep getting the same "different" checksum
                                echo "The file returns always a different checksum!"
                                echo "Contact the data owner to verify what is happening."
                                echo
                                sleep 1
                                break
                            fi
                        
                            rm $file
                            #try again
                            echo -n "  re-trying..."
                            continue
                    else
                            echo "  don't use -p or remove manually."
                    fi
                else
                    echo "  $chksum_type ok. done!"
                    echo "$file" $(get_mod_time_ "$file") $chksum >> $CACHE_FILE
                fi
            fi
            #done!
            break
        done
        
        if ((failed)); then
            echo "download failed"
            # most common failure is certificate expiration, so check this
            #if we have the pasword we can retrigger download
            ((!skip_security)) && [[ "$pass" ]] && check_cert
            unset failed
        fi
        
done <<<"$download_files"

}

dedup_cache_() {
    local file=${1:-${CACHE_FILE}}
    ((debug)) && echo "dedup'ing cache ${file} ..."
    local tmp=$(LC_ALL='C' sort  -r -k1,2 $file | awk '!($1 in a) {a[$1];print $0}' | sort -k2,2)
    ((DEBUG)) && echo "$tmp"
    echo "$tmp" > $file
    ((debug)) && echo "(cache dedup'ed)"
}

http_basic_auth_func_info_message()
{
  echo  "********************************************************************************"
  echo  "*                                                                              *"
  echo  "* Note that new functionality to allow authentication without the need for     *"
  echo  "* certificates is available with this version of the wget script.  To enable,  *"
  echo  "* use the \"-H\" option and enter your OpenID and password when prompted:        *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -H [options...]                                     *"
  echo  "*                                                                              *"
  echo  "* For a full description of the available options use the help option:         *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -h                                                  *"
  echo  "*                                                                              *"
  echo  "********************************************************************************"
}

#
# MAIN
#

if ((!use_http_sec))
then 
 http_basic_auth_func_info_message
fi

echo "Running $(basename $0) version: $version"
((verbose)) && echo "we use other tools in here, don't try to user their proposed 'options' directly"
echo "Use $(basename $0) -h for help."$'\n'

((debug)) && cat<<EOF
** Debug info **
ESG_HOME=$ESG_HOME
ESG_CREDENTIALS=$ESG_CREDENTIALS
ESG_CERT_DIR=$ESG_CERT_DIR
** -- ** -- ** -- ** --

EOF


cat <<'EOF-MESSAGE'
Script created for 140 file(s)
(The count won't match if you manually edit this file!)



EOF-MESSAGE
sleep 1

check_os
((!skip_security)) && find_credentials

if ((use_http_sec))
then 
     
 if (( ! insecure))
 then 
  get_certificates
 fi

 #Cookies folder.
 COOKIES_FOLDER="$ESG_HOME/wget_cookies"
 
 if (( force ))
 then
  if [ -d $COOKIES_FOLDER ] 
  then
   rm -rf $COOKIES_FOLDER
  fi
 fi

 #Create cookies folder. 
 if [[ ! -d $COOKIES_FOLDER ]] 
 then
  mkdir $COOKIES_FOLDER
 fi
 
 if((! use_cookies_for_http_basic_auth_start))
 then

  #Read openid.
  if [[ ! -z "$openId" ]]
  then
   openid_c="$openId"
  elif ( (("$#" > 1)) || (("$#" == 1)) ) 
  then
   openid_c=$1
  else
   read -p    "Enter your openid : " openid_c
  fi
  
  
  #Read username.
  if [[ ! -z "$username_supplied" ]]
  then
   username_c="$username_supplied"
  elif (("$#" == 2))
  then
   username_c=$2
  elif [[ "$openid_c" == */openid/ || "$openid_c" == */openid ]]
  then
   read -p    "Enter username : " username_c
  fi
  
  #Read password.
  read -s -p "Enter password : " password_c
  echo -e "\n"

 fi #use cookies

fi #use_http_sec 


#do we have old results? Create the file if not
[ ! -f $CACHE_FILE ] && echo "#filename mtime checksum" > $CACHE_FILE && chmod 666 $CACHE_FILE

#clean the force parameter if here (at htis point we already have the certificate)
unset force

download

dedup_cache_


echo "done"
