#!/bin/bash
##############################################################################
# ESG Federation download script
#
# Template version: 1.2
# Generated by localhost - 2024/10/28 22:31:50
# Search URL: http://localhost:8080/esg-search/wget?dataset_id=CMIP6.CMIP.MIROC.MIROC-ES2L.historical.r9i1p1f2.day.tasmax.gn.v20200318|esgf-data1.llnl.gov
#
###############################################################################
# first be sure it's bash... anything out of bash or sh will break
# and the test will assure we are not using sh instead of bash
if [ $BASH ] && [ `basename $BASH` != bash ]; then
    echo "######## This is a bash script! ##############" 
    echo "Change the execution bit 'chmod u+x $0' or start with 'bash $0' instead of sh."
    echo "Trying to recover automatically..."
    sleep 1
    /bin/bash $0 $@
    exit $?
fi

version=1.3.2
CACHE_FILE=.$(basename $0).status
openId=
search_url='http://localhost:8080/esg-search/wget?dataset_id=CMIP6.CMIP.MIROC.MIROC-ES2L.historical.r9i1p1f2.day.tasmax.gn.v20200318|esgf-data1.llnl.gov'

#These are the embedded files to be downloaded
download_files="$(cat <<EOF--dataset.file.url.chksum_type.chksum
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18500101-18501231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18500101-18501231.nc' 'SHA256' 'd9cecb599c20ff1c10151898379c1c3426f2bdaa73fe62bed5a4601013be2a31'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18510101-18511231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18510101-18511231.nc' 'SHA256' 'b1738b309211acc3da53aa0bdccce0e8f370ca15ac05162c8edbd49bf28644d0'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18520101-18521231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18520101-18521231.nc' 'SHA256' 'e481aa5f3274263a914bb0b42913ea0008a61421c0457634992c7d59d354bf46'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18530101-18531231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18530101-18531231.nc' 'SHA256' 'da5aa6811ce87fc395afb3890242b29cb031b275922333b9bcac001a4c11f4f4'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18540101-18541231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18540101-18541231.nc' 'SHA256' 'b5d1c5bcbe98b8e12eb7d50e43547e06b552c913e0373ce821f22e60afe148ed'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18550101-18551231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18550101-18551231.nc' 'SHA256' 'e6d9908e116eb8ca5138e7a5e37488e9ddd5ceee5247b7ff89c64093a9fc7711'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18560101-18561231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18560101-18561231.nc' 'SHA256' '3e28ea70baf85baa627ea6cc98e645dfb3524ccec6fbc23b696f50de4e6abed0'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18570101-18571231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18570101-18571231.nc' 'SHA256' '000326f7e23f4fdf1d03e9fc6eb038316c6917ee6ea7f9f23e0d8ae816172dcd'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18580101-18581231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18580101-18581231.nc' 'SHA256' 'e28d7b5e8c5fb9dfbc9f86ded08e1099b3903b240a1de2fd597f2fb620f7675d'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18590101-18591231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18590101-18591231.nc' 'SHA256' 'b9b35f44e891f61629b49828ad476ded2dc90773f8d11b89e207c5750305c084'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18600101-18601231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18600101-18601231.nc' 'SHA256' '9268e8f9febdc5f580dc2e2f48b6cd5ced4adadec10de3a310ee245b08610992'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18610101-18611231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18610101-18611231.nc' 'SHA256' '694f77b5be52ce615102eaaee4793e696652560554f66e111ed9d5db2b0289d9'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18620101-18621231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18620101-18621231.nc' 'SHA256' '36f0867a6f9aecea0cd6c233c2a67c41e89e7efc8d652a063f2619e90d8de6af'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18630101-18631231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18630101-18631231.nc' 'SHA256' '22ac505fbc93f62314e75565891078f30ff7dfe7170318657b50118b1c93f827'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18640101-18641231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18640101-18641231.nc' 'SHA256' '4d2a331b4ff9a21490b41b2105f3ab5fe10e285b945a54732288b507af3489ee'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18650101-18651231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18650101-18651231.nc' 'SHA256' '513674ed2d0d95c4e4d603635204375bcd032b2f9ee1eb0a45a65df9d6e9b4f2'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18660101-18661231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18660101-18661231.nc' 'SHA256' '9e171d9e501176c277335591b1ffc9c3d5b7f390490a5a20c92cbd93ba0a680a'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18670101-18671231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18670101-18671231.nc' 'SHA256' '280eb45de8a77fd4dc14deb937535ca92f5780f8e38663a61805f21e560517bf'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18680101-18681231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18680101-18681231.nc' 'SHA256' '40166f7cc8787230c7a280294bb3f29e9801ec081fdba1ffae4eebaafb566138'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18690101-18691231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18690101-18691231.nc' 'SHA256' 'abab4661117b087a90db9704845d7f752dcf887ffdf81d945e69a8e054b23b4b'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18700101-18701231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18700101-18701231.nc' 'SHA256' '72f11108e60b92d8f774ebfd0d959d17a57c3893ac3441fe83ed77f527a8c8af'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18710101-18711231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18710101-18711231.nc' 'SHA256' '48254089c9ccd8c3f005289e5ae213db901e0776c439ed9362c3af5e6acf6238'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18720101-18721231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18720101-18721231.nc' 'SHA256' '32af5410eae20d39b6a541e8ce1c1555126daeba7f340e8e265a0670d9af7ada'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18730101-18731231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18730101-18731231.nc' 'SHA256' '1e4eebe1075edf044f56b76659febba0f347298665e79a2d4ec31df131ec3838'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18740101-18741231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18740101-18741231.nc' 'SHA256' 'f60bfa7da133fb32047742b91979c9a256aabdf1069100309ea611ca14f6cef1'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18750101-18751231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18750101-18751231.nc' 'SHA256' '85bb032597ae2385ab3b72cbc2c2c1537831e787f0021eeb8c767fbbb9c99578'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18760101-18761231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18760101-18761231.nc' 'SHA256' '6d6cec4a51c97da991ab9f0094ebb08665f91e299b48bed90d2f81295d39d969'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18770101-18771231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18770101-18771231.nc' 'SHA256' '6b7e08d4a29dd29cc53cec9fe18ed260093b87c575adc4d5bac7d42c874e49b6'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18780101-18781231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18780101-18781231.nc' 'SHA256' '5e38a023e2323f8d631ffe36b58ef7501d8c6671f872ba30bb610513b86abf82'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18790101-18791231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18790101-18791231.nc' 'SHA256' 'e04f1af4aa0db20e31f7d1930244be7cf6efa5195012accdb8ffd0d6f0085d64'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18800101-18801231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18800101-18801231.nc' 'SHA256' '0cbfc7205667084001831889f9d2345e3881b08c60416dae65cd3402c4615ab6'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18810101-18811231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18810101-18811231.nc' 'SHA256' 'c1702374163903d4c99023f00b38eaaeea04e2f29fb254a9102931b8f510f755'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18820101-18821231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18820101-18821231.nc' 'SHA256' '73f8c981f7067194eedfd257a9cadafddd1aa0f87d51a57957b69abdca059c0b'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18830101-18831231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18830101-18831231.nc' 'SHA256' '07533f7c564c000b0b46fc31711e487152800c379555afe7269846dc5fb0123a'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18840101-18841231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18840101-18841231.nc' 'SHA256' '64a93f70da4d0b0b8d43f27e6999bd3bac5d1aebca2cfe9f7cb4de011c845cc9'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18850101-18851231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18850101-18851231.nc' 'SHA256' '099a1dc470434bee912097864af1fea01ca6c2e51d072d4c4942e713851073f4'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18860101-18861231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18860101-18861231.nc' 'SHA256' '2632d7d3590ee47e835609686137967854166f6db47a7ffac1b58030a46d11ba'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18870101-18871231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18870101-18871231.nc' 'SHA256' '032dcf9df2f903c3abd354df4ce7c7262d8876feee6b4da44d4006eefee44856'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18880101-18881231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18880101-18881231.nc' 'SHA256' 'fbc2e2924aaffcfaac5d6ccd93f4d37e1e197cacb01067961129565554acced6'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18890101-18891231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18890101-18891231.nc' 'SHA256' '0b27505acce670d91e1e96d418f894405cc9beb2b28b37e5c616ee1d9d32e095'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18900101-18901231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18900101-18901231.nc' 'SHA256' '042cb9b289039bc2fc4cb3eec8fa8acc17a13b3a879de38693b87a74146e7292'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18910101-18911231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18910101-18911231.nc' 'SHA256' 'b2e0b08ebd2fe5556191a29f7c076daf9b3e9418c47b97824549528a8427aaab'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18920101-18921231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18920101-18921231.nc' 'SHA256' '465ea6f936b25f44ee6e706748cbaf9d15c90daad5ad5cc8a1974571715ee32c'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18930101-18931231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18930101-18931231.nc' 'SHA256' 'bd7e399f613f6e41c84444720ca8677a520d635e6f6dd63430fe065b7fdfaafb'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18940101-18941231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18940101-18941231.nc' 'SHA256' '075bc6a5c670305aedef2b80994c7674d8660652ee30c8fddb8a3ae09f10c421'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18950101-18951231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18950101-18951231.nc' 'SHA256' '6b30270cc1518573e4e3ae27dc453c9f229fc36f6754c656219ea68fe88aeeff'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18960101-18961231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18960101-18961231.nc' 'SHA256' '01fd24508b2efe65381d160a631744b9f1252d94793bf6e4d311ed2cd7ae331c'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18970101-18971231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18970101-18971231.nc' 'SHA256' 'bbe595b351adfa88c0c97616f514ff4ffedcb502f4a532b7dea9dbb76ca453e5'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18980101-18981231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18980101-18981231.nc' 'SHA256' '042b4fcc1942097f18de95ad0f61e293e60276ef9f3cdb809a4114a242a0b5da'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18990101-18991231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_18990101-18991231.nc' 'SHA256' '94ef1e2b2a898c013a8c46de6d8d126e04056cfaca39caa913fdbdd55385c2f0'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19000101-19001231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19000101-19001231.nc' 'SHA256' '94227d212353128e272160d51a9877d80947d49b10e68201bb3fc73a3fe938b5'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19010101-19011231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19010101-19011231.nc' 'SHA256' 'efc50c73dcde0ce28c4e9740b1ec644df88ba1504d55a29f3a222d9c58b77c99'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19020101-19021231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19020101-19021231.nc' 'SHA256' 'b57cfb65987a6929d8c2e88a5bc2bb5e4b9ef4699a87d4393653e1a7bc817d64'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19030101-19031231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19030101-19031231.nc' 'SHA256' '589034d65c648bb9f916cb6c911e5e45b3cbb66062d5890d6a6734e6a0a69f0d'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19040101-19041231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19040101-19041231.nc' 'SHA256' '0f545651f7ae7d72f07283656e3e4895fefe7f92eb72dfd9b8446276d8dabe54'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19050101-19051231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19050101-19051231.nc' 'SHA256' '48999813876eb0938b37aa73e701c08ae35a8a1463339935c38ba80fd1211a84'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19060101-19061231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19060101-19061231.nc' 'SHA256' '6b4d80b525d5384d97b5451879cf83a387d2475567f1cc3d2f756c992e933348'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19070101-19071231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19070101-19071231.nc' 'SHA256' '7ac00900b56bf55eba3c0bd8ae571958d536fc442863fa123c9f5d87ad23b118'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19080101-19081231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19080101-19081231.nc' 'SHA256' 'f18168147cb43ee953e2cae9b22d65f3281fd0777fdbb50bef204a601343532d'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19090101-19091231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19090101-19091231.nc' 'SHA256' 'db669f7457da6d8feda4fd776b3f9b3421553faebec46238184098fe3ea1d4af'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19100101-19101231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19100101-19101231.nc' 'SHA256' 'd664e41d1221370eb389f51da12f86e38a6d591670eb4d74a7af4783945220fb'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19110101-19111231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19110101-19111231.nc' 'SHA256' 'e02e26326219456bc9be163c7e2821cbfb0a694633cf1f50398d4e73386fcd9a'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19120101-19121231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19120101-19121231.nc' 'SHA256' '1f5232d24786324ba1c1fa87db202986fcbaaba8ce53b8d94b1a79afd9d5fbdc'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19130101-19131231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19130101-19131231.nc' 'SHA256' 'b33931333808756e5aede4d1332150026d5d4f29d0aebc222c080df4a2ddea19'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19140101-19141231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19140101-19141231.nc' 'SHA256' 'c78b21d9bfd87cf1fabf1acde4869437565c0e6970a38e2aca8ff5539a2f6386'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19150101-19151231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19150101-19151231.nc' 'SHA256' 'bd9d8a31551d8a5def04e109a209dfe62d960dc9dae9c809e4d15145a9f772a5'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19160101-19161231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19160101-19161231.nc' 'SHA256' 'bd9d28675b63bdb84608eda99bdf2efc5df4b86e4fe9742c9d098a3424ceac58'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19170101-19171231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19170101-19171231.nc' 'SHA256' 'c89174ab8aee8160b4bfcc1c052b67d365aa0b46363aa626d9b43e97c1a70c4b'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19180101-19181231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19180101-19181231.nc' 'SHA256' '524b877c8fa3931c78a96152f6dbfc04912eabd124db0093fd3b4649fac9490d'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19190101-19191231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19190101-19191231.nc' 'SHA256' '4e29cb9613248b82ebd642b73809d7b3ff912b48cd4de6b0abd912ff09543fd3'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19200101-19201231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19200101-19201231.nc' 'SHA256' 'adaf0419d7bfa99d78b97076975fb5dbef0e3c889e85e0f985a8f02e1a8190be'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19210101-19211231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19210101-19211231.nc' 'SHA256' '0ba5dd061b20eaf99a8aa9bb321ee883c5221d00ce990d32917490948bdca561'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19220101-19221231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19220101-19221231.nc' 'SHA256' '3a74fa571de4935291a13d8639686531f95c0c7d9cdd8041856ef6266cdea574'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19230101-19231231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19230101-19231231.nc' 'SHA256' '4efb021561fe8b64fc66c5223d4bf63357df7f3b1f8ef461b6fef79afacf038b'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19240101-19241231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19240101-19241231.nc' 'SHA256' 'd7a2b4e6bbd1889a80464c8c5c1047ea96be46671530a828e0b8b850f2ff6403'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19250101-19251231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19250101-19251231.nc' 'SHA256' 'cc3a0a0a80dc1e42acff412fc0dbd89d69e8faa35b5fb9aff4b7d31765a7d495'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19260101-19261231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19260101-19261231.nc' 'SHA256' '8e0d83c5f09a7a1f286a1090883cc39189ee6ae67442d1a598a227f6a773034b'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19270101-19271231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19270101-19271231.nc' 'SHA256' '0dbee1d8fc500e220bfce1b3fd53d3d7add26aa0b0aec2d161b975200ff77d4c'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19280101-19281231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19280101-19281231.nc' 'SHA256' 'a541936db8b21c20d3f33dbc8fee5034cf947cee8b2888bd01ca84d0d2d7ccf8'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19290101-19291231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19290101-19291231.nc' 'SHA256' '0c03406cb8ce59c809da7519c76b80c8853ebb9f4c56128c76b67e9ad10ed1de'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19300101-19301231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19300101-19301231.nc' 'SHA256' 'f8db391c6c7b98866e95d0f301e8fb7f34202fdd9f89bba77503d8381e1516e3'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19310101-19311231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19310101-19311231.nc' 'SHA256' '048df4d71d5ffc0017e99a23cf49ed52d7af8d9b64db42147a93734f157e3f82'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19320101-19321231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19320101-19321231.nc' 'SHA256' 'b5c9d9e386a75da59ea0b7a2c5fedc845a26a22002fa6a77cce2ad5b56f1c270'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19330101-19331231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19330101-19331231.nc' 'SHA256' '3017991ec4094d062da7c1d5c42ca9ada86029be44a95e26652459a07643e345'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19340101-19341231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19340101-19341231.nc' 'SHA256' '8bf05dc286020b3de1c8c56ab825c42de28a5d22636e831849d78b578a03bd4b'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19350101-19351231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19350101-19351231.nc' 'SHA256' '9476a7441d0efaa0e8e0bd73f4c7f4c55edcbe6515ab55e424ab43fd6a9905df'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19360101-19361231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19360101-19361231.nc' 'SHA256' '408fa813d714c5cad989707f26a674790622f2f96e3d79e92b51c7e373507cab'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19370101-19371231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19370101-19371231.nc' 'SHA256' '07ca03d2bf603452d0ae87b08df3f0a42faa2d0aa0c25448202e3b348c8a8247'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19380101-19381231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19380101-19381231.nc' 'SHA256' '546e8839a58f04e5f173b84fd19bfd0a927633ed9e305d5f73daa7aa0445d0f6'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19390101-19391231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19390101-19391231.nc' 'SHA256' '1e8353545122b512f1ec3e1904698ff256100845e32318e83af05912eb019619'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19400101-19401231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19400101-19401231.nc' 'SHA256' '6dac9aafe2e3e201e2061f1cea82853fe53d35f780cc0c05116ed6fefe1244ed'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19410101-19411231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19410101-19411231.nc' 'SHA256' '49e211ca68c2285256eef5c7731280f288a73bb6e5e595773b62b2f6bc354c9a'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19420101-19421231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19420101-19421231.nc' 'SHA256' '1eb4bfda223bed7a2572b5edc292c021f48841ca421094a5d5517591e31b055b'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19430101-19431231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19430101-19431231.nc' 'SHA256' 'c15cd94bec906608a066301d99b3bdfbd5472de86945dda8555ce7916a45d8da'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19440101-19441231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19440101-19441231.nc' 'SHA256' '3b81006ae035359d5da3444e831130f6b4cb9b98e5cfd3f803a4845f78802222'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19450101-19451231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19450101-19451231.nc' 'SHA256' '6838ea1061160c275465bc4a460c5dadf7faa80b81f9d79e65c3f83265c12e8c'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19460101-19461231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19460101-19461231.nc' 'SHA256' '4a9768338e7b8b0ca411502a33345587911d844aeb1230718bfbc47de78262f6'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19470101-19471231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19470101-19471231.nc' 'SHA256' 'b1360ec3623a960e1e9017b0c6ee379428669e64acfc2eb31487c5618190813e'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19480101-19481231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19480101-19481231.nc' 'SHA256' '05bee51ba28569982b82e31e1286e8b49ef4df9ab37a4bb97b914a210dd1a697'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19490101-19491231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19490101-19491231.nc' 'SHA256' 'd413ac8182703b99af20520bceb9c8ab437e43771835065489962f0a8f2bb2e4'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19500101-19501231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19500101-19501231.nc' 'SHA256' '5f7fdf11ab5a95b01f072112abea60e9524c59a9885a395fd66426edc78aca2d'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19510101-19511231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19510101-19511231.nc' 'SHA256' '7b0f365bb53b062e8c02b2a81a6de6ae88cb0c5cdcaeda2f54d7ee2042728d3d'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19520101-19521231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19520101-19521231.nc' 'SHA256' '009c1d69393f708be491a36e6eb0084ef4d24dc24e4b9d37632c5385b9f02fbc'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19530101-19531231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19530101-19531231.nc' 'SHA256' '3f7e2a5d5e3bcc656c09b9d4ac7dee3d397dbb9ac73a25185c1ea451731ba125'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19540101-19541231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19540101-19541231.nc' 'SHA256' '689577d2fcc5eac414932b3bd6ee8ece09c3014070687626e8ec8febc254527a'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19550101-19551231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19550101-19551231.nc' 'SHA256' '6650f866a54ba986737ae7190ee6c8d7fae473488b700d9367d6a867e1c78751'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19560101-19561231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19560101-19561231.nc' 'SHA256' '8bc5ae650128110708a228ad8ae0f98942c188ae16588a6e4d6f494820dac897'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19570101-19571231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19570101-19571231.nc' 'SHA256' '2ba78bfbd78611a16b9eee0cf9f9e632089da44fd1d5b0e4cbc2eca10a6117c4'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19580101-19581231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19580101-19581231.nc' 'SHA256' 'bf3f93c856fc95a29afdd2a98314a290aa935e95ec13f9ef545060abdd6ef800'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19590101-19591231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19590101-19591231.nc' 'SHA256' 'f890ef2e06fbedea91b74776e10f244195de4be32c249971e479069e0e1d12f5'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19600101-19601231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19600101-19601231.nc' 'SHA256' 'fa99d9992d79c7b5df1fd9ed6b09e8072ec0843d9a7ab9e77bc252f196df91c8'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19610101-19611231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19610101-19611231.nc' 'SHA256' 'd9785eb7bda3982a7543f0f858b6519f4dced4e86ffde57174e1c681a278e04b'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19620101-19621231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19620101-19621231.nc' 'SHA256' '049ac859ab2fff80990c45a425863796f2417477ed34125e3f72f113051a4a4e'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19630101-19631231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19630101-19631231.nc' 'SHA256' '39d5ea941a8073871a53c05ee1f95f81fd7055d7f195b44549c25670f4da1e93'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19640101-19641231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19640101-19641231.nc' 'SHA256' 'a28a14bea41ad825188996c176d15c0d61ce649cb603da17f744d1de8eb509ae'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19650101-19651231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19650101-19651231.nc' 'SHA256' '7fc06e3f112a7c246e1bb30d95758a5f2127aabc4a37bf4eb15370281416ddaa'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19660101-19661231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19660101-19661231.nc' 'SHA256' '88c51f81ea4b0cd65488320ecfea7725e10574d4129e1f14e1322a96db6afa1d'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19670101-19671231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19670101-19671231.nc' 'SHA256' 'be95be675220ae4706a1f329e700e4f0f0b617041e076b0e86a3e3a53d73cdc3'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19680101-19681231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19680101-19681231.nc' 'SHA256' 'b661312e1f03b7a55f76d69b59a0778ce5cd80f108220d8c620c3ada9be6d9b1'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19690101-19691231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19690101-19691231.nc' 'SHA256' '28654ff4a98871ed2e913bae9b1fdf094e502e80dec6c76a0d5d6b958a42e75c'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19700101-19701231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19700101-19701231.nc' 'SHA256' '29ebc7337ffcfcb18fc38511660c2edff77d2038a1cb1a1a6b4deb42904be9a4'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19710101-19711231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19710101-19711231.nc' 'SHA256' 'cd7308170dab381eb4087f333547b111487d95a216be5afb444b6ce7e45d07a3'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19720101-19721231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19720101-19721231.nc' 'SHA256' '838349ca7f4d73fa0ffae295d206875ae5927fa7256d2f8a6f84f8c3ab4367ec'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19730101-19731231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19730101-19731231.nc' 'SHA256' '02dfd64c370df975e8d4d9fbd7e11692738a00f207993c8cb2305af80d65c3b2'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19740101-19741231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19740101-19741231.nc' 'SHA256' '65cb45b0ae40ea54e1388cffba07f16726dab17c2b2b9a7349167cdefaeaff41'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19750101-19751231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19750101-19751231.nc' 'SHA256' 'e466da89ec47c48c17755d0ac4865b482b16cae045d59210bb1b8ee1e6b9d387'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19760101-19761231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19760101-19761231.nc' 'SHA256' 'd4f3b014c177755b1063763beb52acb559a9516d2db2d448878bb6b8927e1d09'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19770101-19771231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19770101-19771231.nc' 'SHA256' '442adcd19ac260ad7287897ea77e225b3696c02b96d3247cfc303b807c466165'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19780101-19781231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19780101-19781231.nc' 'SHA256' '6aca36a11925639660532642d68c927b9a227c62143e003fb213a2a7fcd3ae0e'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19790101-19791231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19790101-19791231.nc' 'SHA256' '624af1d57221956f930d087a1794fbb63a91ffc042b247dc97d727ef0af3d2e7'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19800101-19801231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19800101-19801231.nc' 'SHA256' 'bd8a218c33d2bbe9cba9bf6e69f2b1080496cc72e36044e192066cafe903f104'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19810101-19811231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19810101-19811231.nc' 'SHA256' '0779ac8b8aaf76078147a2b28924327886670d7133ba3b924463be1b35d396ac'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19820101-19821231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19820101-19821231.nc' 'SHA256' 'cbc2190a51578a13910d1349b1b7ff873f2fca868afe5d541cd2b7a7174432b9'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19830101-19831231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19830101-19831231.nc' 'SHA256' '23b7025669bed18e40e0da0cd5bb2f29fc5cb3ed151eb0fb4048880ecdb09c90'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19840101-19841231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19840101-19841231.nc' 'SHA256' '5876d633af4f6a6fecaf6561e38ee4d7adf781511004fc70266df6a89731e293'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19850101-19851231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19850101-19851231.nc' 'SHA256' 'bb03f6cff893f91456abdf2f6294bc3ed9c3c2472f70a2e8fe996e5fc3fa2c72'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19860101-19861231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19860101-19861231.nc' 'SHA256' '9b50ff61cb27e0dd00b9590d7c5fedb434fa2309292b3e2477dd2bf2973cc79c'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19870101-19871231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19870101-19871231.nc' 'SHA256' '21d8c5d88ec61b19ee133bc5336d9a57312bc137b91eb152f2c39f42d8557870'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19880101-19881231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19880101-19881231.nc' 'SHA256' '2b1a06ca9a3377cbe9d20c1c8130ae8e372da584156511caa8acab81d57385aa'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19890101-19891231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19890101-19891231.nc' 'SHA256' '2746ca611ca774d36dd56ab1c594385f3a7a990242a7f7d932845b9111f946c2'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19900101-19901231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19900101-19901231.nc' 'SHA256' 'da0f2d5a413df79db422fcfa96a51361c3161e203f88d84985b55f6c0c3a79ec'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19910101-19911231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19910101-19911231.nc' 'SHA256' '959017ede886dab43cf2ccd063a7479586e82dc7aa92086301945b994834341e'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19920101-19921231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19920101-19921231.nc' 'SHA256' 'f83f18ccff7f6a63ef396c597455bb5b3024e06aa002265b4d28dfcdbfe939b2'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19930101-19931231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19930101-19931231.nc' 'SHA256' 'c473c931a0521649d22d19a0b67da42b7caa628c2a1713ccacb8c7fccfffaa67'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19940101-19941231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19940101-19941231.nc' 'SHA256' 'cf23b992eefddd81730cb3fdcf42a0500dd737a62b5c10386fcd4f74eafd4b05'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19950101-19951231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19950101-19951231.nc' 'SHA256' 'b112405a999b6c445e03d50edf604b8d649b0c5774ec003284de133494778140'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19960101-19961231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19960101-19961231.nc' 'SHA256' '8e37c9a2ce54a905e2b8c9f4627b939ed73774d57eb68b748ed1a4e89b3196ec'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19970101-19971231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19970101-19971231.nc' 'SHA256' 'c2a7835db851d86325c4b17fdf1446656c18d7865ea8f3fe27533f7aadb45e0f'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19980101-19981231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19980101-19981231.nc' 'SHA256' '5aa6a37f66d24281a4c53a3946dd44e159699062a850145d3b5fac26545aa560'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19990101-19991231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_19990101-19991231.nc' 'SHA256' 'dfebfe29df3d06b9ff296e6f0372ed148113a1ddb453284c08696112c81e28a7'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_20000101-20001231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_20000101-20001231.nc' 'SHA256' 'd2aa74eb79b5c4b4a51e281f3d0eeb46537a4ced2776d53e4e49fe951c3bee3e'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_20010101-20011231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_20010101-20011231.nc' 'SHA256' '0f3a0c6c9854645e4e6db75bbabccc5b13247b7b04447238eaf7b434fef7fd75'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_20020101-20021231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_20020101-20021231.nc' 'SHA256' '332bf8749b6930fade86058f357518d07e00350e04209866f8070071ce612b17'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_20030101-20031231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_20030101-20031231.nc' 'SHA256' '66695a7e209776d8927760136cdc9cec55e0a04aa95bfc0c5c3da8beeee5fc1a'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_20040101-20041231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_20040101-20041231.nc' 'SHA256' '34a681042d30d083121f7ac718ef17cb250b7b8110e7eff81f5ffcecff8cbad2'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_20050101-20051231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_20050101-20051231.nc' 'SHA256' '7c9866e5ae071e9270e99dea80197435d413b498353e1a113347e7139a813331'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_20060101-20061231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_20060101-20061231.nc' 'SHA256' 'f0739110b25c93d55bad84fb0895b99999bd17ec1b909c70885ab6d65ceb26fa'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_20070101-20071231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_20070101-20071231.nc' 'SHA256' 'a49cec2682357c68e992aea528e1ccb0b89e92d8b6239d18c132973b34ffc815'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_20080101-20081231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_20080101-20081231.nc' 'SHA256' '744cde41cd7363ab0fe8ba6a825e5ca6db8c647655e35af77c9e17608aa774e7'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_20090101-20091231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_20090101-20091231.nc' 'SHA256' '52fda5c5d67491fd5de563fc41f72d9393c1e46b2bae95aa8643ddaeddbb248d'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_20100101-20101231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_20100101-20101231.nc' 'SHA256' '3e6fcbee34feb4695dfc35d67ca1bf08a9119af7216b1bce9e9599e609f02d0d'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_20110101-20111231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_20110101-20111231.nc' 'SHA256' 'f6a0d8f8e770c4bc84757babccdaa7c88df673c41ee29c640fd3f4dfc32ada91'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_20120101-20121231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_20120101-20121231.nc' 'SHA256' '0afbbc771c2976fa75517e619613a823344139caa80bc0debc9bc5857f96bfae'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_20130101-20131231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_20130101-20131231.nc' 'SHA256' 'c119cee50a827f084465b54457d28d84c69c07c3553fcd820b703b2f23d88c9e'
'tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_20140101-20141231.nc' 'https://esgf-data1.llnl.gov/thredds/fileServer/css03_data/CMIP6/CMIP/MIROC/MIROC-ES2L/historical/r9i1p1f2/day/tasmax/gn/v20200318/tasmax_day_MIROC-ES2L_historical_r9i1p1f2_gn_20140101-20141231.nc' 'SHA256' 'f5a29aec721bbd80beff368868fed0315d4d4037ce3b7fe39525ba51c6feb528'
EOF--dataset.file.url.chksum_type.chksum
)"

# ESG_HOME should point to the directory containing ESG credentials.
#   Default is $HOME/.esg
ESG_HOME=${ESG_HOME:-$HOME/.esg}
[[ -d $ESG_HOME ]] || mkdir -p $ESG_HOME

ESG_CREDENTIALS=${X509_USER_PROXY:-$ESG_HOME/credentials.pem}
ESG_CERT_DIR=${X509_CERT_DIR:-$ESG_HOME/certificates}
MYPROXY_STATUS=$HOME/.MyProxyLogon
COOKIE_JAR=$ESG_HOME/cookies
MYPROXY_GETCERT=$ESG_HOME/getcert.jar
CERT_EXPIRATION_WARNING=$((60 * 60 * 8))   #Eight hour (in seconds)

WGET_TRUSTED_CERTIFICATES=$ESG_HOME/certificates


# Configure checking of server SSL certificates.
#   Disabling server certificate checking can resolve problems with myproxy
#   servers being out of sync with datanodes.
CHECK_SERVER_CERT=${CHECK_SERVER_CERT:-Yes}

check_os() {
    local os_name=$(uname | awk '{print $1}')
    case ${os_name} in
        Linux)
            ((debug)) && echo "Linux operating system detected"
            LINUX=1
            MACOSX=0
            ;;
        Darwin)
            ((debug)) && echo "Mac OS X operating system detected"
            LINUX=0
            MACOSX=1
            ;;
        *)
            echo "Unrecognized OS [${os_name}]"
            return 1
            ;;
    esac
    return 0
}

#taken from http://stackoverflow.com/a/4025065/1182464
vercomp () {
    if [[ $1 == $2 ]]
    then
        return 0
    fi
    local IFS=.
    local i ver1=($1) ver2=($2)
    # fill empty fields in ver1 with zeros
    for ((i=${#ver1[@]}; i<${#ver2[@]}; i++))
    do
        ver1[i]=0
    done
    for ((i=0; i<${#ver1[@]}; i++))
    do
        if [[ -z ${ver2[i]} ]]
        then
            # fill empty fields in ver2 with zeros
            ver2[i]=0
        fi
        if ((10#${ver1[i]} > 10#${ver2[i]}))
        then
            return 1
        fi
        if ((10#${ver1[i]} < 10#${ver2[i]}))
        then
            return 2
        fi
    done
    return 0
}

check_commands() {
    #check wget
    local MIN_WGET_VERSION=1.10
    vercomp $(wget -V | sed -n 's/^.* \([1-9]\.[0-9.]*\) .*$/\1/p') $MIN_WGET_VERSION
    case $? in
        2) #lower
            wget -V
            echo
            echo "** ERROR: wget version is too old. Use version $MIN_WGET_VERSION or greater. **" >&2
            exit 1
    esac
}

usage() {
    echo "Usage: $(basename $0) [flags] [openid] [username]"
    echo "Flags is one of:"
    sed -n '/^while getopts/,/^done/  s/^\([^)]*\)[^#]*#\(.*$\)/\1 \2/p' $0
    echo
    echo "This command stores the states of the downloads in .$0.status"
    echo "For more information check the website: http://esgf.org/wiki/ESGF_wget"
}

#defaults
debug=0
clean_work=1

#parse flags
while getopts ':c:pfF:o:w:isuUndvqhHI:T' OPT; do
    case $OPT in
        H) skip_security=1 && use_http_sec=1;; #       : Authenticate with OpenID (username,) and password, without the need for a certificate.
        T) force_TLSv1=1;;              #       : Forces wget to use TLSv1. 
        c) ESG_CREDENTIALS="$OPTARG";;  #<cert> : use this certificate for authentication.
        f) force=1;;                    #       : force certificate retrieval (defaults to only once per day); for certificate-less authentication (see -H option), this flag will force login and refresh cookies.
        F) input_file="$OPTARG";;       #<file> : read input from file instead of the embedded one (use - to read from stdin)
        o) openId="$OPTARG";;           #<openid>: Provide OpenID instead of interactively asking for it.
        I) username_supplied="$OPTARG";;    #<user_id> : Explicitly set user ID.  By default, the user ID is extracted from the last component of the OpenID URL.  Use this flag to override this behaviour.                   
        w) output="$OPTARG";;           #<file> : Write embedded files into a file and exit
        i) insecure=1;;                 #       : set insecure mode, i.e. don't check server certificate
        s) skip_security=1 && use_cookies_for_http_basic_auth_start=1;;            #       : completely skip security. It will only work if the accessed data is not secured at all. -- works only if the accessed data is unsecured or a certificate exists or cookies are saved (latter applies to -H option only).
        u) update=1;;                   #       : Issue the search again and see if something has changed.
        U) update_files=1;;             #       : Update files from server overwriting local ones (detect with -u)
        n) dry_run=1;;                  #       : Don't download any files, just report.
        p) clean_work=0;;               #       : preserve data that failed checksum
        d) verbose=1;debug=1;;          #       : display debug information
        v) verbose=1;;                  #       : be more verbose
        q) quiet=1;;                    #       : be less verbose
        h) usage && exit 0;;            #       : displays this help
        \?) echo "Unknown option '$OPTARG'" >&2 && usage && exit 1;;
        \:) echo "Missing parameter for flag '$OPTARG'" >&2 && usage && exit 1;;
    esac
done
shift $(($OPTIND - 1))

#setup input as desired by the user
if [[ "$input_file" ]]; then
    if [[ "$input_file" == '-' ]]; then
        download_files="$(cat)" #read from STDIN
        exec 0</dev/tty #reopen STDIN as cat closed it
    else
        download_files="$(cat $input_file)" #read from file
    fi
fi

#if -w (output) was selected write file and finish:
if [[ "$output" ]]; then
    #check the file
    if [[ -f "$output" ]]; then
        read -p "Overwrite existing file $output? (y/N) " answ
        case $answ in y|Y|yes|Yes);; *) echo "Aborting then..."; exit 0;; esac
    fi
    echo "$download_files">$output
    exit
fi


#assure we have everything we need
check_commands

if ((update)); then
    echo "Checking the server for changes..."
    new_wget="$(wget "$search_url" -qO -)"
    compare_cmd="grep -vE '^(# Generated by|# Search URL|search_url=)'"
    if diff -q <(eval $compare_cmd<<<"$new_wget") <(eval $compare_cmd $0) >/dev/null; then
        echo "No changes detected."
    else
        echo "Wget was changed. Dowloading. (old renamed to $0.old.#N)"
        counter=0
        while [[ -f $0.old.$counter ]]; do ((counter++)); done
        mv $0 $0.old.$counter
        echo "$new_wget" > $0
    fi
    exit 0      
fi


##############################################################################
check_java() {
    if ! type java >& /dev/null; then
        echo "Java could not be found." >&2
        return 1
    fi
    if java -version 2>&1|grep openjdk >/dev/null; then
        openjdk=1;
    else
        openjdk=0;
    fi
    jversion=($(jversion=$(java -version 2>&1 | awk '/version/ {gsub("\"","");print $3}'); echo ${jversion//./ }))
    mVer=${jversion[1]}
    if [ $openjdk -eq 1 ]; then
        mVer=${jversion[0]}
        if ((mVer<5)); then
            echo "Openjdk detected. Version 9+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    else
    
        if ((mVer<5)); then
            echo "Java version 1.5+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    fi
}

check_myproxy_logon() {
    if ! type myproxy-logon >& /dev/null; then
	echo "myproxy-logon could not be found." >&2
	return 1
    fi
    echo "myproxy-logon found" >&2
}

proxy_to_java() {
    local proxy_user proxy_pass proxy_server proxy_port
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$http_proxy)
    local JAVA_PROXY=
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyPort=$proxy_port"
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$https_proxy)
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyPort=$proxy_port"
    
    echo "$JAVA_PROXY"
}

# get certificates from github
get_certificates() {
    # don't if this was already done today
    [[ -z $force && "$(find $ESG_CERT_DIR -type d -mtime -1 2>/dev/null)" ]] && return 0
    echo -n "Retrieving Federation Certificates..." >&2

    if ! wget -O $ESG_HOME/esg-truststore.ts --no-check-certificate https://github.com/ESGF/esgf-dist/raw/master/installer/certs/esg-truststore.ts; then
        echo "Could not fetch esg-truststore";
        return 1
    fi
    
    if ! wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar -O - -q | tar x -C $ESG_HOME; then
        #certificates tarred into esg_trusted_certificates. (if it breaks, let the user know why
        wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar
        echo "Could't update certs!" >&2
        return 1
    else
        #if here everythng went fine. Replace old cert with this ones    
        [[ -d $ESG_CERT_DIR ]] && rm -r $ESG_CERT_DIR || mkdir -p $(dirname $ESG_CERT_DIR)
        mv $ESG_HOME/esg_trusted_certificates $ESG_CERT_DIR
        touch $ESG_CERT_DIR
        echo "done!" >&2
    fi

}

# Retrieve ESG credentials
unset pass
get_credentials() {
    if check_java
    then
	use_java=1
    else	
	use_java=0
	echo "No suitable java for obtaining certificate - checking for myproxy-logon instead" >&2
	check_myproxy_logon || exit 1
    fi
    #get all certificates
    get_certificates

    if [[ -z "$(find $MYPROXY_GETCERT -type f -mtime -1 2>/dev/null)" ]]; then
        echo -n "(Downloading $MYPROXY_GETCERT... "
        mkdir -p $(dirname $MYPROXY_GETCERT)
        if wget -q --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/getcert.jar -O $MYPROXY_GETCERT;then
            echo 'done)'
            touch $MYPROXY_GETCERT
        else
            echo 'failed)'
        fi
    fi

    #if the user already defined one, use it
    if [[ -z $openId ]]; then
        #try to parse the last valid value if any
        [[ -f "$MYPROXY_STATUS" ]] && openId=$(awk -F= '/^OpenID/ {gsub("\\\\", ""); print $2}' $MYPROXY_STATUS)
        if [[ -z $openId ]]; then
            #no OpenID, we need to ask the user
            echo -n "Please give your OpenID (Example: https://myserver/example/username) ? "
        else
            #Allow the user to change it if desired
            echo -n "Please give your OpenID (hit ENTER to accept default: $openId)? "
        fi
        read -e
        [[ "$REPLY" ]] && openId="$REPLY"
    else
        ((verbose)) && echo "Using user defined OpenID $openId (to change use -o <open_id>)"
    fi

    if grep -q ceda.ac.uk <<<$openId; then
        username=${openId##*/}
        echo -n "Please give your username if different [$username]: "
        read -e
        [[ "$REPLY" ]] && username="$REPLY"
    fi
    


    if [ $use_java -eq 1 ]
    then
        local args=
        #get password
	[[ ! "$pass" ]] && read -sp "MyProxy Password? " pass
        [[ "$openId" ]] && args=$args" --oid $openId"
        [[ "$pass" ]] && args=$args" -P $pass"
        [[ "$username" ]] && args=$args" -l $username"
        
        echo -n $'\nRetrieving Credentials...' >&2
        if ! java $(proxy_to_java) -jar $MYPROXY_GETCERT $args --ca-directory $ESG_CERT_DIR --output $ESG_CREDENTIALS ; then        
            echo "Certificate could not be retrieved"
            exit 1
        fi
        echo "done!" >&2
    else
        args=`openid_to_myproxy_args $openId $username` || exit 1
        if ! myproxy-logon $args -b -o $ESG_CREDENTIALS
	then
            echo "Certificate could not be retrieved"
	    exit 1
        fi
	cp $HOME/.globus/certificates/* $ESG_CERT_DIR/	
    fi
}

openid_to_myproxy_args() {
  python - <<EOF || exit 1
import sys
import re
import xml.etree.ElementTree as ET
import urllib2
openid = "$1"
username = "$2" or re.sub(".*/", "", openid)
e = ET.parse(urllib2.urlopen(openid))
servs = [el for el in e.getiterator() if el.tag.endswith("Service")]
for serv in servs:
    servinfo = dict([(re.sub(".*}", "", c.tag), c.text)
                     for c in serv.getchildren()])
    try:
        if servinfo["Type"].endswith("myproxy-service"):
            m = re.match("socket://(.*):(.*)", servinfo["URI"])
            if m:
                host = m.group(1)
                port = m.group(2)
                print "-s %s -p %s -l %s" % (host, port, username)
                break
    except KeyError:
        continue
else:
    sys.stderr.write("myproxy service could not be found\n")
    sys.exit(1)
EOF
}

# check the certificate validity
check_cert() {
    if [[ ! -f "$ESG_CERT" || $force ]]; then
        #not there, just get it
        get_credentials
    elif which openssl &>/dev/null; then
        #check openssl and certificate
        if ! openssl x509 -checkend $CERT_EXPIRATION_WARNING -noout -in $ESG_CERT 2>/dev/null; then
            echo "The certificate expires in less than $((CERT_EXPIRATION_WARNING / 60 / 60)) hour(s). Renewing..."
            get_credentials
        else
            #ok, certificate is fine
            return 0
        fi
    fi
}

#
# Detect ESG credentials
#
find_credentials() {

    #is X509_USER_PROXY or $HOME/.esg/credential.pem
    if [[ -f "$ESG_CREDENTIALS" ]]; then
        # file found, proceed.
        ESG_CERT="$ESG_CREDENTIALS"
        ESG_KEY="$ESG_CREDENTIALS"
    elif [[ -f "$X509_USER_CERT" && -f "$X509_USER_KEY" ]]; then
        # second try, use these certificates.
        ESG_CERT="$X509_USER_CERT"
        ESG_KEY="$X509_USER_KEY"
    else
        # If credentials are not present, just point to where they should go 
        echo "No ESG Credentials found in $ESG_CREDENTIALS" >&2
            ESG_CERT="$ESG_CREDENTIALS"
            ESG_KEY="$ESG_CREDENTIALS"
            #they will be retrieved later one
    fi


    #chek openssl and certificate
    if (which openssl &>/dev/null); then
        if ( openssl version | grep 'OpenSSL 1\.0' ); then
            echo '** WARNING: ESGF Host certificate checking might not be compatible with OpenSSL 1.0+'
        fi
        check_cert || { (($?==1)); exit 1; }
    fi
    
    if [[ $CHECK_SERVER_CERT == "Yes" ]]; then
        [[ -d "$ESG_CERT_DIR" ]] || { echo "CA certs not found. Aborting."; exit 1; }
        PKI_WGET_OPTS="--ca-directory=$ESG_CERT_DIR"
    fi

    #some wget version complain if there's no file present
    [[ -f $COOKIE_JAR ]] || touch $COOKIE_JAR

    PKI_WGET_OPTS="$PKI_WGET_OPTS --certificate=$ESG_CERT --private-key=$ESG_KEY --save-cookies=$COOKIE_JAR --load-cookies=$COOKIE_JAR --ca-certificate=$ESG_CERT"

}

check_chksum() {
    local file="$1"
    local chk_type=$2
    local chk_value=$3
    local local_chksum=Unknown

    case $chk_type in
        md5) local_chksum=$(md5sum_ $file | cut -f1 -d" ");;
        sha256) local_chksum=$(sha256sum_ $file|awk '{print $1}'|cut -d ' ' -f1);;
        *) echo "Can't verify checksum." && return 0;;
    esac

    #verify
    ((debug)) && echo "local:$local_chksum vs remote:$chk_value" >&2
    echo $local_chksum
}

#Our own md5sum function call that takes into account machines that don't have md5sum but do have md5 (i.e. mac os x)
md5sum_() {
    hash -r
    if type md5sum >& /dev/null; then
        echo $(md5sum $@)
    else
        echo $(md5 $@ | sed -n 's/MD5[ ]*\(.*\)[^=]*=[ ]*\(.*$\)/\2 \1/p')
    fi
}

#Our own sha256sum function call that takes into account machines that don't have sha256sum but do have sha2 (i.e. mac os x)
sha256sum_() {
    hash -r
    if type sha256sum >& /dev/null; then
        echo $(sha256sum $@)
    elif type shasum >& /dev/null; then
        echo $(shasum -a 256 $@)
    else
        echo $(sha2 -q -256 $@)
    fi
}

get_mod_time_() {
    if ((MACOSX)); then
        #on a mac modtime is stat -f %m <file>
        echo "$(stat -f %m $@)"
    else
        #on linux (cygwin) modtime is stat -c %Y <file>
        echo "$(stat -c %Y $@)"
    fi
    return 0;
}

remove_from_cache() {
    local entry="$1"
    local tmp_file="$(grep -ve "^$entry" "$CACHE_FILE")"
    echo "$tmp_file" > "$CACHE_FILE"
    unset cached
}

#Download data from node using cookies and not certificates.
download_http_sec()
{
  #The data to be downloaded.
  data=" $url"
  filename="$file"  

  #Wget args.
  if ((insecure)) 
  then
   wget_args=" --no-check-certificate --cookies=on  --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt " 
  else
   wget_args=" --ca-directory=$WGET_TRUSTED_CERTIFICATES --cookies=on --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt "  
  fi 

  if ((use_cookies_for_http_basic_auth_start)) || ((use_cookies_for_http_basic_auth)) 
  then
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
  fi
  
  if((force_TLSv1))
  then
   wget_args=" $wget_args"" --secure-protocol=TLSv1 "
  fi
  
  
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
    wget_args="$wget_args $ESGF_WGET_OPTS"
  fi  
  

  #use cookies for the next downloads
  use_cookies_for_http_basic_auth=1;
   
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "wget $wget_args $data\n"
  fi


  #Try to download the data. 
  command="wget $wget_args -O $filename $data"
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
      
  #Extract orp service from url ?
  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" == 1 )) && 
  if  echo "$http_resp" | grep -q "/esg-orp/"      
  then
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   orp_service=$(echo "$urls" | tr '\n' ' ' | cut -d' ' -f 2)


   #Use cookies for transaction with orp.
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
   
   #Download data using either http basic auth or http login form.
   if [[ "$openid_c" == */openid/  || "$openid_c" == */openid ]]
   then
    download_http_sec_open_id
   else
    download_http_sec_decide_service
   fi
  else  
   if    echo "$http_resp" | grep -q "401 Unauthorized"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || echo "$http_resp" | grep -q "Connection timed out."  \
      || echo "$http_resp" | grep -q "no-check-certificate"  \
      || (( $cmd_exit_status != 0 ))      
   then 
    echo "ERROR : http request to OpenID Relying Party service failed."
    failed=1
   fi
  fi
}


#Function that decides which implementaion of idp to use.
download_http_sec_decide_service()
{
  #find claimed id

  pos=$(echo "$openid_c" | egrep -o '/' | wc -l)
  username_c=$(echo "$openid_c"  | cut -d'/' -f "$(($pos + 1))")
  esgf_uri=$(echo "$openid_c" | egrep -o '/esgf-idp/openid/')

  host=$(echo "$openid_c"  | cut -d'/' -f 3)
  #test ceda first.

  if [[ -z "$esgf_uri" ]]
  then
   openid_c_tmp="https://""$host""/openid/"
  else
   openid_c_tmp="https://""$host""/esgf-idp/openid/" 
  fi

  command="wget "$openid_c_tmp" --no-check-certificate ${force_TLSv1:+--secure-protocol=TLSv1} -O-"
        
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
   command="$command $ESGF_WGET_OPTS"
  fi  
          
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "$command\n"
  fi
            

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
  

  if    echo "$http_resp" | grep -q "[application/xrds+xml]"  \
     && echo "$http_resp" | grep -q "200 OK"  \
     && (( cmd_exit_status == 0 ))       
  then
   openid_c=$openid_c_tmp
   download_http_sec_open_id
  else
   if [[ -z "$esgf_uri" ]]
   then
    echo "ERROR : HTTP request to OpenID Relying Party service failed."
    failed=1
   else
   download_http_sec_cl_id
   fi
  fi
}


download_http_sec_retry()
{
  echo -e "\nRetrying....\n"
  #Retry in case that last redirect did not work, this happens with older version of wget.
  command="wget $wget_args $data"
      
  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi   
   
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"

  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
   
  if    echo "$http_resp" | grep -q "401 Unauthorized"  \
     || echo "$http_resp" | grep -q "403: Forbidden"  \
     || echo "$http_resp" | grep -q "Connection timed out."  \
     || echo "$http_resp" | grep -q "no-check-certificate"  \
     || (( $cmd_exit_status != 0 ))      
  then 
   echo -e "\nERROR : Retry failed.\n"
   #rm "$filename"
   failed=1
  fi #if retry failed.
}

#Function for downloading data using the claimed id.
download_http_sec_cl_id()
{
  #Http request for sending openid to the orp service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\"  $wget_args -O- https://$orp_service/esg-orp/j_spring_openid_security_check.htm "

  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "wget $command\n"
  fi 
  
  
  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"

  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
    
  
  #Extract orp service from openid ?
  #Evaluate response.If redirected to idp service send the credentials.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( redirects == 2  )) && 
  if  echo "$http_resp" | grep -q "login.htm"  && (( cmd_exit_status == 0 ))   
  then 
  
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   idp_service=$(echo "$urls"  | tr '\n' ' ' | cut -d' ' -f 2) 
      
   command="wget --post-data  password=\"$password_c\" $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$idp_service/esgf-idp/idp/login.htm"
   

   #Debug message.
   if  ((debug))
   then
    echo -e "Executing:\n"
    echo -e "wget $command\n"
   fi 

   #Execution of command.
   http_resp=$(eval $command  2>&1)
   cmd_exit_status="$?"
      
   if ((debug))
   then
    echo -e "\nHTTP response:\n $http_resp\n"
   fi 
        
   #Evaluate response. 
   #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
   #(( "$redirects" != 5 )) \ 
   if    echo "$http_resp" | grep -q "text/html"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || (( cmd_exit_status != 0 ))        
   then 
    rm "$filename"
    download_http_sec_retry
   fi
 
  else
   echo "ERROR : HTTP request to OpenID Provider service failed."
   failed=1
  fi #if redirected to idp.  
}



download_http_sec_open_id()
{
  #Http request for sending openid to the orp web service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\" --header=\"esgf-idea-agent-type:basic_auth\" --http-user=\"$username_c\" --http-password=\"$password_c\"  $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$orp_service/esg-orp/j_spring_openid_security_check.htm "


  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi 

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 

  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" != 7 )) ||
  if   echo "$http_resp" | grep -q "text/html"  ||  (( $cmd_exit_status != 0 ))   
  then
   rm "$filename"
   download_http_sec_retry     
  fi #if error during http basic authentication. 
  
}


download() {
    wget="wget ${insecure:+--no-check-certificate} ${quiet:+-q} ${quiet:--v} -c ${force_TLSv1:+--secure-protocol=TLSv1} $PKI_WGET_OPTS"
    
    while read line
    do
        # read csv here document into proper variables
        eval $(awk -F "' '" '{$0=substr($0,2,length($0)-2); $3=tolower($3); print "file=\""$1"\";url=\""$2"\";chksum_type=\""$3"\";chksum=\""$4"\""}' <(echo $line) )

        #Process the file
        echo -n "$file ..."

        #get the cached entry if any.
        cached="$(grep -e "^$file" "$CACHE_FILE")"
        
        #if we have the cache entry but no file, clean it.
        if [[ ! -f $file && "$cached" ]]; then
            #the file was removed, clean the cache
            remove_from_cache "$file"
            unset cached
        fi
        
        #check it wasn't modified
        if [[ -n "$cached" && "$(get_mod_time_ $file)" == $(echo "$cached" | cut -d ' ' -f2) ]]; then
                    if [[ "$chksum" == "$(echo "$cached" | cut -d ' ' -f3)" ]]; then
                echo "Already downloaded and verified"
                continue
            elif ((update_files)); then
                #user want's to overwrite newer files
                rm $file
                remove_from_cache "$file"
                unset cached
            else
                #file on server is different from what we have. 
                echo "WARNING: The remote file was changed (probably a new version is available). Use -U to Update/overwrite"
                continue
            fi
        fi
        unset chksum_err_value chksum_err_count
        
        while : ; do
            # (if we had the file size, we could check before trying to complete)
            echo "Downloading"
            [[ ! -d "$(dirname "$file")" ]] && mkdir -p "$(dirname "$file")"
            if ((dry_run)); then
                #all important info was already displayed, if in dry_run mode just abort
                #No status will be stored
                break
            else
                if ((use_http_sec))
                then
                 download_http_sec
                 if ((failed))
                 then
                  break
                 fi
                else
                 $wget -O "$file" $url || { failed=1; break; }  
                fi                
            fi

            #check if file is there
            if [[ -f $file ]]; then
                ((debug)) && echo file found
                if [[ ! "$chksum" ]]; then
                    echo "Checksum not provided, can't verify file integrity"
                    break
                fi
                result_chksum=$(check_chksum "$file" $chksum_type $chksum)
                if [[ "$result_chksum" != "$chksum" ]]; then
                    echo "  $chksum_type failed!"
                    if ((clean_work)); then
                        if !((chksum_err_count)); then
                                chksum_err_value=$result_chksum
                                chksum_err_count=2
                            elif ((checksum_err_count--)); then
                                if [[ "$result_chksum" != "$chksum_err_value" ]]; then
                                    #this is a real transmission problem
                                    chksum_err_value=$result_chksum
                                    chksum_err_count=2
                                fi
                            else
                                #ok if here we keep getting the same "different" checksum
                                echo "The file returns always a different checksum!"
                                echo "Contact the data owner to verify what is happening."
                                echo
                                sleep 1
                                break
                            fi
                        
                            rm $file
                            #try again
                            echo -n "  re-trying..."
                            continue
                    else
                            echo "  don't use -p or remove manually."
                    fi
                else
                    echo "  $chksum_type ok. done!"
                    echo "$file" $(get_mod_time_ "$file") $chksum >> $CACHE_FILE
                fi
            fi
            #done!
            break
        done
        
        if ((failed)); then
            echo "download failed"
            # most common failure is certificate expiration, so check this
            #if we have the pasword we can retrigger download
            ((!skip_security)) && [[ "$pass" ]] && check_cert
            unset failed
        fi
        
done <<<"$download_files"

}

dedup_cache_() {
    local file=${1:-${CACHE_FILE}}
    ((debug)) && echo "dedup'ing cache ${file} ..."
    local tmp=$(LC_ALL='C' sort  -r -k1,2 $file | awk '!($1 in a) {a[$1];print $0}' | sort -k2,2)
    ((DEBUG)) && echo "$tmp"
    echo "$tmp" > $file
    ((debug)) && echo "(cache dedup'ed)"
}

http_basic_auth_func_info_message()
{
  echo  "********************************************************************************"
  echo  "*                                                                              *"
  echo  "* Note that new functionality to allow authentication without the need for     *"
  echo  "* certificates is available with this version of the wget script.  To enable,  *"
  echo  "* use the \"-H\" option and enter your OpenID and password when prompted:        *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -H [options...]                                     *"
  echo  "*                                                                              *"
  echo  "* For a full description of the available options use the help option:         *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -h                                                  *"
  echo  "*                                                                              *"
  echo  "********************************************************************************"
}

#
# MAIN
#

if ((!use_http_sec))
then 
 http_basic_auth_func_info_message
fi

echo "Running $(basename $0) version: $version"
((verbose)) && echo "we use other tools in here, don't try to user their proposed 'options' directly"
echo "Use $(basename $0) -h for help."$'\n'

((debug)) && cat<<EOF
** Debug info **
ESG_HOME=$ESG_HOME
ESG_CREDENTIALS=$ESG_CREDENTIALS
ESG_CERT_DIR=$ESG_CERT_DIR
** -- ** -- ** -- ** --

EOF


cat <<'EOF-MESSAGE'
Script created for 165 file(s)
(The count won't match if you manually edit this file!)



EOF-MESSAGE
sleep 1

check_os
((!skip_security)) && find_credentials

if ((use_http_sec))
then 
     
 if (( ! insecure))
 then 
  get_certificates
 fi

 #Cookies folder.
 COOKIES_FOLDER="$ESG_HOME/wget_cookies"
 
 if (( force ))
 then
  if [ -d $COOKIES_FOLDER ] 
  then
   rm -rf $COOKIES_FOLDER
  fi
 fi

 #Create cookies folder. 
 if [[ ! -d $COOKIES_FOLDER ]] 
 then
  mkdir $COOKIES_FOLDER
 fi
 
 if((! use_cookies_for_http_basic_auth_start))
 then

  #Read openid.
  if [[ ! -z "$openId" ]]
  then
   openid_c="$openId"
  elif ( (("$#" > 1)) || (("$#" == 1)) ) 
  then
   openid_c=$1
  else
   read -p    "Enter your openid : " openid_c
  fi
  
  
  #Read username.
  if [[ ! -z "$username_supplied" ]]
  then
   username_c="$username_supplied"
  elif (("$#" == 2))
  then
   username_c=$2
  elif [[ "$openid_c" == */openid/ || "$openid_c" == */openid ]]
  then
   read -p    "Enter username : " username_c
  fi
  
  #Read password.
  read -s -p "Enter password : " password_c
  echo -e "\n"

 fi #use cookies

fi #use_http_sec 


#do we have old results? Create the file if not
[ ! -f $CACHE_FILE ] && echo "#filename mtime checksum" > $CACHE_FILE && chmod 666 $CACHE_FILE

#clean the force parameter if here (at htis point we already have the certificate)
unset force

download

dedup_cache_


echo "done"
